// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "mftgauge.h"

// Dispatch interfaces referenced by this interface
#include "Font.h"
#include "Picture.h"

/////////////////////////////////////////////////////////////////////////////
// CMFTGauge

IMPLEMENT_DYNCREATE(CMFTGauge, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CMFTGauge properties

long CMFTGauge::GetReadyState()
{
	long result;
	GetProperty(DISPID_READYSTATE, VT_I4, (void*)&result);
	return result;
}

BOOL CMFTGauge::GetIsVertical()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CMFTGauge::SetIsVertical(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

CString CMFTGauge::GetTitle()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CMFTGauge::SetTitle(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

OLE_COLOR CMFTGauge::GetBackColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_BACKCOLOR, VT_I4, (void*)&result);
	return result;
}

void CMFTGauge::SetBackColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_BACKCOLOR, VT_I4, propVal);
}

OLE_COLOR CMFTGauge::GetForeColor()
{
	OLE_COLOR result;
	GetProperty(DISPID_FORECOLOR, VT_I4, (void*)&result);
	return result;
}

void CMFTGauge::SetForeColor(OLE_COLOR propVal)
{
	SetProperty(DISPID_FORECOLOR, VT_I4, propVal);
}

float CMFTGauge::GetMaxValue1()
{
	float result;
	GetProperty(0x3, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetMaxValue1(float propVal)
{
	SetProperty(0x3, VT_R4, propVal);
}

float CMFTGauge::GetMinValue1()
{
	float result;
	GetProperty(0x4, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetMinValue1(float propVal)
{
	SetProperty(0x4, VT_R4, propVal);
}

float CMFTGauge::GetMaxValue2()
{
	float result;
	GetProperty(0x5, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetMaxValue2(float propVal)
{
	SetProperty(0x5, VT_R4, propVal);
}

float CMFTGauge::GetMinValue2()
{
	float result;
	GetProperty(0x6, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetMinValue2(float propVal)
{
	SetProperty(0x6, VT_R4, propVal);
}

float CMFTGauge::GetCurValue1()
{
	float result;
	GetProperty(0x7, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetCurValue1(float propVal)
{
	SetProperty(0x7, VT_R4, propVal);
}

float CMFTGauge::GetCurValue2()
{
	float result;
	GetProperty(0x8, VT_R4, (void*)&result);
	return result;
}

void CMFTGauge::SetCurValue2(float propVal)
{
	SetProperty(0x8, VT_R4, propVal);
}

COleFont CMFTGauge::GetMyFont()
{
	LPDISPATCH pDispatch;
	GetProperty(0x9, VT_DISPATCH, (void*)&pDispatch);
	return COleFont(pDispatch);
}

void CMFTGauge::SetMyFont(LPDISPATCH propVal)
{
	SetProperty(0x9, VT_DISPATCH, propVal);
}

CString CMFTGauge::GetLabel1()
{
	CString result;
	GetProperty(0xa, VT_BSTR, (void*)&result);
	return result;
}

void CMFTGauge::SetLabel1(LPCTSTR propVal)
{
	SetProperty(0xa, VT_BSTR, propVal);
}

CString CMFTGauge::GetLabel2()
{
	CString result;
	GetProperty(0xb, VT_BSTR, (void*)&result);
	return result;
}

void CMFTGauge::SetLabel2(LPCTSTR propVal)
{
	SetProperty(0xb, VT_BSTR, propVal);
}

CString CMFTGauge::GetUnit1()
{
	CString result;
	GetProperty(0xc, VT_BSTR, (void*)&result);
	return result;
}

void CMFTGauge::SetUnit1(LPCTSTR propVal)
{
	SetProperty(0xc, VT_BSTR, propVal);
}

CString CMFTGauge::GetUnit2()
{
	CString result;
	GetProperty(0xd, VT_BSTR, (void*)&result);
	return result;
}

void CMFTGauge::SetUnit2(LPCTSTR propVal)
{
	SetProperty(0xd, VT_BSTR, propVal);
}

CPicture CMFTGauge::GetControlPicture()
{
	LPDISPATCH pDispatch;
	GetProperty(0xe, VT_DISPATCH, (void*)&pDispatch);
	return CPicture(pDispatch);
}

void CMFTGauge::SetControlPicture(LPDISPATCH propVal)
{
	SetProperty(0xe, VT_DISPATCH, propVal);
}

BOOL CMFTGauge::GetLogaritScale2()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CMFTGauge::SetLogaritScale2(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CMFTGauge operations

void CMFTGauge::DrawBars()
{
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CMFTGauge::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
