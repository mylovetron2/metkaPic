CCS PCM C Compiler, Version 5.112, 43599               19-Mar-24 16:21

               Filename:   D:\Pic\DauMet\metkapic.lst

               ROM used:   7561 words (92%)
                           Largest free fragment is 493
               RAM used:   236 (64%) at main() level
                           302 (82%) worst case
               Stack used: 8 locations (6 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  18
0001:  MOVWF  0A
0002:  GOTO   000
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BSF    03.6
0016:  MOVF   0D,W
0017:  BCF    03.6
0018:  MOVWF  27
0019:  BSF    03.6
001A:  MOVF   0F,W
001B:  BCF    03.6
001C:  MOVWF  28
001D:  BSF    03.6
001E:  MOVF   0C,W
001F:  BCF    03.6
0020:  MOVWF  29
0021:  BSF    03.6
0022:  MOVF   0E,W
0023:  BCF    03.6
0024:  MOVWF  2A
0025:  BCF    03.7
0026:  BCF    03.5
0027:  BTFSS  0B.5
0028:  GOTO   02B
0029:  BTFSC  0B.2
002A:  GOTO   05C
002B:  BTFSS  0B.4
002C:  GOTO   02F
002D:  BTFSC  0B.1
002E:  GOTO   05F
002F:  MOVLW  8C
0030:  MOVWF  04
0031:  BTFSS  00.5
0032:  GOTO   035
0033:  BTFSC  0C.5
0034:  GOTO   062
0035:  MOVLW  8C
0036:  MOVWF  04
0037:  BTFSS  00.0
0038:  GOTO   03B
0039:  BTFSC  0C.0
003A:  GOTO   065
003B:  MOVF   22,W
003C:  MOVWF  04
003D:  MOVF   23,W
003E:  MOVWF  77
003F:  MOVF   24,W
0040:  MOVWF  78
0041:  MOVF   25,W
0042:  MOVWF  79
0043:  MOVF   26,W
0044:  MOVWF  7A
0045:  MOVF   27,W
0046:  BSF    03.6
0047:  MOVWF  0D
0048:  BCF    03.6
0049:  MOVF   28,W
004A:  BSF    03.6
004B:  MOVWF  0F
004C:  BCF    03.6
004D:  MOVF   29,W
004E:  BSF    03.6
004F:  MOVWF  0C
0050:  BCF    03.6
0051:  MOVF   2A,W
0052:  BSF    03.6
0053:  MOVWF  0E
0054:  BCF    03.6
0055:  MOVF   20,W
0056:  MOVWF  0A
0057:  SWAPF  21,W
0058:  MOVWF  03
0059:  SWAPF  7F,F
005A:  SWAPF  7F,W
005B:  RETFIE
005C:  BCF    0A.3
005D:  BCF    0A.4
005E:  GOTO   2F2
005F:  BCF    0A.3
0060:  BCF    0A.4
0061:  GOTO   297
0062:  BCF    0A.3
0063:  BCF    0A.4
0064:  GOTO   0E6
0065:  BCF    0A.3
0066:  BCF    0A.4
0067:  GOTO   31C
.................... #include <16F887.h>
.................... //////////// Standard Header file for the PIC16F887 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F887
0068:  BTFSC  03.1
0069:  GOTO   06D
006A:  MOVLW  A8
006B:  MOVWF  04
006C:  BSF    03.7
006D:  BSF    03.5
006E:  BSF    03.6
006F:  MOVF   23,W
0070:  XORWF  27,W
0071:  ANDLW  80
0072:  MOVWF  2D
0073:  BTFSS  23.7
0074:  GOTO   080
0075:  COMF   20,F
0076:  COMF   21,F
0077:  COMF   22,F
0078:  COMF   23,F
0079:  INCF   20,F
007A:  BTFSC  03.2
007B:  INCF   21,F
007C:  BTFSC  03.2
007D:  INCF   22,F
007E:  BTFSC  03.2
007F:  INCF   23,F
0080:  BTFSS  27.7
0081:  GOTO   08D
0082:  COMF   24,F
0083:  COMF   25,F
0084:  COMF   26,F
0085:  COMF   27,F
0086:  INCF   24,F
0087:  BTFSC  03.2
0088:  INCF   25,F
0089:  BTFSC  03.2
008A:  INCF   26,F
008B:  BTFSC  03.2
008C:  INCF   27,F
008D:  CLRF   77
008E:  CLRF   78
008F:  CLRF   79
0090:  CLRF   7A
0091:  CLRF   28
0092:  CLRF   29
0093:  CLRF   2A
0094:  CLRF   2B
0095:  MOVF   27,W
0096:  IORWF  26,W
0097:  IORWF  25,W
0098:  IORWF  24,W
0099:  BTFSC  03.2
009A:  GOTO   0CB
009B:  MOVLW  20
009C:  MOVWF  2C
009D:  BCF    03.0
009E:  RLF    20,F
009F:  RLF    21,F
00A0:  RLF    22,F
00A1:  RLF    23,F
00A2:  RLF    28,F
00A3:  RLF    29,F
00A4:  RLF    2A,F
00A5:  RLF    2B,F
00A6:  MOVF   27,W
00A7:  SUBWF  2B,W
00A8:  BTFSS  03.2
00A9:  GOTO   0B4
00AA:  MOVF   26,W
00AB:  SUBWF  2A,W
00AC:  BTFSS  03.2
00AD:  GOTO   0B4
00AE:  MOVF   25,W
00AF:  SUBWF  29,W
00B0:  BTFSS  03.2
00B1:  GOTO   0B4
00B2:  MOVF   24,W
00B3:  SUBWF  28,W
00B4:  BTFSS  03.0
00B5:  GOTO   0C5
00B6:  MOVF   24,W
00B7:  SUBWF  28,F
00B8:  MOVF   25,W
00B9:  BTFSS  03.0
00BA:  INCFSZ 25,W
00BB:  SUBWF  29,F
00BC:  MOVF   26,W
00BD:  BTFSS  03.0
00BE:  INCFSZ 26,W
00BF:  SUBWF  2A,F
00C0:  MOVF   27,W
00C1:  BTFSS  03.0
00C2:  INCFSZ 27,W
00C3:  SUBWF  2B,F
00C4:  BSF    03.0
00C5:  RLF    77,F
00C6:  RLF    78,F
00C7:  RLF    79,F
00C8:  RLF    7A,F
00C9:  DECFSZ 2C,F
00CA:  GOTO   09D
00CB:  BTFSS  2D.7
00CC:  GOTO   0D8
00CD:  COMF   77,F
00CE:  COMF   78,F
00CF:  COMF   79,F
00D0:  COMF   7A,F
00D1:  INCF   77,F
00D2:  BTFSC  03.2
00D3:  INCF   78,F
00D4:  BTFSC  03.2
00D5:  INCF   79,F
00D6:  BTFSC  03.2
00D7:  INCF   7A,F
00D8:  MOVF   28,W
00D9:  MOVWF  00
00DA:  INCF   04,F
00DB:  MOVF   29,W
00DC:  MOVWF  00
00DD:  INCF   04,F
00DE:  MOVF   2A,W
00DF:  MOVWF  00
00E0:  INCF   04,F
00E1:  MOVF   2B,W
00E2:  MOVWF  00
00E3:  BCF    03.5
00E4:  BCF    03.6
00E5:  RETURN
*
0270:  CLRF   77
0271:  CLRF   78
0272:  BSF    03.6
0273:  MOVF   6B,W
0274:  BCF    03.0
0275:  BTFSC  6C.0
0276:  ADDWF  77,F
0277:  RRF    77,F
0278:  RRF    78,F
0279:  BTFSC  6C.1
027A:  ADDWF  77,F
027B:  RRF    77,F
027C:  RRF    78,F
027D:  BTFSC  6C.2
027E:  ADDWF  77,F
027F:  RRF    77,F
0280:  RRF    78,F
0281:  BTFSC  6C.3
0282:  ADDWF  77,F
0283:  RRF    77,F
0284:  RRF    78,F
0285:  BTFSC  6C.4
0286:  ADDWF  77,F
0287:  RRF    77,F
0288:  RRF    78,F
0289:  BTFSC  6C.5
028A:  ADDWF  77,F
028B:  RRF    77,F
028C:  RRF    78,F
028D:  BTFSC  6C.6
028E:  ADDWF  77,F
028F:  RRF    77,F
0290:  RRF    78,F
0291:  BTFSC  6C.7
0292:  ADDWF  77,F
0293:  RRF    77,F
0294:  RRF    78,F
0295:  BCF    03.6
0296:  RETURN
*
03F9:  DATA C4,22
03FA:  DATA 50,2A
03FB:  DATA 48,1D
03FC:  DATA 00,00
03FD:  DATA 20,10
03FE:  DATA 20,10
03FF:  DATA 20,10
0400:  DATA 20,10
0401:  DATA 20,10
0402:  DATA 20,10
0403:  DATA 00,00
0404:  DATA 6D,00
0405:  DATA 55,28
0406:  DATA 00,01
0407:  DATA 44,27
0408:  DATA 00,01
0409:  DATA 53,28
040A:  DATA C5,22
040B:  DATA 44,1D
040C:  DATA 00,01
040D:  DATA 20,10
040E:  DATA 20,10
040F:  DATA 20,10
0410:  DATA 20,10
0411:  DATA 20,10
0412:  DATA 20,10
0413:  DATA 20,00
0414:  DATA ED,17
0415:  DATA ED,34
0416:  DATA 6E,00
0417:  DATA 55,28
0418:  DATA 00,01
0419:  DATA 44,27
041A:  DATA 00,01
041B:  DATA D4,22
041C:  DATA CE,29
041D:  DATA 20,1D
041E:  DATA 00,01
041F:  DATA 20,10
0420:  DATA 20,10
0421:  DATA 20,10
0422:  DATA 20,10
0423:  DATA 20,10
0424:  DATA 20,10
0425:  DATA 00,01
0426:  DATA EB,33
0427:  DATA 00,01
0428:  DATA CD,20
0429:  DATA D2,25
042A:  DATA 20,1D
042B:  DATA 00,01
042C:  DATA 20,10
042D:  DATA 20,10
042E:  DATA 20,10
042F:  DATA 20,10
0430:  DATA 20,10
0431:  DATA 20,10
0432:  DATA 20,10
0433:  DATA 00,01
0434:  DATA 3A,00
0435:  DATA 3A,00
0436:  DATA 3A,00
0437:  DATA 20,00
0438:  DATA 6D,00
0439:  DATA D2,30
043A:  DATA 77,10
043B:  DATA 3A,00
043C:  DATA C3,37
043D:  DATA 65,33
043E:  DATA 3A,00
043F:  DATA 20,10
0440:  DATA 20,10
0441:  DATA 20,10
0442:  DATA 00,01
0443:  DATA 41,2A
0444:  DATA 65,37
0445:  DATA 73,1D
0446:  DATA 00,01
0447:  DATA 20,10
0448:  DATA 20,10
0449:  DATA 20,10
044A:  DATA 00,01
044B:  DATA 42,2A
044C:  DATA 65,37
044D:  DATA 73,1D
044E:  DATA 00,01
044F:  DATA 20,10
0450:  DATA 20,10
0451:  DATA 20,10
0452:  DATA 00,01
0453:  DATA C1,34
0454:  DATA 6E,18
0455:  DATA 3A,00
0456:  DATA 20,10
0457:  DATA 20,10
0458:  DATA 20,00
0459:  DATA C1,34
045A:  DATA EE,18
045B:  DATA 3A,00
045C:  DATA 20,10
045D:  DATA 20,10
045E:  DATA 20,00
045F:  DATA C1,34
0460:  DATA 6E,19
0461:  DATA 3A,00
0462:  DATA 20,10
0463:  DATA 20,10
0464:  DATA 20,00
0465:  DATA C1,34
0466:  DATA EE,19
0467:  DATA 3A,00
0468:  DATA 20,10
0469:  DATA 20,10
046A:  DATA 20,00
046B:  DATA C1,34
046C:  DATA 6E,1A
046D:  DATA 3A,00
046E:  DATA 20,10
046F:  DATA 20,10
0470:  DATA 20,00
0471:  DATA C1,34
0472:  DATA EE,1A
0473:  DATA 3A,00
0474:  DATA 20,10
0475:  DATA 20,10
0476:  DATA 20,00
0477:  DATA C1,34
0478:  DATA 6E,1B
0479:  DATA 3A,00
047A:  DATA 20,10
047B:  DATA 20,10
047C:  DATA 20,00
047D:  DATA C1,34
047E:  DATA EE,1B
047F:  DATA 3A,00
0480:  DATA 20,10
0481:  DATA 20,10
0482:  DATA 20,00
0483:  DATA 20,10
0484:  DATA 20,10
0485:  DATA 20,10
0486:  DATA 20,10
0487:  DATA 20,10
0488:  DATA 20,10
0489:  DATA 20,10
048A:  DATA 20,10
048B:  DATA 20,10
048C:  DATA 20,10
048D:  DATA 20,10
048E:  DATA 20,10
048F:  DATA 20,10
0490:  DATA 20,10
0491:  DATA 20,10
0492:  DATA 20,10
0493:  DATA 20,10
0494:  DATA 20,10
0495:  DATA 20,10
0496:  DATA 20,10
0497:  DATA 00,01
0498:  DATA 20,10
0499:  DATA 20,10
049A:  DATA 20,10
049B:  DATA 20,10
049C:  DATA 20,10
049D:  DATA 20,10
049E:  DATA 20,10
049F:  DATA 20,10
04A0:  DATA 20,10
04A1:  DATA 20,10
04A2:  DATA 20,10
04A3:  DATA 20,10
04A4:  DATA 20,10
04A5:  DATA 20,10
04A6:  DATA 20,10
04A7:  DATA 20,10
04A8:  DATA 20,10
04A9:  DATA 20,10
04AA:  DATA 20,10
04AB:  DATA 20,10
04AC:  DATA 00,00
*
0643:  BSF    03.6
0644:  MOVF   4D,W
0645:  CLRF   78
0646:  SUBWF  4C,W
0647:  BTFSC  03.0
0648:  GOTO   64C
0649:  MOVF   4C,W
064A:  MOVWF  77
064B:  GOTO   658
064C:  CLRF   77
064D:  MOVLW  08
064E:  MOVWF  4E
064F:  RLF    4C,F
0650:  RLF    77,F
0651:  MOVF   4D,W
0652:  SUBWF  77,W
0653:  BTFSC  03.0
0654:  MOVWF  77
0655:  RLF    78,F
0656:  DECFSZ 4E,F
0657:  GOTO   64F
0658:  BCF    03.6
0659:  RETURN
065A:  CLRF   78
065B:  CLRF   79
065C:  CLRF   77
065D:  CLRF   7A
065E:  BSF    03.6
065F:  MOVF   4F,W
0660:  BTFSS  03.2
0661:  GOTO   665
0662:  MOVF   4E,W
0663:  BTFSC  03.2
0664:  GOTO   67F
0665:  MOVLW  10
0666:  MOVWF  50
0667:  BCF    03.0
0668:  RLF    4C,F
0669:  RLF    4D,F
066A:  RLF    77,F
066B:  RLF    7A,F
066C:  MOVF   4F,W
066D:  SUBWF  7A,W
066E:  BTFSS  03.2
066F:  GOTO   672
0670:  MOVF   4E,W
0671:  SUBWF  77,W
0672:  BTFSS  03.0
0673:  GOTO   67B
0674:  MOVF   4E,W
0675:  SUBWF  77,F
0676:  BTFSS  03.0
0677:  DECF   7A,F
0678:  MOVF   4F,W
0679:  SUBWF  7A,F
067A:  BSF    03.0
067B:  RLF    78,F
067C:  RLF    79,F
067D:  DECFSZ 50,F
067E:  GOTO   667
067F:  BCF    03.6
0680:  BSF    0A.3
0681:  BSF    0A.4
0682:  GOTO   226 (RETURN)
0683:  MOVLW  8E
0684:  MOVWF  77
0685:  BSF    03.6
0686:  MOVF   4A,W
0687:  MOVWF  78
0688:  MOVF   49,W
0689:  MOVWF  79
068A:  CLRF   7A
068B:  MOVF   78,F
068C:  BTFSS  03.2
068D:  GOTO   698
068E:  MOVF   79,W
068F:  MOVWF  78
0690:  CLRF   79
0691:  MOVLW  08
0692:  SUBWF  77,F
0693:  MOVF   78,F
0694:  BTFSS  03.2
0695:  GOTO   698
0696:  CLRF   77
0697:  GOTO   6A0
0698:  BCF    03.0
0699:  BTFSC  78.7
069A:  GOTO   69F
069B:  RLF    79,F
069C:  RLF    78,F
069D:  DECF   77,F
069E:  GOTO   698
069F:  BCF    78.7
06A0:  BCF    03.6
06A1:  RETURN
06A2:  BSF    03.6
06A3:  MOVF   49,W
06A4:  BTFSC  03.2
06A5:  GOTO   713
06A6:  MOVWF  51
06A7:  MOVF   4D,W
06A8:  BTFSC  03.2
06A9:  GOTO   713
06AA:  ADDWF  51,F
06AB:  BTFSC  03.0
06AC:  GOTO   6B4
06AD:  MOVLW  7F
06AE:  SUBWF  51,F
06AF:  BTFSS  03.0
06B0:  GOTO   713
06B1:  BTFSC  03.2
06B2:  GOTO   713
06B3:  GOTO   6B8
06B4:  MOVLW  81
06B5:  ADDWF  51,F
06B6:  BTFSC  03.0
06B7:  GOTO   713
06B8:  MOVF   51,W
06B9:  MOVWF  77
06BA:  CLRF   78
06BB:  CLRF   79
06BC:  CLRF   7A
06BD:  MOVF   4A,W
06BE:  MOVWF  55
06BF:  BSF    55.7
06C0:  MOVF   4B,W
06C1:  MOVWF  54
06C2:  MOVF   4C,W
06C3:  MOVWF  53
06C4:  MOVLW  18
06C5:  MOVWF  51
06C6:  CLRF   52
06C7:  BTFSS  53.0
06C8:  GOTO   6E1
06C9:  MOVF   50,W
06CA:  ADDWF  7A,F
06CB:  BTFSS  03.0
06CC:  GOTO   6D3
06CD:  INCF   79,F
06CE:  BTFSS  03.2
06CF:  GOTO   6D3
06D0:  INCF   78,F
06D1:  BTFSC  03.2
06D2:  BSF    52.7
06D3:  MOVF   4F,W
06D4:  ADDWF  79,F
06D5:  BTFSS  03.0
06D6:  GOTO   6DA
06D7:  INCF   78,F
06D8:  BTFSC  03.2
06D9:  BSF    52.7
06DA:  MOVF   4E,W
06DB:  MOVWF  4B
06DC:  BSF    4B.7
06DD:  MOVF   4B,W
06DE:  ADDWF  78,F
06DF:  BTFSC  03.0
06E0:  BSF    52.7
06E1:  RLF    52,F
06E2:  RRF    78,F
06E3:  RRF    79,F
06E4:  RRF    7A,F
06E5:  RRF    55,F
06E6:  RRF    54,F
06E7:  RRF    53,F
06E8:  BCF    03.0
06E9:  DECFSZ 51,F
06EA:  GOTO   6C6
06EB:  MOVLW  01
06EC:  ADDWF  77,F
06ED:  BTFSC  03.0
06EE:  GOTO   713
06EF:  BTFSC  78.7
06F0:  GOTO   6F8
06F1:  RLF    55,F
06F2:  RLF    7A,F
06F3:  RLF    79,F
06F4:  RLF    78,F
06F5:  DECF   77,F
06F6:  BTFSC  03.2
06F7:  GOTO   713
06F8:  BTFSS  55.7
06F9:  GOTO   709
06FA:  INCF   7A,F
06FB:  BTFSS  03.2
06FC:  GOTO   709
06FD:  INCF   79,F
06FE:  BTFSS  03.2
06FF:  GOTO   709
0700:  INCF   78,F
0701:  BTFSS  03.2
0702:  GOTO   709
0703:  RRF    78,F
0704:  RRF    79,F
0705:  RRF    7A,F
0706:  INCF   77,F
0707:  BTFSC  03.2
0708:  GOTO   713
0709:  MOVF   4A,W
070A:  MOVWF  52
070B:  MOVF   4E,W
070C:  XORWF  52,F
070D:  BTFSS  52.7
070E:  GOTO   711
070F:  BSF    78.7
0710:  GOTO   717
0711:  BCF    78.7
0712:  GOTO   717
0713:  CLRF   77
0714:  CLRF   78
0715:  CLRF   79
0716:  CLRF   7A
0717:  BCF    03.6
0718:  RETURN
0719:  BSF    03.6
071A:  MOVF   49,W
071B:  BTFSC  03.2
071C:  GOTO   7DF
071D:  MOVWF  55
071E:  MOVF   4D,W
071F:  BTFSC  03.2
0720:  GOTO   7DF
0721:  SUBWF  55,F
0722:  BTFSS  03.0
0723:  GOTO   729
0724:  MOVLW  7F
0725:  ADDWF  55,F
0726:  BTFSC  03.0
0727:  GOTO   7DF
0728:  GOTO   72F
0729:  MOVLW  81
072A:  SUBWF  55,F
072B:  BTFSS  03.0
072C:  GOTO   7DF
072D:  BTFSC  03.2
072E:  GOTO   7DF
072F:  MOVF   55,W
0730:  MOVWF  77
0731:  CLRF   78
0732:  CLRF   79
0733:  CLRF   7A
0734:  CLRF   54
0735:  MOVF   4A,W
0736:  MOVWF  53
0737:  BSF    53.7
0738:  MOVF   4B,W
0739:  MOVWF  52
073A:  MOVF   4C,W
073B:  MOVWF  51
073C:  MOVLW  19
073D:  MOVWF  55
073E:  MOVF   50,W
073F:  SUBWF  51,F
0740:  BTFSC  03.0
0741:  GOTO   752
0742:  MOVLW  01
0743:  SUBWF  52,F
0744:  BTFSC  03.0
0745:  GOTO   752
0746:  SUBWF  53,F
0747:  BTFSC  03.0
0748:  GOTO   752
0749:  SUBWF  54,F
074A:  BTFSC  03.0
074B:  GOTO   752
074C:  INCF   54,F
074D:  INCF   53,F
074E:  INCF   52,F
074F:  MOVF   50,W
0750:  ADDWF  51,F
0751:  GOTO   784
0752:  MOVF   4F,W
0753:  SUBWF  52,F
0754:  BTFSC  03.0
0755:  GOTO   76D
0756:  MOVLW  01
0757:  SUBWF  53,F
0758:  BTFSC  03.0
0759:  GOTO   76D
075A:  SUBWF  54,F
075B:  BTFSC  03.0
075C:  GOTO   76D
075D:  INCF   54,F
075E:  INCF   53,F
075F:  MOVF   4F,W
0760:  ADDWF  52,F
0761:  MOVF   50,W
0762:  ADDWF  51,F
0763:  BTFSS  03.0
0764:  GOTO   784
0765:  INCF   52,F
0766:  BTFSS  03.2
0767:  GOTO   784
0768:  INCF   53,F
0769:  BTFSS  03.2
076A:  GOTO   784
076B:  INCF   54,F
076C:  GOTO   784
076D:  MOVF   4E,W
076E:  IORLW  80
076F:  SUBWF  53,F
0770:  BTFSC  03.0
0771:  GOTO   783
0772:  MOVLW  01
0773:  SUBWF  54,F
0774:  BTFSC  03.0
0775:  GOTO   783
0776:  INCF   54,F
0777:  MOVF   4E,W
0778:  IORLW  80
0779:  ADDWF  53,F
077A:  MOVF   4F,W
077B:  ADDWF  52,F
077C:  BTFSS  03.0
077D:  GOTO   761
077E:  INCF   53,F
077F:  BTFSS  03.2
0780:  GOTO   761
0781:  INCF   54,F
0782:  GOTO   761
0783:  BSF    7A.0
0784:  DECFSZ 55,F
0785:  GOTO   787
0786:  GOTO   792
0787:  BCF    03.0
0788:  RLF    51,F
0789:  RLF    52,F
078A:  RLF    53,F
078B:  RLF    54,F
078C:  BCF    03.0
078D:  RLF    7A,F
078E:  RLF    79,F
078F:  RLF    78,F
0790:  RLF    56,F
0791:  GOTO   73E
0792:  BTFSS  56.0
0793:  GOTO   79A
0794:  BCF    03.0
0795:  RRF    78,F
0796:  RRF    79,F
0797:  RRF    7A,F
0798:  RRF    56,F
0799:  GOTO   79D
079A:  DECF   77,F
079B:  BTFSC  03.2
079C:  GOTO   7DF
079D:  BTFSC  56.7
079E:  GOTO   7C6
079F:  BCF    03.0
07A0:  RLF    51,F
07A1:  RLF    52,F
07A2:  RLF    53,F
07A3:  RLF    54,F
07A4:  MOVF   50,W
07A5:  SUBWF  51,F
07A6:  BTFSC  03.0
07A7:  GOTO   7B2
07A8:  MOVLW  01
07A9:  SUBWF  52,F
07AA:  BTFSC  03.0
07AB:  GOTO   7B2
07AC:  SUBWF  53,F
07AD:  BTFSC  03.0
07AE:  GOTO   7B2
07AF:  SUBWF  54,F
07B0:  BTFSS  03.0
07B1:  GOTO   7D5
07B2:  MOVF   4F,W
07B3:  SUBWF  52,F
07B4:  BTFSC  03.0
07B5:  GOTO   7BD
07B6:  MOVLW  01
07B7:  SUBWF  53,F
07B8:  BTFSC  03.0
07B9:  GOTO   7BD
07BA:  SUBWF  54,F
07BB:  BTFSS  03.0
07BC:  GOTO   7D5
07BD:  MOVF   4E,W
07BE:  IORLW  80
07BF:  SUBWF  53,F
07C0:  BTFSC  03.0
07C1:  GOTO   7C6
07C2:  MOVLW  01
07C3:  SUBWF  54,F
07C4:  BTFSS  03.0
07C5:  GOTO   7D5
07C6:  INCF   7A,F
07C7:  BTFSS  03.2
07C8:  GOTO   7D5
07C9:  INCF   79,F
07CA:  BTFSS  03.2
07CB:  GOTO   7D5
07CC:  INCF   78,F
07CD:  BTFSS  03.2
07CE:  GOTO   7D5
07CF:  INCF   77,F
07D0:  BTFSC  03.2
07D1:  GOTO   7DF
07D2:  RRF    78,F
07D3:  RRF    79,F
07D4:  RRF    7A,F
07D5:  MOVF   4A,W
07D6:  MOVWF  55
07D7:  MOVF   4E,W
07D8:  XORWF  55,F
07D9:  BTFSS  55.7
07DA:  GOTO   7DD
07DB:  BSF    78.7
07DC:  GOTO   7E3
07DD:  BCF    78.7
07DE:  GOTO   7E3
07DF:  CLRF   77
07E0:  CLRF   78
07E1:  CLRF   79
07E2:  CLRF   7A
07E3:  BCF    03.6
07E4:  RETURN
*
0800:  MOVLW  80
0801:  BTFSS  03.1
0802:  GOTO   006
0803:  BSF    03.6
0804:  XORWF  4D,F
0805:  BCF    03.6
0806:  BSF    03.6
0807:  CLRF   52
0808:  CLRF   53
0809:  MOVF   49,W
080A:  MOVWF  51
080B:  MOVF   4D,W
080C:  XORWF  51,F
080D:  MOVF   48,W
080E:  BTFSC  03.2
080F:  GOTO   0F5
0810:  MOVWF  50
0811:  MOVWF  77
0812:  MOVF   4C,W
0813:  BTFSC  03.2
0814:  GOTO   0FE
0815:  SUBWF  50,F
0816:  BTFSC  03.2
0817:  GOTO   09A
0818:  BTFSC  03.0
0819:  GOTO   01B
081A:  GOTO   058
081B:  MOVF   4D,W
081C:  MOVWF  56
081D:  BSF    56.7
081E:  MOVF   4E,W
081F:  MOVWF  55
0820:  MOVF   4F,W
0821:  MOVWF  54
0822:  CLRF   53
0823:  BCF    03.0
0824:  RRF    56,F
0825:  RRF    55,F
0826:  RRF    54,F
0827:  RRF    53,F
0828:  DECFSZ 50,F
0829:  GOTO   022
082A:  BTFSS  51.7
082B:  GOTO   02F
082C:  BSF    52.0
082D:  GOTO   112
082E:  BCF    52.0
082F:  BCF    50.0
0830:  BSF    52.4
0831:  MOVLW  4B
0832:  MOVWF  04
0833:  BSF    03.7
0834:  GOTO   128
0835:  BCF    52.4
0836:  BTFSC  51.7
0837:  GOTO   042
0838:  BTFSS  50.0
0839:  GOTO   04D
083A:  RRF    56,F
083B:  RRF    55,F
083C:  RRF    54,F
083D:  RRF    53,F
083E:  INCF   77,F
083F:  BTFSC  03.2
0840:  GOTO   10D
0841:  GOTO   04D
0842:  BTFSC  56.7
0843:  GOTO   050
0844:  BCF    03.0
0845:  RLF    53,F
0846:  RLF    54,F
0847:  RLF    55,F
0848:  RLF    56,F
0849:  DECF   77,F
084A:  BTFSC  03.2
084B:  GOTO   10D
084C:  GOTO   042
084D:  BSF    52.6
084E:  GOTO   0BA
084F:  BCF    52.6
0850:  MOVF   49,W
0851:  MOVWF  51
0852:  BTFSS  51.7
0853:  GOTO   056
0854:  BSF    56.7
0855:  GOTO   106
0856:  BCF    56.7
0857:  GOTO   106
0858:  MOVF   4C,W
0859:  MOVWF  50
085A:  MOVWF  77
085B:  MOVF   48,W
085C:  SUBWF  50,F
085D:  MOVF   49,W
085E:  MOVWF  56
085F:  BSF    56.7
0860:  MOVF   4A,W
0861:  MOVWF  55
0862:  MOVF   4B,W
0863:  MOVWF  54
0864:  CLRF   53
0865:  BCF    03.0
0866:  RRF    56,F
0867:  RRF    55,F
0868:  RRF    54,F
0869:  RRF    53,F
086A:  DECFSZ 50,F
086B:  GOTO   064
086C:  BTFSS  51.7
086D:  GOTO   071
086E:  BSF    52.1
086F:  GOTO   112
0870:  BCF    52.1
0871:  BCF    50.0
0872:  BSF    52.5
0873:  MOVLW  4F
0874:  MOVWF  04
0875:  BSF    03.7
0876:  GOTO   128
0877:  BCF    52.5
0878:  BTFSC  51.7
0879:  GOTO   084
087A:  BTFSS  50.0
087B:  GOTO   08F
087C:  RRF    56,F
087D:  RRF    55,F
087E:  RRF    54,F
087F:  RRF    53,F
0880:  INCF   77,F
0881:  BTFSC  03.2
0882:  GOTO   10D
0883:  GOTO   08F
0884:  BTFSC  56.7
0885:  GOTO   092
0886:  BCF    03.0
0887:  RLF    53,F
0888:  RLF    54,F
0889:  RLF    55,F
088A:  RLF    56,F
088B:  DECF   77,F
088C:  BTFSC  03.2
088D:  GOTO   10D
088E:  GOTO   084
088F:  BSF    52.7
0890:  GOTO   0BA
0891:  BCF    52.7
0892:  MOVF   4D,W
0893:  MOVWF  51
0894:  BTFSS  51.7
0895:  GOTO   098
0896:  BSF    56.7
0897:  GOTO   106
0898:  BCF    56.7
0899:  GOTO   106
089A:  MOVF   4D,W
089B:  MOVWF  56
089C:  BSF    56.7
089D:  MOVF   4E,W
089E:  MOVWF  55
089F:  MOVF   4F,W
08A0:  MOVWF  54
08A1:  BTFSS  51.7
08A2:  GOTO   0A7
08A3:  BCF    56.7
08A4:  BSF    52.2
08A5:  GOTO   112
08A6:  BCF    52.2
08A7:  CLRF   53
08A8:  BCF    50.0
08A9:  MOVLW  4B
08AA:  MOVWF  04
08AB:  BSF    03.7
08AC:  GOTO   128
08AD:  BTFSC  51.7
08AE:  GOTO   0D0
08AF:  MOVF   49,W
08B0:  MOVWF  51
08B1:  BTFSS  50.0
08B2:  GOTO   0BA
08B3:  RRF    56,F
08B4:  RRF    55,F
08B5:  RRF    54,F
08B6:  RRF    53,F
08B7:  INCF   77,F
08B8:  BTFSC  03.2
08B9:  GOTO   10D
08BA:  BTFSS  53.7
08BB:  GOTO   0CB
08BC:  INCF   54,F
08BD:  BTFSS  03.2
08BE:  GOTO   0CB
08BF:  INCF   55,F
08C0:  BTFSS  03.2
08C1:  GOTO   0CB
08C2:  INCF   56,F
08C3:  BTFSS  03.2
08C4:  GOTO   0CB
08C5:  RRF    56,F
08C6:  RRF    55,F
08C7:  RRF    54,F
08C8:  INCF   77,F
08C9:  BTFSC  03.2
08CA:  GOTO   10D
08CB:  BTFSC  52.6
08CC:  GOTO   04F
08CD:  BTFSC  52.7
08CE:  GOTO   091
08CF:  GOTO   0EF
08D0:  MOVLW  80
08D1:  XORWF  56,F
08D2:  BTFSS  56.7
08D3:  GOTO   0D8
08D4:  GOTO   112
08D5:  MOVF   4D,W
08D6:  MOVWF  51
08D7:  GOTO   0E5
08D8:  MOVF   49,W
08D9:  MOVWF  51
08DA:  MOVF   56,F
08DB:  BTFSS  03.2
08DC:  GOTO   0E5
08DD:  MOVF   55,F
08DE:  BTFSS  03.2
08DF:  GOTO   0E5
08E0:  MOVF   54,F
08E1:  BTFSS  03.2
08E2:  GOTO   0E5
08E3:  CLRF   77
08E4:  GOTO   106
08E5:  BTFSC  56.7
08E6:  GOTO   0EF
08E7:  BCF    03.0
08E8:  RLF    53,F
08E9:  RLF    54,F
08EA:  RLF    55,F
08EB:  RLF    56,F
08EC:  DECFSZ 77,F
08ED:  GOTO   0E5
08EE:  GOTO   10D
08EF:  BTFSS  51.7
08F0:  GOTO   0F3
08F1:  BSF    56.7
08F2:  GOTO   106
08F3:  BCF    56.7
08F4:  GOTO   106
08F5:  MOVF   4C,W
08F6:  MOVWF  77
08F7:  MOVF   4D,W
08F8:  MOVWF  56
08F9:  MOVF   4E,W
08FA:  MOVWF  55
08FB:  MOVF   4F,W
08FC:  MOVWF  54
08FD:  GOTO   106
08FE:  MOVF   48,W
08FF:  MOVWF  77
0900:  MOVF   49,W
0901:  MOVWF  56
0902:  MOVF   4A,W
0903:  MOVWF  55
0904:  MOVF   4B,W
0905:  MOVWF  54
0906:  MOVF   56,W
0907:  MOVWF  78
0908:  MOVF   55,W
0909:  MOVWF  79
090A:  MOVF   54,W
090B:  MOVWF  7A
090C:  GOTO   147
090D:  CLRF   77
090E:  CLRF   78
090F:  CLRF   79
0910:  CLRF   7A
0911:  GOTO   147
0912:  CLRF   53
0913:  COMF   54,F
0914:  COMF   55,F
0915:  COMF   56,F
0916:  COMF   53,F
0917:  INCF   53,F
0918:  BTFSS  03.2
0919:  GOTO   121
091A:  INCF   54,F
091B:  BTFSS  03.2
091C:  GOTO   121
091D:  INCF   55,F
091E:  BTFSS  03.2
091F:  GOTO   121
0920:  INCF   56,F
0921:  BTFSC  52.0
0922:  GOTO   02E
0923:  BTFSC  52.1
0924:  GOTO   070
0925:  BTFSC  52.2
0926:  GOTO   0A6
0927:  GOTO   0D5
0928:  MOVF   00,W
0929:  ADDWF  54,F
092A:  BTFSS  03.0
092B:  GOTO   132
092C:  INCF   55,F
092D:  BTFSS  03.2
092E:  GOTO   132
092F:  INCF   56,F
0930:  BTFSC  03.2
0931:  BSF    50.0
0932:  DECF   04,F
0933:  MOVF   00,W
0934:  ADDWF  55,F
0935:  BTFSS  03.0
0936:  GOTO   13A
0937:  INCF   56,F
0938:  BTFSC  03.2
0939:  BSF    50.0
093A:  DECF   04,F
093B:  MOVF   00,W
093C:  BTFSC  00.7
093D:  GOTO   13F
093E:  XORLW  80
093F:  ADDWF  56,F
0940:  BTFSC  03.0
0941:  BSF    50.0
0942:  BTFSC  52.4
0943:  GOTO   035
0944:  BTFSC  52.5
0945:  GOTO   077
0946:  GOTO   0AD
0947:  BCF    03.6
0948:  BSF    0A.3
0949:  BSF    0A.4
094A:  GOTO   2C5 (RETURN)
*
0B2C:  MOVF   0B,W
0B2D:  BSF    03.6
0B2E:  MOVWF  49
0B2F:  BCF    03.6
0B30:  BCF    0B.7
0B31:  BSF    03.5
0B32:  BSF    03.6
0B33:  BSF    0C.7
0B34:  BSF    0C.0
0B35:  NOP
0B36:  NOP
0B37:  BCF    03.5
0B38:  BTFSS  49.7
0B39:  GOTO   33D
0B3A:  BCF    03.6
0B3B:  BSF    0B.7
0B3C:  BSF    03.6
0B3D:  MOVF   0C,W
0B3E:  ANDLW  7F
0B3F:  BTFSC  03.2
0B40:  GOTO   37A
0B41:  MOVWF  49
0B42:  MOVF   0D,W
0B43:  MOVWF  4A
0B44:  MOVF   0F,W
0B45:  MOVWF  4B
0B46:  MOVF   49,W
0B47:  MOVWF  54
0B48:  BCF    03.6
0B49:  CALL   2E6
0B4A:  BSF    03.6
0B4B:  MOVF   4A,W
0B4C:  MOVWF  0D
0B4D:  MOVF   4B,W
0B4E:  MOVWF  0F
0B4F:  BCF    03.6
0B50:  MOVF   0B,W
0B51:  BSF    03.6
0B52:  MOVWF  4C
0B53:  BCF    03.6
0B54:  BCF    0B.7
0B55:  BSF    03.5
0B56:  BSF    03.6
0B57:  BSF    0C.7
0B58:  BSF    0C.0
0B59:  NOP
0B5A:  NOP
0B5B:  BCF    03.5
0B5C:  BTFSS  4C.7
0B5D:  GOTO   361
0B5E:  BCF    03.6
0B5F:  BSF    0B.7
0B60:  BSF    03.6
0B61:  RLF    0C,W
0B62:  RLF    0E,W
0B63:  ANDLW  7F
0B64:  BTFSC  03.2
0B65:  GOTO   37A
0B66:  MOVWF  49
0B67:  MOVF   0D,W
0B68:  MOVWF  4A
0B69:  MOVF   0F,W
0B6A:  MOVWF  4B
0B6B:  MOVF   49,W
0B6C:  MOVWF  54
0B6D:  BCF    03.6
0B6E:  CALL   2E6
0B6F:  BSF    03.6
0B70:  MOVF   4A,W
0B71:  MOVWF  0D
0B72:  MOVF   4B,W
0B73:  MOVWF  0F
0B74:  INCF   0D,F
0B75:  BTFSC  03.2
0B76:  INCF   0F,F
0B77:  BCF    03.6
0B78:  GOTO   32C
0B79:  BSF    03.6
0B7A:  BCF    03.6
0B7B:  RETURN
0B7C:  MOVLW  B6
0B7D:  MOVWF  77
0B7E:  CLRF   7A
0B7F:  CLRF   79
0B80:  CLRF   78
0B81:  BSF    03.6
0B82:  MOVF   49,W
0B83:  IORWF  4A,W
0B84:  IORWF  4B,W
0B85:  IORWF  4C,W
0B86:  BTFSS  03.2
0B87:  GOTO   38A
0B88:  CLRF   77
0B89:  GOTO   397
0B8A:  BCF    03.0
0B8B:  BTFSC  78.7
0B8C:  GOTO   396
0B8D:  RLF    49,F
0B8E:  RLF    4A,F
0B8F:  RLF    4B,F
0B90:  RLF    4C,F
0B91:  RLF    7A,F
0B92:  RLF    79,F
0B93:  RLF    78,F
0B94:  DECFSZ 77,F
0B95:  GOTO   38A
0B96:  BCF    78.7
0B97:  BCF    03.6
0B98:  RETURN
0B99:  BSF    03.6
0B9A:  MOVF   49,W
0B9B:  SUBLW  B6
0B9C:  MOVWF  49
0B9D:  CLRF   7A
0B9E:  MOVF   4A,W
0B9F:  MOVWF  4D
0BA0:  BSF    4A.7
0BA1:  BCF    03.0
0BA2:  RRF    4A,F
0BA3:  RRF    4B,F
0BA4:  RRF    4C,F
0BA5:  RRF    7A,F
0BA6:  RRF    79,F
0BA7:  RRF    78,F
0BA8:  RRF    77,F
0BA9:  DECFSZ 49,F
0BAA:  GOTO   3A1
0BAB:  BTFSS  4D.7
0BAC:  GOTO   3B8
0BAD:  COMF   77,F
0BAE:  COMF   78,F
0BAF:  COMF   79,F
0BB0:  COMF   7A,F
0BB1:  INCF   77,F
0BB2:  BTFSC  03.2
0BB3:  INCF   78,F
0BB4:  BTFSC  03.2
0BB5:  INCF   79,F
0BB6:  BTFSC  03.2
0BB7:  INCF   7A,F
0BB8:  BCF    03.6
0BB9:  RETURN
0BBA:  BTFSC  03.1
0BBB:  GOTO   3BF
0BBC:  MOVLW  66
0BBD:  MOVWF  04
0BBE:  BSF    03.7
0BBF:  CLRF   77
0BC0:  CLRF   78
0BC1:  CLRF   79
0BC2:  CLRF   7A
0BC3:  BSF    03.6
0BC4:  CLRF   66
0BC5:  CLRF   67
0BC6:  CLRF   68
0BC7:  CLRF   69
0BC8:  MOVF   65,W
0BC9:  IORWF  64,W
0BCA:  IORWF  63,W
0BCB:  IORWF  62,W
0BCC:  BTFSC  03.2
0BCD:  GOTO   3FE
0BCE:  MOVLW  20
0BCF:  MOVWF  6A
0BD0:  BCF    03.0
0BD1:  RLF    5E,F
0BD2:  RLF    5F,F
0BD3:  RLF    60,F
0BD4:  RLF    61,F
0BD5:  RLF    66,F
0BD6:  RLF    67,F
0BD7:  RLF    68,F
0BD8:  RLF    69,F
0BD9:  MOVF   65,W
0BDA:  SUBWF  69,W
0BDB:  BTFSS  03.2
0BDC:  GOTO   3E7
0BDD:  MOVF   64,W
0BDE:  SUBWF  68,W
0BDF:  BTFSS  03.2
0BE0:  GOTO   3E7
0BE1:  MOVF   63,W
0BE2:  SUBWF  67,W
0BE3:  BTFSS  03.2
0BE4:  GOTO   3E7
0BE5:  MOVF   62,W
0BE6:  SUBWF  66,W
0BE7:  BTFSS  03.0
0BE8:  GOTO   3F8
0BE9:  MOVF   62,W
0BEA:  SUBWF  66,F
0BEB:  MOVF   63,W
0BEC:  BTFSS  03.0
0BED:  INCFSZ 63,W
0BEE:  SUBWF  67,F
0BEF:  MOVF   64,W
0BF0:  BTFSS  03.0
0BF1:  INCFSZ 64,W
0BF2:  SUBWF  68,F
0BF3:  MOVF   65,W
0BF4:  BTFSS  03.0
0BF5:  INCFSZ 65,W
0BF6:  SUBWF  69,F
0BF7:  BSF    03.0
0BF8:  RLF    77,F
0BF9:  RLF    78,F
0BFA:  RLF    79,F
0BFB:  RLF    7A,F
0BFC:  DECFSZ 6A,F
0BFD:  GOTO   3D0
0BFE:  MOVF   66,W
0BFF:  MOVWF  00
0C00:  INCF   04,F
0C01:  MOVF   67,W
0C02:  MOVWF  00
0C03:  INCF   04,F
0C04:  MOVF   68,W
0C05:  MOVWF  00
0C06:  INCF   04,F
0C07:  MOVF   69,W
0C08:  MOVWF  00
0C09:  BCF    03.6
0C0A:  RETURN
*
0FA7:  BSF    03.6
0FA8:  MOVF   4A,W
0FA9:  MOVWF  51
0FAA:  MOVF   4E,W
0FAB:  XORWF  51,F
0FAC:  BTFSS  51.7
0FAD:  GOTO   7B3
0FAE:  BCF    03.2
0FAF:  BCF    03.0
0FB0:  BTFSC  4A.7
0FB1:  BSF    03.0
0FB2:  GOTO   7E6
0FB3:  MOVF   4A,W
0FB4:  MOVWF  51
0FB5:  MOVF   4D,W
0FB6:  MOVWF  52
0FB7:  MOVF   49,W
0FB8:  SUBWF  52,F
0FB9:  BTFSC  03.2
0FBA:  GOTO   7C1
0FBB:  BTFSS  51.7
0FBC:  GOTO   7E6
0FBD:  MOVF   03,W
0FBE:  XORLW  01
0FBF:  MOVWF  03
0FC0:  GOTO   7E6
0FC1:  MOVF   4E,W
0FC2:  MOVWF  52
0FC3:  MOVF   4A,W
0FC4:  SUBWF  52,F
0FC5:  BTFSC  03.2
0FC6:  GOTO   7CD
0FC7:  BTFSS  51.7
0FC8:  GOTO   7E6
0FC9:  MOVF   03,W
0FCA:  XORLW  01
0FCB:  MOVWF  03
0FCC:  GOTO   7E6
0FCD:  MOVF   4F,W
0FCE:  MOVWF  52
0FCF:  MOVF   4B,W
0FD0:  SUBWF  52,F
0FD1:  BTFSC  03.2
0FD2:  GOTO   7D9
0FD3:  BTFSS  51.7
0FD4:  GOTO   7E6
0FD5:  MOVF   03,W
0FD6:  XORLW  01
0FD7:  MOVWF  03
0FD8:  GOTO   7E6
0FD9:  MOVF   50,W
0FDA:  MOVWF  52
0FDB:  MOVF   4C,W
0FDC:  SUBWF  52,F
0FDD:  BTFSC  03.2
0FDE:  GOTO   7E5
0FDF:  BTFSS  51.7
0FE0:  GOTO   7E6
0FE1:  MOVF   03,W
0FE2:  XORLW  01
0FE3:  MOVWF  03
0FE4:  GOTO   7E6
0FE5:  BCF    03.0
0FE6:  BCF    03.6
0FE7:  RETURN
*
1630:  MOVLW  B6
1631:  MOVWF  77
1632:  CLRF   7A
1633:  CLRF   79
1634:  CLRF   78
1635:  BSF    03.6
1636:  BCF    4C.0
1637:  BTFSS  4B.7
1638:  GOTO   647
1639:  BSF    4C.0
163A:  COMF   48,F
163B:  COMF   49,F
163C:  COMF   4A,F
163D:  COMF   4B,F
163E:  INCF   48,F
163F:  BTFSS  03.2
1640:  GOTO   647
1641:  INCF   49,F
1642:  BTFSS  03.2
1643:  GOTO   647
1644:  INCF   4A,F
1645:  BTFSC  03.2
1646:  INCF   4B,F
1647:  MOVF   48,W
1648:  IORWF  49,W
1649:  IORWF  4A,W
164A:  IORWF  4B,W
164B:  BTFSS  03.2
164C:  GOTO   64F
164D:  CLRF   77
164E:  GOTO   65E
164F:  BCF    03.0
1650:  BTFSC  78.7
1651:  GOTO   65B
1652:  RLF    48,F
1653:  RLF    49,F
1654:  RLF    4A,F
1655:  RLF    4B,F
1656:  RLF    7A,F
1657:  RLF    79,F
1658:  RLF    78,F
1659:  DECFSZ 77,F
165A:  GOTO   64F
165B:  BCF    78.7
165C:  BTFSC  4C.0
165D:  BSF    78.7
165E:  BCF    03.6
165F:  BSF    0A.3
1660:  BSF    0A.4
1661:  GOTO   467 (RETURN)
.................... 
.................... #list
.................... 
.................... 
.................... #device ADC=10
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(clock=20000000)
*
04AD:  MOVLW  55
04AE:  MOVWF  04
04AF:  BSF    03.7
04B0:  MOVF   00,W
04B1:  BTFSC  03.2
04B2:  GOTO   4C0
04B3:  MOVLW  06
04B4:  MOVWF  78
04B5:  CLRF   77
04B6:  DECFSZ 77,F
04B7:  GOTO   4B6
04B8:  DECFSZ 78,F
04B9:  GOTO   4B5
04BA:  MOVLW  7B
04BB:  MOVWF  77
04BC:  DECFSZ 77,F
04BD:  GOTO   4BC
04BE:  DECFSZ 00,F
04BF:  GOTO   4B3
04C0:  RETURN
.................... //#use rs232(baud=128000,parity=e, xmit=PIN_C6, rcv=PIN_C7)
.................... #use rs232(baud=115200,parity=e, xmit=PIN_C6, rcv=PIN_C7)
*
0AA2:  MOVLW  08
0AA3:  MOVWF  78
0AA4:  BSF    03.6
0AA5:  CLRF   4A
0AA6:  MOVF   49,W
0AA7:  MOVWF  77
0AA8:  MOVF   77,W
0AA9:  XORWF  4A,F
0AAA:  RRF    77,F
0AAB:  DECFSZ 78,F
0AAC:  GOTO   2A8
0AAD:  BCF    03.6
0AAE:  BTFSS  0C.4
0AAF:  GOTO   2AE
0AB0:  MOVLW  FE
0AB1:  BSF    03.5
0AB2:  ANDWF  18,F
0AB3:  BCF    03.5
0AB4:  BSF    03.6
0AB5:  BTFSS  4A.0
0AB6:  GOTO   2BC
0AB7:  BSF    03.5
0AB8:  BCF    03.6
0AB9:  BSF    18.0
0ABA:  BCF    03.5
0ABB:  BSF    03.6
0ABC:  MOVF   49,W
0ABD:  BCF    03.6
0ABE:  MOVWF  19
0ABF:  RETURN
.................... 
.................... 
.................... #bit TR1EN = 0x10.0
.................... 
.................... #byte porta = 0x05
.................... #byte portb = 0x06
.................... #byte portc = 0x07
.................... #byte portd = 0x08
.................... 
.................... #bit hpeak    = portb.0          
.................... #bit mark     = portb.1          
.................... #bit start    = portb.2          
.................... #bit page     = portb.3          
.................... #bit clear    = portb.4          
.................... #bit gaussing = portb.5          
.................... #bit erasepro = portb.6          
.................... #bit eraseall = portb.7          
.................... 
.................... #bit dir        = portc.0          
.................... #bit pwm1       = portc.1          
.................... //#bit dirmark    = portc.2          
.................... #bit length     = portc.3          
.................... #bit dq         = portc.4          
.................... #bit get        = portc.5    
.................... 
.................... #bit ckq        = porta.4
.................... 
.................... #bit portd3     = portd.3
.................... 
.................... #define LCD_RS_PIN      PIN_D0                                   
.................... #define LCD_RW_PIN      PIN_D1  
.................... #define LCD_ENABLE_PIN  PIN_D2
.................... #define LCD_DATA4       PIN_D4                                   
.................... #define LCD_DATA5       PIN_D5                                   
.................... #define LCD_DATA6       PIN_D6                                    
.................... #define LCD_DATA7       PIN_D7 
.................... 
.................... 
....................      
.................... #include <lcd.c>
.................... ///////////////////////////////////////////////////////////////////////////////
.................... ////                             LCD.C                                     ////
.................... ////                 Driver for common LCD modules                         ////
.................... ////                                                                       ////
.................... ////  lcd_init()   Must be called before any other function.               ////
.................... ////                                                                       ////
.................... ////  lcd_putc(c)  Will display c on the next position of the LCD.         ////
.................... ////                 \a  Set cursor position to upper left                 ////
.................... ////                 \f  Clear display, set cursor to upper left           ////
.................... ////                 \n  Go to start of second line                        ////
.................... ////                 \b  Move back one position                            ////
.................... ////              If LCD_EXTENDED_NEWLINE is defined, the \n character     ////
.................... ////              will erase all remanining characters on the current      ////
.................... ////              line, and move the cursor to the beginning of the next   ////
.................... ////              line.                                                    ////
.................... ////              If LCD_EXTENDED_NEWLINE is defined, the \r character     ////
.................... ////              will move the cursor to the start of the current         ////
.................... ////              line.                                                    ////
.................... ////                                                                       ////
.................... ////  lcd_gotoxy(x,y) Set write position on LCD (upper left is 1,1)        ////
.................... ////                                                                       ////
.................... ////  lcd_getc(x,y)   Returns character at position x,y on LCD             ////
.................... ////                                                                       ////
.................... ////  lcd_cursor_on(int1 on)   Turn the cursor on (on=TRUE) or off         ////
.................... ////              (on=FALSE).                                              ////
.................... ////                                                                       ////
.................... ////  lcd_set_cgram_char(w, *p)   Write a custom character to the CGRAM.   ////
.................... ////                                                                       ////
.................... ////                                                                       ////
.................... ////  CONFIGURATION                                                        ////
.................... ////  The LCD can be configured in one of two ways: a.) port access or     ////
.................... ////  b.) pin access.  Port access requires the entire 7 bit interface     ////
.................... ////  connected to one GPIO port, and the data bits (D4:D7 of the LCD)     ////
.................... ////  connected to sequential pins on the GPIO.  Pin access                ////
.................... ////  has no requirements, all 7 bits of the control interface can         ////
.................... ////  can be connected to any GPIO using several ports.                    ////
.................... ////                                                                       ////
.................... ////  To use port access, #define LCD_DATA_PORT to the SFR location of     ////
.................... ////  of the GPIO port that holds the interface, -AND- edit LCD_PIN_MAP    ////
.................... ////  of this file to configure the pin order.  If you are using a         ////
.................... ////  baseline PIC (PCB), then LCD_OUTPUT_MAP and LCD_INPUT_MAP also must  ////
.................... ////  be defined.                                                          ////
.................... ////                                                                       ////
.................... ////  Example of port access:                                              ////
.................... ////     #define LCD_DATA_PORT getenv("SFR:PORTD")                         ////
.................... ////                                                                       ////
.................... ////  To use pin access, the following pins must be defined:               ////
.................... ////     LCD_ENABLE_PIN                                                    ////
.................... ////     LCD_RS_PIN                                                        ////
.................... ////     LCD_RW_PIN                                                        ////
.................... ////     LCD_DATA4                                                         ////
.................... ////     LCD_DATA5                                                         ////
.................... ////     LCD_DATA6                                                         ////
.................... ////     LCD_DATA7                                                         ////
.................... ////                                                                       ////
.................... ////  Example of pin access:                                               ////
.................... ////     #define LCD_ENABLE_PIN  PIN_E0                                    ////
.................... ////     #define LCD_RS_PIN      PIN_E1                                    ////
.................... ////     #define LCD_RW_PIN      PIN_E2                                    ////
.................... ////     #define LCD_DATA4       PIN_D4                                    ////
.................... ////     #define LCD_DATA5       PIN_D5                                    ////
.................... ////     #define LCD_DATA6       PIN_D6                                    ////
.................... ////     #define LCD_DATA7       PIN_D7                                    ////
.................... ////                                                                       ////
.................... ///////////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996,2010 Custom Computer Services           ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... 
.................... #ifndef __LCD_C__
.................... #define __LCD_C__
.................... 
.................... // define the pinout.
.................... // only required if port access is being used.
.................... typedef struct  
.................... {                            // This structure is overlayed
....................    int1 enable;           // on to an I/O port to gain
....................    int1 rs;               // access to the LCD pins.
....................    int1 rw;               // The bits are allocated from
....................    int1 unused;           // low order up.  ENABLE will
....................    unsigned int     data : 4;         // be LSB pin of that port.
....................   #if defined(__PCD__)       // The port used will be LCD_DATA_PORT.
....................    unsigned int    reserved: 8;
....................   #endif
.................... } LCD_PIN_MAP;
.................... 
.................... // this is to improve compatability with previous LCD drivers that accepted
.................... // a define labeled 'use_portb_lcd' that configured the LCD onto port B.
.................... #if ((defined(use_portb_lcd)) && (use_portb_lcd==TRUE))
....................  #define LCD_DATA_PORT getenv("SFR:PORTB")
.................... #endif
.................... 
.................... #if defined(__PCB__)
....................    // these definitions only need to be modified for baseline PICs.
....................    // all other PICs use LCD_PIN_MAP or individual LCD_xxx pin definitions.
.................... /*                                    EN, RS,   RW,   UNUSED,  DATA  */
....................  const LCD_PIN_MAP LCD_OUTPUT_MAP =  {0,  0,    0,    0,       0};
....................  const LCD_PIN_MAP LCD_INPUT_MAP =   {0,  0,    0,    0,       0xF};
.................... #endif
.................... 
.................... ////////////////////// END CONFIGURATION ///////////////////////////////////
.................... 
.................... #ifndef LCD_ENABLE_PIN
....................    #define lcd_output_enable(x) lcdlat.enable=x
....................    #define lcd_enable_tris()   lcdtris.enable=0
.................... #else
....................    #define lcd_output_enable(x) output_bit(LCD_ENABLE_PIN, x)
....................    #define lcd_enable_tris()  output_drive(LCD_ENABLE_PIN)
.................... #endif
.................... 
.................... #ifndef LCD_RS_PIN
....................    #define lcd_output_rs(x) lcdlat.rs=x
....................    #define lcd_rs_tris()   lcdtris.rs=0
.................... #else
....................    #define lcd_output_rs(x) output_bit(LCD_RS_PIN, x)
....................    #define lcd_rs_tris()  output_drive(LCD_RS_PIN)
.................... #endif
.................... 
.................... #ifndef LCD_RW_PIN
....................    #define lcd_output_rw(x) lcdlat.rw=x
....................    #define lcd_rw_tris()   lcdtris.rw=0
.................... #else
....................    #define lcd_output_rw(x) output_bit(LCD_RW_PIN, x)
....................    #define lcd_rw_tris()  output_drive(LCD_RW_PIN)
.................... #endif
.................... 
.................... // original version of this library incorrectly labeled LCD_DATA0 as LCD_DATA4,
.................... // LCD_DATA1 as LCD_DATA5, and so on.  this block of code makes the driver
.................... // compatible with any code written for the original library
.................... #if (defined(LCD_DATA0) && defined(LCD_DATA1) && defined(LCD_DATA2) && defined(LCD_DATA3) && !defined(LCD_DATA4) && !defined(LCD_DATA5) && !defined(LCD_DATA6) && !defined(LCD_DATA7))
....................    #define  LCD_DATA4    LCD_DATA0
....................    #define  LCD_DATA5    LCD_DATA1
....................    #define  LCD_DATA6    LCD_DATA2
....................    #define  LCD_DATA7    LCD_DATA3
.................... #endif
.................... 
.................... #ifndef LCD_DATA4
.................... #ifndef LCD_DATA_PORT
....................    #if defined(__PCB__)
....................       #define LCD_DATA_PORT      0x06     //portb
....................       #define set_tris_lcd(x)   set_tris_b(x)
....................    #else
....................      #if defined(PIN_D0)
....................       #define LCD_DATA_PORT      getenv("SFR:PORTD")     //portd
....................      #else
....................       #define LCD_DATA_PORT      getenv("SFR:PORTB")     //portb
....................      #endif
....................    #endif   
.................... #endif
.................... 
.................... #if defined(__PCB__)
....................    LCD_PIN_MAP lcd, lcdlat;
....................    #byte lcd = LCD_DATA_PORT
....................    #byte lcdlat = LCD_DATA_PORT
.................... #elif defined(__PCM__)
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris;
....................    #byte lcd = LCD_DATA_PORT
....................    #byte lcdlat = LCD_DATA_PORT
....................    #byte lcdtris = LCD_DATA_PORT+0x80
.................... #elif defined(__PCH__)
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris;
....................    #byte lcd = LCD_DATA_PORT
....................    #byte lcdlat = LCD_DATA_PORT+9
....................    #byte lcdtris = LCD_DATA_PORT+0x12
.................... #elif defined(__PCD__)
....................    LCD_PIN_MAP lcd, lcdlat, lcdtris;
....................    #word lcd = LCD_DATA_PORT
....................    #word lcdlat = LCD_DATA_PORT+2
....................    #word lcdtris = LCD_DATA_PORT-0x02
.................... #endif
.................... #endif   //LCD_DATA4 not defined
.................... 
.................... #ifndef LCD_TYPE
....................    #define LCD_TYPE 2           // 0=5x7, 1=5x10, 2=2 lines
.................... #endif
.................... 
.................... #ifndef LCD_LINE_TWO
....................    #define LCD_LINE_TWO 0x40    // LCD RAM address for the second line
.................... #endif
.................... 
.................... #ifndef LCD_LINE_LENGTH
....................    #define LCD_LINE_LENGTH 20
.................... #endif
.................... 
.................... unsigned int8 lcd_read_nibble(void);
.................... 
.................... unsigned int8 lcd_read_byte(void)
.................... {
....................    unsigned int8 low,high;
.................... 
....................  #if defined(__PCB__)
....................    set_tris_lcd(LCD_INPUT_MAP);
....................  #else
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7))
....................    output_float(LCD_DATA4);
*
0542:  BSF    08.4
....................    output_float(LCD_DATA5);
0543:  BSF    08.5
....................    output_float(LCD_DATA6);
0544:  BSF    08.6
....................    output_float(LCD_DATA7);
0545:  BSF    08.7
....................   #else
....................    lcdtris.data = 0xF;
....................   #endif
....................  #endif
....................         
....................    lcd_output_rw(1);
0546:  BCF    03.5
0547:  BSF    08.1
0548:  BSF    03.5
0549:  BCF    08.1
....................    delay_cycles(1);
054A:  NOP
....................    lcd_output_enable(1);
054B:  BCF    03.5
054C:  BSF    08.2
054D:  BSF    03.5
054E:  BCF    08.2
....................    delay_cycles(1);
054F:  NOP
....................    high = lcd_read_nibble();
0550:  BCF    03.5
0551:  CALL   4FF
0552:  MOVF   78,W
0553:  BSF    03.6
0554:  MOVWF  5C
....................       
....................    lcd_output_enable(0);
0555:  BCF    03.6
0556:  BCF    08.2
0557:  BSF    03.5
0558:  BCF    08.2
....................    delay_cycles(1);
0559:  NOP
....................    lcd_output_enable(1);
055A:  BCF    03.5
055B:  BSF    08.2
055C:  BSF    03.5
055D:  BCF    08.2
....................    delay_us(1);
055E:  GOTO   55F
055F:  GOTO   560
0560:  NOP
....................    low = lcd_read_nibble();
0561:  BCF    03.5
0562:  CALL   4FF
0563:  MOVF   78,W
0564:  BSF    03.6
0565:  MOVWF  5B
....................       
....................    lcd_output_enable(0);
0566:  BCF    03.6
0567:  BCF    08.2
0568:  BSF    03.5
0569:  BCF    08.2
.................... 
....................  #if defined(__PCB__)
....................    set_tris_lcd(LCD_OUTPUT_MAP);
....................  #else
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7))
....................    output_drive(LCD_DATA4);
056A:  BCF    08.4
....................    output_drive(LCD_DATA5);
056B:  BCF    08.5
....................    output_drive(LCD_DATA6);
056C:  BCF    08.6
....................    output_drive(LCD_DATA7);
056D:  BCF    08.7
....................   #else
....................    lcdtris.data = 0x0;
....................   #endif
....................  #endif
.................... 
....................    return( (high<<4) | low);
056E:  BCF    03.5
056F:  BSF    03.6
0570:  SWAPF  5C,W
0571:  MOVWF  77
0572:  MOVLW  F0
0573:  ANDWF  77,F
0574:  MOVF   77,W
0575:  IORWF  5B,W
0576:  MOVWF  78
.................... }
.................... 
.................... unsigned int8 lcd_read_nibble(void)
.................... {
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7))
*
04FF:  BSF    03.6
0500:  CLRF   5D
....................    unsigned int8 n = 0x00;
.................... 
....................    /* Read the data port */
....................    n |= input(LCD_DATA4);
0501:  BSF    03.5
0502:  BCF    03.6
0503:  BSF    08.4
0504:  MOVLW  00
0505:  BCF    03.5
0506:  BTFSC  08.4
0507:  MOVLW  01
0508:  BSF    03.6
0509:  IORWF  5D,F
....................    n |= input(LCD_DATA5) << 1;
050A:  BSF    03.5
050B:  BCF    03.6
050C:  BSF    08.5
050D:  MOVLW  00
050E:  BCF    03.5
050F:  BTFSC  08.5
0510:  MOVLW  01
0511:  MOVWF  77
0512:  BCF    03.0
0513:  RLF    77,F
0514:  MOVF   77,W
0515:  BSF    03.6
0516:  IORWF  5D,F
....................    n |= input(LCD_DATA6) << 2;
0517:  BSF    03.5
0518:  BCF    03.6
0519:  BSF    08.6
051A:  MOVLW  00
051B:  BCF    03.5
051C:  BTFSC  08.6
051D:  MOVLW  01
051E:  MOVWF  77
051F:  RLF    77,F
0520:  RLF    77,F
0521:  MOVLW  FC
0522:  ANDWF  77,F
0523:  MOVF   77,W
0524:  BSF    03.6
0525:  IORWF  5D,F
....................    n |= input(LCD_DATA7) << 3;
0526:  BSF    03.5
0527:  BCF    03.6
0528:  BSF    08.7
0529:  MOVLW  00
052A:  BCF    03.5
052B:  BTFSC  08.7
052C:  MOVLW  01
052D:  MOVWF  77
052E:  RLF    77,F
052F:  RLF    77,F
0530:  RLF    77,F
0531:  MOVLW  F8
0532:  ANDWF  77,F
0533:  MOVF   77,W
0534:  BSF    03.6
0535:  IORWF  5D,F
....................    
....................    return(n);
0536:  MOVF   5D,W
0537:  MOVWF  78
....................   #else
0538:  BCF    03.6
0539:  RETURN
....................    return(lcd.data);
....................   #endif
.................... }
.................... 
.................... void lcd_send_nibble(unsigned int8 n)
.................... {
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7))
....................    /* Write to the data port */
....................    output_bit(LCD_DATA4, bit_test(n, 0));
*
04C1:  BSF    03.6
04C2:  BTFSC  5C.0
04C3:  GOTO   4C8
04C4:  BCF    03.6
04C5:  BCF    08.4
04C6:  GOTO   4CA
04C7:  BSF    03.6
04C8:  BCF    03.6
04C9:  BSF    08.4
04CA:  BSF    03.5
04CB:  BCF    08.4
....................    output_bit(LCD_DATA5, bit_test(n, 1));
04CC:  BCF    03.5
04CD:  BSF    03.6
04CE:  BTFSC  5C.1
04CF:  GOTO   4D4
04D0:  BCF    03.6
04D1:  BCF    08.5
04D2:  GOTO   4D6
04D3:  BSF    03.6
04D4:  BCF    03.6
04D5:  BSF    08.5
04D6:  BSF    03.5
04D7:  BCF    08.5
....................    output_bit(LCD_DATA6, bit_test(n, 2));
04D8:  BCF    03.5
04D9:  BSF    03.6
04DA:  BTFSC  5C.2
04DB:  GOTO   4E0
04DC:  BCF    03.6
04DD:  BCF    08.6
04DE:  GOTO   4E2
04DF:  BSF    03.6
04E0:  BCF    03.6
04E1:  BSF    08.6
04E2:  BSF    03.5
04E3:  BCF    08.6
....................    output_bit(LCD_DATA7, bit_test(n, 3));
04E4:  BCF    03.5
04E5:  BSF    03.6
04E6:  BTFSC  5C.3
04E7:  GOTO   4EC
04E8:  BCF    03.6
04E9:  BCF    08.7
04EA:  GOTO   4EE
04EB:  BSF    03.6
04EC:  BCF    03.6
04ED:  BSF    08.7
04EE:  BSF    03.5
04EF:  BCF    08.7
....................   #else      
....................    lcdlat.data = n;
....................   #endif
....................       
....................    delay_cycles(1);
04F0:  NOP
....................    lcd_output_enable(1);
04F1:  BCF    03.5
04F2:  BSF    08.2
04F3:  BSF    03.5
04F4:  BCF    08.2
....................    delay_us(2);
04F5:  MOVLW  03
04F6:  MOVWF  77
04F7:  DECFSZ 77,F
04F8:  GOTO   4F7
....................    lcd_output_enable(0);
04F9:  BCF    03.5
04FA:  BCF    08.2
04FB:  BSF    03.5
04FC:  BCF    08.2
04FD:  BCF    03.5
04FE:  RETURN
.................... }
.................... 
.................... void lcd_send_byte(unsigned int8 address, unsigned int8 n)
.................... {
....................   #if defined(__PCB__)
....................    set_tris_lcd(LCD_OUTPUT_MAP);
....................   #else
....................    lcd_enable_tris();
*
053A:  BSF    03.5
053B:  BCF    08.2
....................    lcd_rs_tris();
053C:  BCF    08.0
....................    lcd_rw_tris();
053D:  BCF    08.1
....................   #endif
.................... 
....................    lcd_output_rs(0);
053E:  BCF    03.5
053F:  BCF    08.0
0540:  BSF    03.5
0541:  BCF    08.0
....................    while ( bit_test(lcd_read_byte(),7) ) ;
*
0577:  MOVF   78,W
0578:  MOVWF  5B
0579:  BTFSS  5B.7
057A:  GOTO   57E
057B:  BSF    03.5
057C:  BCF    03.6
057D:  GOTO   542
....................    lcd_output_rs(address);
057E:  MOVF   59,F
057F:  BTFSS  03.2
0580:  GOTO   585
0581:  BCF    03.6
0582:  BCF    08.0
0583:  GOTO   587
0584:  BSF    03.6
0585:  BCF    03.6
0586:  BSF    08.0
0587:  BSF    03.5
0588:  BCF    08.0
....................    delay_cycles(1);
0589:  NOP
....................    lcd_output_rw(0);
058A:  BCF    03.5
058B:  BCF    08.1
058C:  BSF    03.5
058D:  BCF    08.1
....................    delay_cycles(1);
058E:  NOP
....................    lcd_output_enable(0);
058F:  BCF    03.5
0590:  BCF    08.2
0591:  BSF    03.5
0592:  BCF    08.2
....................    lcd_send_nibble(n >> 4);
0593:  BCF    03.5
0594:  BSF    03.6
0595:  SWAPF  5A,W
0596:  MOVWF  5B
0597:  MOVLW  0F
0598:  ANDWF  5B,F
0599:  MOVF   5B,W
059A:  MOVWF  5C
059B:  BCF    03.6
059C:  CALL   4C1
....................    lcd_send_nibble(n & 0xf);
059D:  BSF    03.6
059E:  MOVF   5A,W
059F:  ANDLW  0F
05A0:  MOVWF  5B
05A1:  MOVWF  5C
05A2:  BCF    03.6
05A3:  CALL   4C1
05A4:  RETURN
.................... }
.................... 
.................... #if defined(LCD_EXTENDED_NEWLINE)
.................... unsigned int8 g_LcdX, g_LcdY;
.................... #endif
.................... 
.................... void lcd_init(void) 
.................... {
....................    unsigned int8 i;
....................    unsigned int8 LCD_INIT_STRING[4] = {0x20 | (LCD_TYPE << 2), 0xc, 1, 6};
05A5:  MOVLW  28
05A6:  BSF    03.6
05A7:  MOVWF  49
05A8:  MOVLW  0C
05A9:  MOVWF  4A
05AA:  MOVLW  01
05AB:  MOVWF  4B
05AC:  MOVLW  06
05AD:  MOVWF  4C
....................                              // These bytes need to be sent to the LCD
....................                              // to start it up.
....................    
.................... 
....................    lcd_output_enable(0);
05AE:  BCF    03.6
05AF:  BCF    08.2
05B0:  BSF    03.5
05B1:  BCF    08.2
....................    lcd_output_rs(0);
05B2:  BCF    03.5
05B3:  BCF    08.0
05B4:  BSF    03.5
05B5:  BCF    08.0
....................    lcd_output_rw(0);
05B6:  BCF    03.5
05B7:  BCF    08.1
05B8:  BSF    03.5
05B9:  BCF    08.1
.................... 
....................  #if defined(__PCB__)
....................    set_tris_lcd(LCD_OUTPUT_MAP);
....................  #else
....................   #if (defined(LCD_DATA4) && defined(LCD_DATA5) && defined(LCD_DATA6) && defined(LCD_DATA7))
....................    output_drive(LCD_DATA4);
05BA:  BCF    08.4
....................    output_drive(LCD_DATA5);
05BB:  BCF    08.5
....................    output_drive(LCD_DATA6);
05BC:  BCF    08.6
....................    output_drive(LCD_DATA7);
05BD:  BCF    08.7
....................   #else
....................    lcdtris.data = 0x0;
....................   #endif
....................    lcd_enable_tris();
05BE:  BCF    08.2
....................    lcd_rs_tris();
05BF:  BCF    08.0
....................    lcd_rw_tris();
05C0:  BCF    08.1
....................  #endif
....................     
....................    delay_ms(15);
05C1:  MOVLW  0F
05C2:  BCF    03.5
05C3:  BSF    03.6
05C4:  MOVWF  55
05C5:  BCF    03.6
05C6:  CALL   4AD
....................    for(i=1;i<=3;++i)
05C7:  MOVLW  01
05C8:  BSF    03.6
05C9:  MOVWF  48
05CA:  MOVF   48,W
05CB:  SUBLW  03
05CC:  BTFSS  03.0
05CD:  GOTO   5DA
....................    {
....................        lcd_send_nibble(3);
05CE:  MOVLW  03
05CF:  MOVWF  5C
05D0:  BCF    03.6
05D1:  CALL   4C1
....................        delay_ms(5);
05D2:  MOVLW  05
05D3:  BSF    03.6
05D4:  MOVWF  55
05D5:  BCF    03.6
05D6:  CALL   4AD
05D7:  BSF    03.6
05D8:  INCF   48,F
05D9:  GOTO   5CA
....................    }
....................    
....................    lcd_send_nibble(2);
05DA:  MOVLW  02
05DB:  MOVWF  5C
05DC:  BCF    03.6
05DD:  CALL   4C1
....................    delay_ms(5);
05DE:  MOVLW  05
05DF:  BSF    03.6
05E0:  MOVWF  55
05E1:  BCF    03.6
05E2:  CALL   4AD
....................    for(i=0;i<=3;++i)
05E3:  BSF    03.6
05E4:  CLRF   48
05E5:  MOVF   48,W
05E6:  SUBLW  03
05E7:  BTFSS  03.0
05E8:  GOTO   5F7
....................       lcd_send_byte(0,LCD_INIT_STRING[i]);
05E9:  MOVLW  49
05EA:  ADDWF  48,W
05EB:  MOVWF  04
05EC:  BSF    03.7
05ED:  MOVF   00,W
05EE:  MOVWF  4D
05EF:  CLRF   59
05F0:  MOVF   4D,W
05F1:  MOVWF  5A
05F2:  BCF    03.6
05F3:  CALL   53A
.................... 
....................   #if defined(LCD_EXTENDED_NEWLINE)
05F4:  BSF    03.6
05F5:  INCF   48,F
05F6:  GOTO   5E5
05F7:  BCF    03.6
05F8:  BSF    0A.3
05F9:  BSF    0A.4
05FA:  GOTO   0AF (RETURN)
....................    g_LcdX = 0;
....................    g_LcdY = 0;
....................   #endif
.................... }
.................... 
.................... void lcd_gotoxy(unsigned int8 x, unsigned int8 y)
.................... {
....................    unsigned int8 address;
....................    
....................    if(y!=1)
*
07E5:  BSF    03.6
07E6:  DECFSZ 56,W
07E7:  GOTO   7E9
07E8:  GOTO   7EC
....................       address=LCD_LINE_TWO;
07E9:  MOVLW  40
07EA:  MOVWF  57
07EB:  GOTO   7ED
....................    else
....................       address=0;
07EC:  CLRF   57
....................      
....................    address+=x-1;
07ED:  MOVLW  01
07EE:  SUBWF  55,W
07EF:  ADDWF  57,F
....................    lcd_send_byte(0,0x80|address);
07F0:  MOVF   57,W
07F1:  IORLW  80
07F2:  MOVWF  58
07F3:  CLRF   59
07F4:  MOVF   58,W
07F5:  MOVWF  5A
07F6:  BCF    03.6
07F7:  CALL   53A
.................... 
....................   #if defined(LCD_EXTENDED_NEWLINE)
07F8:  RETURN
....................    g_LcdX = x - 1;
....................    g_LcdY = y - 1;
....................   #endif
.................... }
.................... 
.................... void lcd_putc(char c)
.................... {
....................    switch (c)
*
0AE6:  BSF    03.6
0AE7:  MOVF   54,W
0AE8:  XORLW  07
0AE9:  BCF    03.6
0AEA:  BTFSC  03.2
0AEB:  GOTO   2F6
0AEC:  XORLW  0B
0AED:  BTFSC  03.2
0AEE:  GOTO   2FF
0AEF:  XORLW  06
0AF0:  BTFSC  03.2
0AF1:  GOTO   30F
0AF2:  XORLW  02
0AF3:  BTFSC  03.2
0AF4:  GOTO   319
0AF5:  GOTO   322
....................    {
....................       case '\a'   :  lcd_gotoxy(1,1);     break;
0AF6:  MOVLW  01
0AF7:  BSF    03.6
0AF8:  MOVWF  55
0AF9:  MOVWF  56
0AFA:  BCF    0A.3
0AFB:  BCF    03.6
0AFC:  CALL   7E5
0AFD:  BSF    0A.3
0AFE:  GOTO   32B
.................... 
....................       case '\f'   :  lcd_send_byte(0,1);
0AFF:  BSF    03.6
0B00:  CLRF   59
0B01:  MOVLW  01
0B02:  MOVWF  5A
0B03:  BCF    0A.3
0B04:  BCF    03.6
0B05:  CALL   53A
0B06:  BSF    0A.3
....................                      delay_ms(2);
0B07:  MOVLW  02
0B08:  BSF    03.6
0B09:  MOVWF  55
0B0A:  BCF    0A.3
0B0B:  BCF    03.6
0B0C:  CALL   4AD
0B0D:  BSF    0A.3
....................                     #if defined(LCD_EXTENDED_NEWLINE)
....................                      g_LcdX = 0;
....................                      g_LcdY = 0;
....................                     #endif
....................                      break;
0B0E:  GOTO   32B
.................... 
....................      #if defined(LCD_EXTENDED_NEWLINE)
....................       case '\r'   :  lcd_gotoxy(1, g_LcdY+1);   break;
....................       case '\n'   :
....................          while (g_LcdX++ < LCD_LINE_LENGTH)
....................          {
....................             lcd_send_byte(1, ' ');
....................          }
....................          lcd_gotoxy(1, g_LcdY+2);
....................          break;
....................      #else
....................       case '\n'   : lcd_gotoxy(1,2);        break;
0B0F:  MOVLW  01
0B10:  BSF    03.6
0B11:  MOVWF  55
0B12:  MOVLW  02
0B13:  MOVWF  56
0B14:  BCF    0A.3
0B15:  BCF    03.6
0B16:  CALL   7E5
0B17:  BSF    0A.3
0B18:  GOTO   32B
....................      #endif
....................      
....................       case '\b'   : lcd_send_byte(0,0x10);  break;
0B19:  BSF    03.6
0B1A:  CLRF   59
0B1B:  MOVLW  10
0B1C:  MOVWF  5A
0B1D:  BCF    0A.3
0B1E:  BCF    03.6
0B1F:  CALL   53A
0B20:  BSF    0A.3
0B21:  GOTO   32B
....................      
....................      #if defined(LCD_EXTENDED_NEWLINE)
....................       default     : 
....................          if (g_LcdX < LCD_LINE_LENGTH)
....................          {
....................             lcd_send_byte(1, c);
....................             g_LcdX++;
....................          }
....................          break;
....................      #else
....................       default     : lcd_send_byte(1,c);     break;
0B22:  MOVLW  01
0B23:  BSF    03.6
0B24:  MOVWF  59
0B25:  MOVF   54,W
0B26:  MOVWF  5A
0B27:  BCF    0A.3
0B28:  BCF    03.6
0B29:  CALL   53A
0B2A:  BSF    0A.3
....................      #endif
....................    }
0B2B:  RETURN
.................... }
....................  
.................... char lcd_getc(unsigned int8 x, unsigned int8 y)
.................... {
....................    char value;
.................... 
....................    lcd_gotoxy(x,y);
....................    while ( bit_test(lcd_read_byte(),7) ); // wait until busy flag is low
....................    lcd_output_rs(1);
....................    value = lcd_read_byte();
....................    lcd_output_rs(0);
....................    
....................    return(value);
.................... }
.................... 
.................... // write a custom character to the ram
.................... // which is 0-7 and specifies which character array we are modifying.
.................... // ptr points to an array of 8 bytes, where each byte is the next row of
.................... //    pixels.  only bits 0-4 are used.  the last row is the cursor row, and
.................... //    usually you will want to leave this byte 0x00.
.................... void lcd_set_cgram_char(unsigned int8 which, unsigned int8 *ptr)
.................... {
....................    unsigned int i;
.................... 
....................    which <<= 3;
....................    which &= 0x38;
.................... 
....................    lcd_send_byte(0, 0x40 | which);  //set cgram address
.................... 
....................    for(i=0; i<8; i++)
....................    {
....................       lcd_send_byte(1, *ptr++);
....................    }
....................   
....................    #if defined(LCD_EXTENDED_NEWLINE)
....................     lcd_gotoxy(g_LcdX+1, g_LcdY+1);  //set ddram address
....................    #endif
.................... }
.................... 
.................... void lcd_cursor_on(int1 on)
.................... {
....................    if (on)
....................    {
....................       lcd_send_byte(0,0x0F);           //turn LCD cursor ON
....................    }
....................    else
....................    {
....................       lcd_send_byte(0,0x0C);           //turn LCD cursor OFF
....................    }
.................... }
.................... 
.................... #endif
.................... 
.................... 
.................... 
.................... unsigned int8 ipage=0,npage=0,run1,run2=0,run3=0;
.................... 
.................... unsigned int8 donvi,chuc,tram,nghin,chucnghin,tramnghin,trieu,chuctrieu,tramtrieu,ty;
.................... 
.................... int16 atens=1000,btens=0;
.................... int32 lspeed;
.................... signed int32 depth=0,olddepth,sdepth=0,ddq=0,ddqold=0;
.................... int16 coef_encoder=19690;   
.................... signed int16 delta=0;
.................... int16 mag,i,tens,n_but,wflash_count,tt1=0,kk=0;
.................... int8 buffer_com[8],buf[6],buffer[20],data[48],speed_flag=0;
.................... int8 com_count=0,ncom=0,dd,dmt_flag=0,nd=0,flag_com=0;
.................... int16 speed_buf[12] ={0,0,0,0,0,0,0,0,0,0,0,0};
*
185B:  CLRF   10
185C:  CLRF   11
185D:  CLRF   12
185E:  CLRF   13
185F:  CLRF   14
1860:  CLRF   15
1861:  CLRF   16
1862:  CLRF   17
1863:  CLRF   18
1864:  CLRF   19
1865:  CLRF   1A
1866:  CLRF   1B
1867:  CLRF   1C
1868:  CLRF   1D
1869:  CLRF   1E
186A:  CLRF   1F
186B:  CLRF   20
186C:  CLRF   21
186D:  CLRF   22
186E:  CLRF   23
186F:  CLRF   24
1870:  CLRF   25
1871:  CLRF   26
1872:  CLRF   27
.................... 
.................... int1 but_flag=0,yes=1,no=0,flag_ext=0,flag_dir=0,flag_peek=0,dirmark=1;
.................... int8 mark_base=0,mark_length=0,mark_100=0,mark_500=0,base_length=10;
.................... float fdepth,fspeed,ftens,ft;
.................... unsigned int16 adbuf[8];
.................... //===============================================
.................... 
.................... #INT_RDA
.................... 
.................... void serial_isr()
.................... {
....................   
....................    buffer_com[ncom] = fgetc();        //doc lien tiep 8 bytes
*
00E6:  MOVLW  69
00E7:  ADDWF  7D,W
00E8:  MOVWF  04
00E9:  BCF    03.7
00EA:  BTFSS  0C.5
00EB:  GOTO   0EA
00EC:  MOVF   1A,W
00ED:  MOVWF  00
....................    ncom++;
00EE:  INCF   7D,F
....................    if(ncom == 8)  {
00EF:  MOVF   7D,W
00F0:  SUBLW  08
00F1:  BTFSS  03.2
00F2:  GOTO   26C
....................       ncom=0;              //tu PC luon truy xuat bang lenh 8 byte      
00F3:  CLRF   7D
....................       switch(buffer_com[0])   {         
00F4:  MOVF   69,W
00F5:  XORLW  DD
00F6:  BTFSC  03.2
00F7:  GOTO   10B
00F8:  XORLW  03
00F9:  BTFSC  03.2
00FA:  GOTO   117
00FB:  XORLW  13
00FC:  BTFSC  03.2
00FD:  GOTO   11F
00FE:  XORLW  12
00FF:  BTFSC  03.2
0100:  GOTO   127
0101:  XORLW  03
0102:  BTFSC  03.2
0103:  GOTO   24E
0104:  XORLW  06
0105:  BTFSC  03.2
0106:  GOTO   25A
0107:  XORLW  01
0108:  BTFSC  03.2
0109:  GOTO   262
010A:  GOTO   26A
....................          case 0xdd:                                         //    gui PC 138 byte gia lap do sau            
....................                      sdepth = make32(buffer_com[1],buffer_com[2],buffer_com[3],buffer_com[4]);
010B:  MOVF   6A,W
010C:  MOVWF  4E
010D:  MOVF   6B,W
010E:  MOVWF  4D
010F:  MOVF   6C,W
0110:  MOVWF  4C
0111:  MOVF   6D,W
0112:  MOVWF  4B
....................                      flag_com = 1;
0113:  MOVLW  01
0114:  BSF    03.5
0115:  MOVWF  66
....................                      break;        
0116:  GOTO   26B
....................          case 0xde:  flag_com=2;
0117:  MOVLW  02
0118:  BSF    03.5
0119:  MOVWF  66
....................                      tt1=0;               //khi co truy xuat tu pc tt1 khong vuot qua 10s 
011A:  BCF    03.5
011B:  CLRF   66
011C:  CLRF   65
....................                      break; 
011D:  BSF    03.5
011E:  GOTO   26B
....................          case 0xcd:  coef_encoder = make32(buffer_com[1],buffer_com[2],buffer_com[3],buffer_com[4]);
011F:  MOVF   6C,W
0120:  MOVWF  58
0121:  MOVF   6D,W
0122:  MOVWF  57
....................                      flag_com = 3;
0123:  MOVLW  03
0124:  BSF    03.5
0125:  MOVWF  66
....................                      break;
0126:  GOTO   26B
....................          case 0xdf:  ddq = make32(buffer_com[1],buffer_com[2],buffer_com[3],buffer_com[4]);
0127:  MOVF   6A,W
0128:  MOVWF  52
0129:  MOVF   6B,W
012A:  MOVWF  51
012B:  MOVF   6C,W
012C:  MOVWF  50
012D:  MOVF   6D,W
012E:  MOVWF  4F
....................                      mark_500    =  ddq/500;                         //buffer_com[4];
012F:  BCF    03.1
0130:  MOVF   52,W
0131:  BSF    03.5
0132:  BSF    03.6
0133:  MOVWF  23
0134:  BCF    03.5
0135:  BCF    03.6
0136:  MOVF   51,W
0137:  BSF    03.5
0138:  BSF    03.6
0139:  MOVWF  22
013A:  BCF    03.5
013B:  BCF    03.6
013C:  MOVF   50,W
013D:  BSF    03.5
013E:  BSF    03.6
013F:  MOVWF  21
0140:  BCF    03.5
0141:  BCF    03.6
0142:  MOVF   4F,W
0143:  BSF    03.5
0144:  BSF    03.6
0145:  MOVWF  20
0146:  CLRF   27
0147:  CLRF   26
0148:  MOVLW  01
0149:  MOVWF  25
014A:  MOVLW  F4
014B:  MOVWF  24
014C:  BCF    03.5
014D:  BCF    03.6
014E:  CALL   068
014F:  MOVF   77,W
0150:  BSF    03.5
0151:  MOVWF  6B
....................                      mark_100    =  (ddq%500)/100;                   //buffer_com[3];
0152:  BSF    03.1
0153:  MOVLW  90
0154:  MOVWF  04
0155:  BSF    03.7
0156:  BCF    03.5
0157:  MOVF   52,W
0158:  BSF    03.5
0159:  BSF    03.6
015A:  MOVWF  23
015B:  BCF    03.5
015C:  BCF    03.6
015D:  MOVF   51,W
015E:  BSF    03.5
015F:  BSF    03.6
0160:  MOVWF  22
0161:  BCF    03.5
0162:  BCF    03.6
0163:  MOVF   50,W
0164:  BSF    03.5
0165:  BSF    03.6
0166:  MOVWF  21
0167:  BCF    03.5
0168:  BCF    03.6
0169:  MOVF   4F,W
016A:  BSF    03.5
016B:  BSF    03.6
016C:  MOVWF  20
016D:  CLRF   27
016E:  CLRF   26
016F:  MOVLW  01
0170:  MOVWF  25
0171:  MOVLW  F4
0172:  MOVWF  24
0173:  BCF    03.5
0174:  BCF    03.6
0175:  CALL   068
0176:  BSF    03.5
0177:  BSF    03.6
0178:  MOVF   13,W
0179:  MOVWF  17
017A:  MOVF   12,W
017B:  MOVWF  16
017C:  MOVF   11,W
017D:  MOVWF  15
017E:  MOVF   10,W
017F:  MOVWF  14
0180:  CLRF   19
0181:  MOVF   04,W
0182:  MOVWF  18
0183:  BCF    19.0
0184:  BTFSC  03.7
0185:  BSF    19.0
0186:  BCF    03.1
0187:  MOVF   13,W
0188:  MOVWF  23
0189:  MOVF   12,W
018A:  MOVWF  22
018B:  MOVF   11,W
018C:  MOVWF  21
018D:  MOVF   10,W
018E:  MOVWF  20
018F:  CLRF   27
0190:  CLRF   26
0191:  CLRF   25
0192:  MOVLW  64
0193:  MOVWF  24
0194:  BCF    03.5
0195:  BCF    03.6
0196:  CALL   068
0197:  BSF    03.5
0198:  BSF    03.6
0199:  MOVF   18,W
019A:  MOVWF  04
019B:  BCF    03.7
019C:  BTFSC  19.0
019D:  BSF    03.7
019E:  MOVF   77,W
019F:  BCF    03.6
01A0:  MOVWF  6A
....................                      mark_length =  ((ddq%500)%100)/base_length;     //buffer_com[2];
01A1:  BSF    03.1
01A2:  MOVLW  90
01A3:  MOVWF  04
01A4:  BSF    03.7
01A5:  BCF    03.5
01A6:  MOVF   52,W
01A7:  BSF    03.5
01A8:  BSF    03.6
01A9:  MOVWF  23
01AA:  BCF    03.5
01AB:  BCF    03.6
01AC:  MOVF   51,W
01AD:  BSF    03.5
01AE:  BSF    03.6
01AF:  MOVWF  22
01B0:  BCF    03.5
01B1:  BCF    03.6
01B2:  MOVF   50,W
01B3:  BSF    03.5
01B4:  BSF    03.6
01B5:  MOVWF  21
01B6:  BCF    03.5
01B7:  BCF    03.6
01B8:  MOVF   4F,W
01B9:  BSF    03.5
01BA:  BSF    03.6
01BB:  MOVWF  20
01BC:  CLRF   27
01BD:  CLRF   26
01BE:  MOVLW  01
01BF:  MOVWF  25
01C0:  MOVLW  F4
01C1:  MOVWF  24
01C2:  BCF    03.5
01C3:  BCF    03.6
01C4:  CALL   068
01C5:  BSF    03.5
01C6:  BSF    03.6
01C7:  MOVF   13,W
01C8:  MOVWF  17
01C9:  MOVF   12,W
01CA:  MOVWF  16
01CB:  MOVF   11,W
01CC:  MOVWF  15
01CD:  MOVF   10,W
01CE:  MOVWF  14
01CF:  CLRF   19
01D0:  MOVF   04,W
01D1:  MOVWF  18
01D2:  BCF    19.0
01D3:  BTFSC  03.7
01D4:  BSF    19.0
01D5:  BSF    03.1
01D6:  MOVLW  9A
01D7:  MOVWF  04
01D8:  BSF    03.7
01D9:  MOVF   13,W
01DA:  MOVWF  23
01DB:  MOVF   12,W
01DC:  MOVWF  22
01DD:  MOVF   11,W
01DE:  MOVWF  21
01DF:  MOVF   10,W
01E0:  MOVWF  20
01E1:  CLRF   27
01E2:  CLRF   26
01E3:  CLRF   25
01E4:  MOVLW  64
01E5:  MOVWF  24
01E6:  BCF    03.5
01E7:  BCF    03.6
01E8:  CALL   068
01E9:  BSF    03.5
01EA:  BSF    03.6
01EB:  MOVF   1A,W
01EC:  MOVWF  77
01ED:  MOVF   1B,W
01EE:  MOVWF  78
01EF:  MOVF   1C,W
01F0:  MOVWF  79
01F1:  MOVF   1D,W
01F2:  MOVWF  7A
01F3:  MOVF   18,W
01F4:  MOVWF  04
01F5:  BCF    03.7
01F6:  BTFSC  19.0
01F7:  BSF    03.7
01F8:  MOVF   1D,W
01F9:  MOVWF  17
01FA:  MOVF   1C,W
01FB:  MOVWF  16
01FC:  MOVF   1B,W
01FD:  MOVWF  15
01FE:  MOVF   1A,W
01FF:  MOVWF  14
0200:  CLRF   1F
0201:  MOVF   04,W
0202:  MOVWF  1E
0203:  BCF    1F.0
0204:  BTFSC  03.7
0205:  BSF    1F.0
0206:  BCF    03.1
0207:  MOVF   1D,W
0208:  MOVWF  23
0209:  MOVF   1C,W
020A:  MOVWF  22
020B:  MOVF   1B,W
020C:  MOVWF  21
020D:  MOVF   1A,W
020E:  MOVWF  20
020F:  CLRF   27
0210:  CLRF   26
0211:  CLRF   25
0212:  BCF    03.6
0213:  MOVF   6C,W
0214:  BSF    03.6
0215:  MOVWF  24
0216:  BCF    03.5
0217:  BCF    03.6
0218:  CALL   068
0219:  BSF    03.5
021A:  BSF    03.6
021B:  MOVF   1E,W
021C:  MOVWF  04
021D:  BCF    03.7
021E:  BTFSC  1F.0
021F:  BSF    03.7
0220:  MOVF   77,W
0221:  BCF    03.6
0222:  MOVWF  69
....................                      mark_base   =  ddq%base_length;                 //buffer_com[1];
0223:  BSF    03.1
0224:  MOVLW  90
0225:  MOVWF  04
0226:  BSF    03.7
0227:  BCF    03.5
0228:  MOVF   52,W
0229:  BSF    03.5
022A:  BSF    03.6
022B:  MOVWF  23
022C:  BCF    03.5
022D:  BCF    03.6
022E:  MOVF   51,W
022F:  BSF    03.5
0230:  BSF    03.6
0231:  MOVWF  22
0232:  BCF    03.5
0233:  BCF    03.6
0234:  MOVF   50,W
0235:  BSF    03.5
0236:  BSF    03.6
0237:  MOVWF  21
0238:  BCF    03.5
0239:  BCF    03.6
023A:  MOVF   4F,W
023B:  BSF    03.5
023C:  BSF    03.6
023D:  MOVWF  20
023E:  CLRF   27
023F:  CLRF   26
0240:  CLRF   25
0241:  BCF    03.6
0242:  MOVF   6C,W
0243:  BSF    03.6
0244:  MOVWF  24
0245:  BCF    03.5
0246:  BCF    03.6
0247:  CALL   068
0248:  BSF    03.5
0249:  BSF    03.6
024A:  MOVF   10,W
024B:  BCF    03.6
024C:  MOVWF  68
....................                      break;
024D:  GOTO   26B
....................                      
....................          case 0xdc:  atens = make16(buffer_com[1],buffer_com[2]);
024E:  MOVF   6A,W
024F:  MOVWF  3C
0250:  MOVF   6B,W
0251:  MOVWF  3B
....................                      btens = make16(buffer_com[3],buffer_com[4]);
0252:  MOVF   6C,W
0253:  MOVWF  3E
0254:  MOVF   6D,W
0255:  MOVWF  3D
....................                      flag_com=4;
0256:  MOVLW  04
0257:  BSF    03.5
0258:  MOVWF  66
....................                      break;
0259:  GOTO   26B
....................                      
....................          case 0xda:  coef_encoder = make32(buffer_com[1],buffer_com[2],buffer_com[3],buffer_com[4]);
025A:  MOVF   6C,W
025B:  MOVWF  58
025C:  MOVF   6D,W
025D:  MOVWF  57
....................                      flag_com = 3;
025E:  MOVLW  03
025F:  BSF    03.5
0260:  MOVWF  66
....................                      break;         
0261:  GOTO   26B
....................                      
....................          case 0xdb:  ipage++;
0262:  INCF   2C,F
....................                      if(ipage > 2) ipage = 0;
0263:  MOVF   2C,W
0264:  SUBLW  02
0265:  BTFSS  03.0
0266:  CLRF   2C
....................                      break;             
0267:  BSF    03.5
0268:  GOTO   26B
0269:  BCF    03.5
....................          default:    break; 
026A:  BSF    03.5
026B:  BCF    03.5
....................       } 
....................    }
....................         
....................         
....................   
....................       
....................   
....................     
....................    
....................    
.................... }
.................... 
.................... //================================================   ngat ngoai
026C:  BCF    0C.5
026D:  BCF    0A.3
026E:  BCF    0A.4
026F:  GOTO   03B
.................... #INT_EXT 
.................... void  ext_isr()
.................... {
....................    flag_ext = 1;
*
0297:  BSF    03.5
0298:  BSF    67.3
....................    flag_peek = 1;
0299:  BSF    67.5
....................    disable_interrupts(INT_EXT );
029A:  BCF    03.5
029B:  BCF    0B.4
....................    run2=0;
029C:  CLRF   2F
....................  //  if (dir == dirmark) {
....................    
....................    gaussing = no;             //danh dau met
029D:  BSF    03.5
029E:  BTFSC  67.2
029F:  GOTO   2A3
02A0:  BCF    03.5
02A1:  BCF    06.5
02A2:  BSF    03.5
02A3:  BTFSS  67.2
02A4:  GOTO   2A8
02A5:  BCF    03.5
02A6:  BSF    06.5
02A7:  BSF    03.5
....................    mark_base++;
02A8:  INCF   68,F
....................    eraseall = no;             //bat bo xoa tong
02A9:  BTFSC  67.2
02AA:  GOTO   2AE
02AB:  BCF    03.5
02AC:  BCF    06.7
02AD:  BSF    03.5
02AE:  BTFSS  67.2
02AF:  GOTO   2B3
02B0:  BCF    03.5
02B1:  BSF    06.7
02B2:  BSF    03.5
....................    if (mark_base > base_length) {
02B3:  MOVF   68,W
02B4:  SUBWF  6C,W
02B5:  BTFSC  03.0
02B6:  GOTO   2C4
....................       mark_base =0;
02B7:  CLRF   68
....................       mark_length++;
02B8:  INCF   69,F
....................       erasepro = yes;         //tat bo xoa 
02B9:  BTFSC  67.1
02BA:  GOTO   2BE
02BB:  BCF    03.5
02BC:  BCF    06.6
02BD:  BSF    03.5
02BE:  BTFSS  67.1
02BF:  GOTO   2C3
02C0:  BCF    03.5
02C1:  BSF    06.6
02C2:  BSF    03.5
....................    }
02C3:  GOTO   2CE
....................    
....................  //  else if(mark_base==1) 
....................  //  erasepro = yes;         //tat bo xoa 
....................    else 
....................    erasepro = no;        //bat bo xoa
02C4:  BTFSC  67.2
02C5:  GOTO   2C9
02C6:  BCF    03.5
02C7:  BCF    06.6
02C8:  BSF    03.5
02C9:  BTFSS  67.2
02CA:  GOTO   2CE
02CB:  BCF    03.5
02CC:  BSF    06.6
02CD:  BSF    03.5
....................     
....................    if(mark_length*base_length >= 100) { 
02CE:  MOVF   69,W
02CF:  BCF    03.5
02D0:  BSF    03.6
02D1:  MOVWF  6B
02D2:  BSF    03.5
02D3:  BCF    03.6
02D4:  MOVF   6C,W
02D5:  BCF    03.5
02D6:  BSF    03.6
02D7:  MOVWF  6C
02D8:  BCF    03.6
02D9:  CALL   270
02DA:  MOVF   78,W
02DB:  SUBLW  63
02DC:  BTFSC  03.0
02DD:  GOTO   2E2
....................          mark_100++; 
02DE:  BSF    03.5
02DF:  INCF   6A,F
....................          mark_length=0;
02E0:  CLRF   69
02E1:  BCF    03.5
....................    }
....................    
....................    if(mark_100 >=5){
02E2:  BSF    03.5
02E3:  MOVF   6A,W
02E4:  SUBLW  04
02E5:  BTFSC  03.0
02E6:  GOTO   2E9
....................       mark_500++; 
02E7:  INCF   6B,F
....................       mark_100=0;
02E8:  CLRF   6A
....................    }
....................    
....................    if(mark_500 == 20){
02E9:  MOVF   6B,W
02EA:  SUBLW  14
02EB:  BTFSC  03.2
....................       mark_500 = 0; 
02EC:  CLRF   6B
....................       
....................    }
....................    
....................  /*  }
....................    else {
....................       erasepro = yes;         //tat bo xoa
....................       eraseall = yes;
....................       flag_dir=1;
....................   }
.................... */   
....................       
.................... } 
.................... 
02ED:  BCF    03.5
02EE:  BCF    0B.1
02EF:  BCF    0A.3
02F0:  BCF    0A.4
02F1:  GOTO   03B
.................... #INT_RTCC
.................... void rtc_isr()
.................... {
....................    set_timer0(255);
02F2:  MOVLW  FF
02F3:  MOVWF  01
....................    pwm1  =no;
02F4:  BSF    03.5
02F5:  BTFSC  67.2
02F6:  GOTO   2FA
02F7:  BCF    03.5
02F8:  BCF    07.1
02F9:  BSF    03.5
02FA:  BTFSS  67.2
02FB:  GOTO   2FF
02FC:  BCF    03.5
02FD:  BSF    07.1
02FE:  BSF    03.5
....................    shift_left(buf,6,dq);
02FF:  BCF    03.5
0300:  BTFSC  07.4
0301:  GOTO   304
0302:  BCF    03.0
0303:  GOTO   305
0304:  BSF    03.0
0305:  RLF    71,F
0306:  RLF    72,F
0307:  RLF    73,F
0308:  RLF    74,F
0309:  RLF    75,F
030A:  RLF    76,F
....................    pwm1  =yes;
030B:  BSF    03.5
030C:  BTFSC  67.1
030D:  GOTO   311
030E:  BCF    03.5
030F:  BCF    07.1
0310:  BSF    03.5
0311:  BTFSS  67.1
0312:  GOTO   316
0313:  BCF    03.5
0314:  BSF    07.1
0315:  BSF    03.5
....................    nd++;
0316:  INCF   65,F
.................... }
.................... // 100ms
.................... //   do toc do 12*0.5s = m/phut
.................... 
0317:  BCF    03.5
0318:  BCF    0B.2
0319:  BCF    0A.3
031A:  BCF    0A.4
031B:  GOTO   03B
.................... #INT_TIMER1
.................... void timer1_isr()
.................... {
....................    set_timer1(3035);             //100ms
031C:  CLRF   0E
031D:  MOVLW  0B
031E:  MOVWF  0F
031F:  MOVLW  DB
0320:  MOVWF  0E
0321:  NOP
....................    speed_flag++;
0322:  INCF   7B,F
....................    tt1++;
0323:  INCF   65,F
0324:  BTFSC  03.2
0325:  INCF   66,F
....................    run2++;
0326:  INCF   2F,F
....................    run3++;
0327:  INCF   30,F
....................    if(speed_flag >= 5){    //500ms
0328:  MOVF   7B,W
0329:  SUBLW  04
032A:  BTFSC  03.0
032B:  GOTO   3F5
....................    
....................    for (i=11;i>0;i--)   speed_buf[i]= speed_buf[i-1];
032C:  CLRF   5E
032D:  MOVLW  0B
032E:  MOVWF  5D
032F:  MOVF   5D,F
0330:  BTFSS  03.2
0331:  GOTO   335
0332:  MOVF   5E,F
0333:  BTFSC  03.2
0334:  GOTO   375
0335:  BCF    03.0
0336:  RLF    5D,W
0337:  MOVWF  79
0338:  RLF    5E,W
0339:  MOVWF  7A
033A:  MOVF   79,W
033B:  ADDLW  10
033C:  MOVWF  78
033D:  MOVLW  01
033E:  BTFSC  03.0
033F:  MOVLW  02
0340:  ADDWF  7A,F
0341:  MOVF   78,W
0342:  BSF    03.6
0343:  MOVWF  6B
0344:  MOVF   7A,W
0345:  MOVWF  6C
0346:  MOVLW  01
0347:  BCF    03.6
0348:  SUBWF  5D,W
0349:  BSF    03.6
034A:  MOVWF  6D
034B:  BCF    03.6
034C:  MOVF   5E,W
034D:  BSF    03.6
034E:  MOVWF  6E
034F:  MOVLW  00
0350:  BTFSS  03.0
0351:  MOVLW  01
0352:  SUBWF  6E,F
0353:  BCF    03.0
0354:  RLF    6D,W
0355:  MOVWF  79
0356:  RLF    6E,W
0357:  MOVWF  7A
0358:  MOVF   79,W
0359:  ADDLW  10
035A:  MOVWF  04
035B:  BSF    03.7
035C:  INCF   04,F
035D:  MOVF   00,W
035E:  MOVWF  7A
035F:  DECF   04,F
0360:  MOVF   00,W
0361:  MOVWF  6D
0362:  MOVF   7A,W
0363:  MOVWF  6E
0364:  MOVF   6B,W
0365:  MOVWF  04
0366:  BCF    03.7
0367:  BTFSC  6C.0
0368:  BSF    03.7
0369:  INCF   04,F
036A:  MOVF   6E,W
036B:  MOVWF  00
036C:  DECF   04,F
036D:  MOVF   6D,W
036E:  MOVWF  00
036F:  BCF    03.6
0370:  MOVF   5D,W
0371:  BTFSC  03.2
0372:  DECF   5E,F
0373:  DECF   5D,F
0374:  GOTO   32F
....................    speed_buf[0] = abs(depth - olddepth); 
0375:  MOVF   47,W
0376:  SUBWF  43,W
0377:  BSF    03.6
0378:  MOVWF  6B
0379:  BCF    03.6
037A:  MOVF   44,W
037B:  BSF    03.6
037C:  MOVWF  6C
037D:  BCF    03.6
037E:  MOVF   48,W
037F:  BTFSS  03.0
0380:  INCFSZ 48,W
0381:  GOTO   383
0382:  GOTO   386
0383:  BSF    03.6
0384:  SUBWF  6C,F
0385:  BCF    03.6
0386:  MOVF   45,W
0387:  BSF    03.6
0388:  MOVWF  6D
0389:  BCF    03.6
038A:  MOVF   49,W
038B:  BTFSS  03.0
038C:  INCFSZ 49,W
038D:  GOTO   38F
038E:  GOTO   392
038F:  BSF    03.6
0390:  SUBWF  6D,F
0391:  BCF    03.6
0392:  MOVF   46,W
0393:  BSF    03.6
0394:  MOVWF  6E
0395:  BCF    03.6
0396:  MOVF   4A,W
0397:  BTFSS  03.0
0398:  INCFSZ 4A,W
0399:  GOTO   39B
039A:  GOTO   39E
039B:  BSF    03.6
039C:  SUBWF  6E,F
039D:  BCF    03.6
039E:  BSF    03.6
039F:  MOVF   6B,W
03A0:  MOVWF  77
03A1:  MOVF   6C,W
03A2:  MOVWF  78
03A3:  MOVF   6D,W
03A4:  MOVWF  79
03A5:  MOVF   6E,W
03A6:  MOVWF  7A
03A7:  BTFSS  6E.7
03A8:  GOTO   3BB
03A9:  MOVF   6B,W
03AA:  SUBLW  00
03AB:  MOVWF  77
03AC:  CLRF   78
03AD:  MOVF   6C,W
03AE:  BTFSS  03.0
03AF:  INCFSZ 6C,W
03B0:  SUBWF  78,F
03B1:  CLRF   79
03B2:  MOVF   6D,W
03B3:  BTFSS  03.0
03B4:  INCFSZ 6D,W
03B5:  SUBWF  79,F
03B6:  CLRF   7A
03B7:  MOVF   6E,W
03B8:  BTFSS  03.0
03B9:  INCFSZ 6E,W
03BA:  SUBWF  7A,F
03BB:  MOVF   78,W
03BC:  MOVWF  11
03BD:  MOVF   77,W
03BE:  MOVWF  10
....................    olddepth = depth; 
03BF:  BCF    03.6
03C0:  MOVF   46,W
03C1:  MOVWF  4A
03C2:  MOVF   45,W
03C3:  MOVWF  49
03C4:  MOVF   44,W
03C5:  MOVWF  48
03C6:  MOVF   43,W
03C7:  MOVWF  47
....................    
....................    lspeed =0;
03C8:  CLRF   42
03C9:  CLRF   41
03CA:  CLRF   40
03CB:  CLRF   3F
....................    for (i=0;i<12;i++)   lspeed += speed_buf[i];             //so xung/ phut
03CC:  CLRF   5E
03CD:  CLRF   5D
03CE:  MOVF   5E,F
03CF:  BTFSS  03.2
03D0:  GOTO   3F4
03D1:  MOVF   5D,W
03D2:  SUBLW  0B
03D3:  BTFSS  03.0
03D4:  GOTO   3F4
03D5:  BCF    03.0
03D6:  RLF    5D,W
03D7:  MOVWF  79
03D8:  RLF    5E,W
03D9:  MOVWF  7A
03DA:  MOVF   79,W
03DB:  ADDLW  10
03DC:  MOVWF  04
03DD:  BSF    03.7
03DE:  INCF   04,F
03DF:  MOVF   00,W
03E0:  MOVWF  7A
03E1:  DECF   04,F
03E2:  MOVF   00,W
03E3:  ADDWF  3F,F
03E4:  MOVF   7A,W
03E5:  BTFSC  03.0
03E6:  INCFSZ 7A,W
03E7:  ADDWF  40,F
03E8:  MOVLW  00
03E9:  BTFSC  03.0
03EA:  MOVLW  01
03EB:  ADDWF  41,F
03EC:  MOVLW  00
03ED:  BTFSC  03.0
03EE:  MOVLW  01
03EF:  ADDWF  42,F
03F0:  INCF   5D,F
03F1:  BTFSC  03.2
03F2:  INCF   5E,F
03F3:  GOTO   3CE
....................    speed_flag=0;
03F4:  CLRF   7B
....................    
....................    }
....................    
....................    
03F5:  BCF    0C.0
03F6:  BCF    0A.3
03F7:  BCF    0A.4
03F8:  GOTO   03B
.................... }
.................... 
.................... 
.................... //=======================================================  gui du lieu
.................... void send_com(void)
.................... {
....................    
.................... for(i=0; i < 48; i++)    fputc(data[i]);  
*
0AC0:  CLRF   5E
0AC1:  CLRF   5D
0AC2:  MOVF   5E,F
0AC3:  BTFSS  03.2
0AC4:  GOTO   2D9
0AC5:  MOVF   5D,W
0AC6:  SUBLW  2F
0AC7:  BTFSS  03.0
0AC8:  GOTO   2D9
0AC9:  MOVLW  B4
0ACA:  ADDWF  5D,W
0ACB:  MOVWF  04
0ACC:  BCF    03.7
0ACD:  BTFSC  5E.0
0ACE:  BSF    03.7
0ACF:  MOVF   00,W
0AD0:  BSF    03.6
0AD1:  MOVWF  48
0AD2:  MOVWF  49
0AD3:  BCF    03.6
0AD4:  CALL   2A2
0AD5:  INCF   5D,F
0AD6:  BTFSC  03.2
0AD7:  INCF   5E,F
0AD8:  GOTO   2C2
.................... 
.................... fputc(0xaa);
0AD9:  MOVLW  AA
0ADA:  BSF    03.6
0ADB:  MOVWF  49
0ADC:  BCF    03.6
0ADD:  CALL   2A2
.................... fputc(0xaa);
0ADE:  MOVLW  AA
0ADF:  BSF    03.6
0AE0:  MOVWF  49
0AE1:  BCF    03.6
0AE2:  CALL   2A2
0AE3:  BSF    0A.3
0AE4:  BSF    0A.4
0AE5:  GOTO   380 (RETURN)
.................... 
.................... }
.................... 
.................... 
.................... 
.................... //===================================================chuan bj hien thj so
.................... void tach_so(int32 num)
.................... {
.................... int32 temp;
.................... 
.................... temp=num/1000000000;
*
0C0B:  BCF    03.1
0C0C:  BSF    03.6
0C0D:  MOVF   55,W
0C0E:  MOVWF  61
0C0F:  MOVF   54,W
0C10:  MOVWF  60
0C11:  MOVF   53,W
0C12:  MOVWF  5F
0C13:  MOVF   52,W
0C14:  MOVWF  5E
0C15:  MOVLW  3B
0C16:  MOVWF  65
0C17:  MOVLW  9A
0C18:  MOVWF  64
0C19:  MOVLW  CA
0C1A:  MOVWF  63
0C1B:  CLRF   62
0C1C:  BCF    03.6
0C1D:  CALL   3BA
0C1E:  MOVF   7A,W
0C1F:  BSF    03.6
0C20:  MOVWF  59
0C21:  MOVF   79,W
0C22:  MOVWF  58
0C23:  MOVF   78,W
0C24:  MOVWF  57
0C25:  MOVF   77,W
0C26:  MOVWF  56
.................... ty=temp;
0C27:  MOVF   56,W
0C28:  BCF    03.6
0C29:  MOVWF  3A
.................... 
.................... temp=num%1000000000;
0C2A:  BSF    03.1
0C2B:  MOVLW  5A
0C2C:  MOVWF  04
0C2D:  BSF    03.7
0C2E:  BSF    03.6
0C2F:  MOVF   55,W
0C30:  MOVWF  61
0C31:  MOVF   54,W
0C32:  MOVWF  60
0C33:  MOVF   53,W
0C34:  MOVWF  5F
0C35:  MOVF   52,W
0C36:  MOVWF  5E
0C37:  MOVLW  3B
0C38:  MOVWF  65
0C39:  MOVLW  9A
0C3A:  MOVWF  64
0C3B:  MOVLW  CA
0C3C:  MOVWF  63
0C3D:  CLRF   62
0C3E:  BCF    03.6
0C3F:  CALL   3BA
0C40:  BSF    03.6
0C41:  MOVF   5D,W
0C42:  MOVWF  59
0C43:  MOVF   5C,W
0C44:  MOVWF  58
0C45:  MOVF   5B,W
0C46:  MOVWF  57
0C47:  MOVF   5A,W
0C48:  MOVWF  56
.................... temp/=100000000;
0C49:  BCF    03.1
0C4A:  MOVF   59,W
0C4B:  MOVWF  61
0C4C:  MOVF   58,W
0C4D:  MOVWF  60
0C4E:  MOVF   57,W
0C4F:  MOVWF  5F
0C50:  MOVF   56,W
0C51:  MOVWF  5E
0C52:  MOVLW  05
0C53:  MOVWF  65
0C54:  MOVLW  F5
0C55:  MOVWF  64
0C56:  MOVLW  E1
0C57:  MOVWF  63
0C58:  CLRF   62
0C59:  BCF    03.6
0C5A:  CALL   3BA
0C5B:  MOVF   7A,W
0C5C:  BSF    03.6
0C5D:  MOVWF  59
0C5E:  MOVF   79,W
0C5F:  MOVWF  58
0C60:  MOVF   78,W
0C61:  MOVWF  57
0C62:  MOVF   77,W
0C63:  MOVWF  56
.................... tramtrieu=temp;
0C64:  MOVF   56,W
0C65:  BCF    03.6
0C66:  MOVWF  39
.................... 
.................... temp=num%100000000;
0C67:  BSF    03.1
0C68:  MOVLW  5A
0C69:  MOVWF  04
0C6A:  BSF    03.7
0C6B:  BSF    03.6
0C6C:  MOVF   55,W
0C6D:  MOVWF  61
0C6E:  MOVF   54,W
0C6F:  MOVWF  60
0C70:  MOVF   53,W
0C71:  MOVWF  5F
0C72:  MOVF   52,W
0C73:  MOVWF  5E
0C74:  MOVLW  05
0C75:  MOVWF  65
0C76:  MOVLW  F5
0C77:  MOVWF  64
0C78:  MOVLW  E1
0C79:  MOVWF  63
0C7A:  CLRF   62
0C7B:  BCF    03.6
0C7C:  CALL   3BA
0C7D:  BSF    03.6
0C7E:  MOVF   5D,W
0C7F:  MOVWF  59
0C80:  MOVF   5C,W
0C81:  MOVWF  58
0C82:  MOVF   5B,W
0C83:  MOVWF  57
0C84:  MOVF   5A,W
0C85:  MOVWF  56
.................... temp/=10000000;
0C86:  BCF    03.1
0C87:  MOVF   59,W
0C88:  MOVWF  61
0C89:  MOVF   58,W
0C8A:  MOVWF  60
0C8B:  MOVF   57,W
0C8C:  MOVWF  5F
0C8D:  MOVF   56,W
0C8E:  MOVWF  5E
0C8F:  CLRF   65
0C90:  MOVLW  98
0C91:  MOVWF  64
0C92:  MOVLW  96
0C93:  MOVWF  63
0C94:  MOVLW  80
0C95:  MOVWF  62
0C96:  BCF    03.6
0C97:  CALL   3BA
0C98:  MOVF   7A,W
0C99:  BSF    03.6
0C9A:  MOVWF  59
0C9B:  MOVF   79,W
0C9C:  MOVWF  58
0C9D:  MOVF   78,W
0C9E:  MOVWF  57
0C9F:  MOVF   77,W
0CA0:  MOVWF  56
.................... chuctrieu=temp;
0CA1:  MOVF   56,W
0CA2:  BCF    03.6
0CA3:  MOVWF  38
.................... 
.................... temp=num%10000000;
0CA4:  BSF    03.1
0CA5:  MOVLW  5A
0CA6:  MOVWF  04
0CA7:  BSF    03.7
0CA8:  BSF    03.6
0CA9:  MOVF   55,W
0CAA:  MOVWF  61
0CAB:  MOVF   54,W
0CAC:  MOVWF  60
0CAD:  MOVF   53,W
0CAE:  MOVWF  5F
0CAF:  MOVF   52,W
0CB0:  MOVWF  5E
0CB1:  CLRF   65
0CB2:  MOVLW  98
0CB3:  MOVWF  64
0CB4:  MOVLW  96
0CB5:  MOVWF  63
0CB6:  MOVLW  80
0CB7:  MOVWF  62
0CB8:  BCF    03.6
0CB9:  CALL   3BA
0CBA:  BSF    03.6
0CBB:  MOVF   5D,W
0CBC:  MOVWF  59
0CBD:  MOVF   5C,W
0CBE:  MOVWF  58
0CBF:  MOVF   5B,W
0CC0:  MOVWF  57
0CC1:  MOVF   5A,W
0CC2:  MOVWF  56
.................... temp/=1000000;
0CC3:  BCF    03.1
0CC4:  MOVF   59,W
0CC5:  MOVWF  61
0CC6:  MOVF   58,W
0CC7:  MOVWF  60
0CC8:  MOVF   57,W
0CC9:  MOVWF  5F
0CCA:  MOVF   56,W
0CCB:  MOVWF  5E
0CCC:  CLRF   65
0CCD:  MOVLW  0F
0CCE:  MOVWF  64
0CCF:  MOVLW  42
0CD0:  MOVWF  63
0CD1:  MOVLW  40
0CD2:  MOVWF  62
0CD3:  BCF    03.6
0CD4:  CALL   3BA
0CD5:  MOVF   7A,W
0CD6:  BSF    03.6
0CD7:  MOVWF  59
0CD8:  MOVF   79,W
0CD9:  MOVWF  58
0CDA:  MOVF   78,W
0CDB:  MOVWF  57
0CDC:  MOVF   77,W
0CDD:  MOVWF  56
.................... trieu=temp;
0CDE:  MOVF   56,W
0CDF:  BCF    03.6
0CE0:  MOVWF  37
.................... 
.................... temp=num%1000000;
0CE1:  BSF    03.1
0CE2:  MOVLW  5A
0CE3:  MOVWF  04
0CE4:  BSF    03.7
0CE5:  BSF    03.6
0CE6:  MOVF   55,W
0CE7:  MOVWF  61
0CE8:  MOVF   54,W
0CE9:  MOVWF  60
0CEA:  MOVF   53,W
0CEB:  MOVWF  5F
0CEC:  MOVF   52,W
0CED:  MOVWF  5E
0CEE:  CLRF   65
0CEF:  MOVLW  0F
0CF0:  MOVWF  64
0CF1:  MOVLW  42
0CF2:  MOVWF  63
0CF3:  MOVLW  40
0CF4:  MOVWF  62
0CF5:  BCF    03.6
0CF6:  CALL   3BA
0CF7:  BSF    03.6
0CF8:  MOVF   5D,W
0CF9:  MOVWF  59
0CFA:  MOVF   5C,W
0CFB:  MOVWF  58
0CFC:  MOVF   5B,W
0CFD:  MOVWF  57
0CFE:  MOVF   5A,W
0CFF:  MOVWF  56
.................... temp/=100000;
0D00:  BCF    03.1
0D01:  MOVF   59,W
0D02:  MOVWF  61
0D03:  MOVF   58,W
0D04:  MOVWF  60
0D05:  MOVF   57,W
0D06:  MOVWF  5F
0D07:  MOVF   56,W
0D08:  MOVWF  5E
0D09:  CLRF   65
0D0A:  MOVLW  01
0D0B:  MOVWF  64
0D0C:  MOVLW  86
0D0D:  MOVWF  63
0D0E:  MOVLW  A0
0D0F:  MOVWF  62
0D10:  BCF    03.6
0D11:  CALL   3BA
0D12:  MOVF   7A,W
0D13:  BSF    03.6
0D14:  MOVWF  59
0D15:  MOVF   79,W
0D16:  MOVWF  58
0D17:  MOVF   78,W
0D18:  MOVWF  57
0D19:  MOVF   77,W
0D1A:  MOVWF  56
.................... tramnghin=temp;
0D1B:  MOVF   56,W
0D1C:  BCF    03.6
0D1D:  MOVWF  36
.................... 
.................... temp=num%100000;
0D1E:  BSF    03.1
0D1F:  MOVLW  5A
0D20:  MOVWF  04
0D21:  BSF    03.7
0D22:  BSF    03.6
0D23:  MOVF   55,W
0D24:  MOVWF  61
0D25:  MOVF   54,W
0D26:  MOVWF  60
0D27:  MOVF   53,W
0D28:  MOVWF  5F
0D29:  MOVF   52,W
0D2A:  MOVWF  5E
0D2B:  CLRF   65
0D2C:  MOVLW  01
0D2D:  MOVWF  64
0D2E:  MOVLW  86
0D2F:  MOVWF  63
0D30:  MOVLW  A0
0D31:  MOVWF  62
0D32:  BCF    03.6
0D33:  CALL   3BA
0D34:  BSF    03.6
0D35:  MOVF   5D,W
0D36:  MOVWF  59
0D37:  MOVF   5C,W
0D38:  MOVWF  58
0D39:  MOVF   5B,W
0D3A:  MOVWF  57
0D3B:  MOVF   5A,W
0D3C:  MOVWF  56
.................... temp/=10000;
0D3D:  BCF    03.1
0D3E:  MOVF   59,W
0D3F:  MOVWF  61
0D40:  MOVF   58,W
0D41:  MOVWF  60
0D42:  MOVF   57,W
0D43:  MOVWF  5F
0D44:  MOVF   56,W
0D45:  MOVWF  5E
0D46:  CLRF   65
0D47:  CLRF   64
0D48:  MOVLW  27
0D49:  MOVWF  63
0D4A:  MOVLW  10
0D4B:  MOVWF  62
0D4C:  BCF    03.6
0D4D:  CALL   3BA
0D4E:  MOVF   7A,W
0D4F:  BSF    03.6
0D50:  MOVWF  59
0D51:  MOVF   79,W
0D52:  MOVWF  58
0D53:  MOVF   78,W
0D54:  MOVWF  57
0D55:  MOVF   77,W
0D56:  MOVWF  56
.................... chucnghin=temp;
0D57:  MOVF   56,W
0D58:  BCF    03.6
0D59:  MOVWF  35
.................... 
.................... temp=num%10000;
0D5A:  BSF    03.1
0D5B:  MOVLW  5A
0D5C:  MOVWF  04
0D5D:  BSF    03.7
0D5E:  BSF    03.6
0D5F:  MOVF   55,W
0D60:  MOVWF  61
0D61:  MOVF   54,W
0D62:  MOVWF  60
0D63:  MOVF   53,W
0D64:  MOVWF  5F
0D65:  MOVF   52,W
0D66:  MOVWF  5E
0D67:  CLRF   65
0D68:  CLRF   64
0D69:  MOVLW  27
0D6A:  MOVWF  63
0D6B:  MOVLW  10
0D6C:  MOVWF  62
0D6D:  BCF    03.6
0D6E:  CALL   3BA
0D6F:  BSF    03.6
0D70:  MOVF   5D,W
0D71:  MOVWF  59
0D72:  MOVF   5C,W
0D73:  MOVWF  58
0D74:  MOVF   5B,W
0D75:  MOVWF  57
0D76:  MOVF   5A,W
0D77:  MOVWF  56
.................... temp/=1000;
0D78:  BCF    03.1
0D79:  MOVF   59,W
0D7A:  MOVWF  61
0D7B:  MOVF   58,W
0D7C:  MOVWF  60
0D7D:  MOVF   57,W
0D7E:  MOVWF  5F
0D7F:  MOVF   56,W
0D80:  MOVWF  5E
0D81:  CLRF   65
0D82:  CLRF   64
0D83:  MOVLW  03
0D84:  MOVWF  63
0D85:  MOVLW  E8
0D86:  MOVWF  62
0D87:  BCF    03.6
0D88:  CALL   3BA
0D89:  MOVF   7A,W
0D8A:  BSF    03.6
0D8B:  MOVWF  59
0D8C:  MOVF   79,W
0D8D:  MOVWF  58
0D8E:  MOVF   78,W
0D8F:  MOVWF  57
0D90:  MOVF   77,W
0D91:  MOVWF  56
.................... nghin=temp;
0D92:  MOVF   56,W
0D93:  BCF    03.6
0D94:  MOVWF  34
.................... 
.................... temp=num%1000;
0D95:  BSF    03.1
0D96:  MOVLW  5A
0D97:  MOVWF  04
0D98:  BSF    03.7
0D99:  BSF    03.6
0D9A:  MOVF   55,W
0D9B:  MOVWF  61
0D9C:  MOVF   54,W
0D9D:  MOVWF  60
0D9E:  MOVF   53,W
0D9F:  MOVWF  5F
0DA0:  MOVF   52,W
0DA1:  MOVWF  5E
0DA2:  CLRF   65
0DA3:  CLRF   64
0DA4:  MOVLW  03
0DA5:  MOVWF  63
0DA6:  MOVLW  E8
0DA7:  MOVWF  62
0DA8:  BCF    03.6
0DA9:  CALL   3BA
0DAA:  BSF    03.6
0DAB:  MOVF   5D,W
0DAC:  MOVWF  59
0DAD:  MOVF   5C,W
0DAE:  MOVWF  58
0DAF:  MOVF   5B,W
0DB0:  MOVWF  57
0DB1:  MOVF   5A,W
0DB2:  MOVWF  56
.................... temp/=100;
0DB3:  BCF    03.1
0DB4:  MOVF   59,W
0DB5:  MOVWF  61
0DB6:  MOVF   58,W
0DB7:  MOVWF  60
0DB8:  MOVF   57,W
0DB9:  MOVWF  5F
0DBA:  MOVF   56,W
0DBB:  MOVWF  5E
0DBC:  CLRF   65
0DBD:  CLRF   64
0DBE:  CLRF   63
0DBF:  MOVLW  64
0DC0:  MOVWF  62
0DC1:  BCF    03.6
0DC2:  CALL   3BA
0DC3:  MOVF   7A,W
0DC4:  BSF    03.6
0DC5:  MOVWF  59
0DC6:  MOVF   79,W
0DC7:  MOVWF  58
0DC8:  MOVF   78,W
0DC9:  MOVWF  57
0DCA:  MOVF   77,W
0DCB:  MOVWF  56
.................... tram=temp;
0DCC:  MOVF   56,W
0DCD:  BCF    03.6
0DCE:  MOVWF  33
.................... 
.................... temp=num%100;
0DCF:  BSF    03.1
0DD0:  MOVLW  5A
0DD1:  MOVWF  04
0DD2:  BSF    03.7
0DD3:  BSF    03.6
0DD4:  MOVF   55,W
0DD5:  MOVWF  61
0DD6:  MOVF   54,W
0DD7:  MOVWF  60
0DD8:  MOVF   53,W
0DD9:  MOVWF  5F
0DDA:  MOVF   52,W
0DDB:  MOVWF  5E
0DDC:  CLRF   65
0DDD:  CLRF   64
0DDE:  CLRF   63
0DDF:  MOVLW  64
0DE0:  MOVWF  62
0DE1:  BCF    03.6
0DE2:  CALL   3BA
0DE3:  BSF    03.6
0DE4:  MOVF   5D,W
0DE5:  MOVWF  59
0DE6:  MOVF   5C,W
0DE7:  MOVWF  58
0DE8:  MOVF   5B,W
0DE9:  MOVWF  57
0DEA:  MOVF   5A,W
0DEB:  MOVWF  56
.................... temp/=10;
0DEC:  BCF    03.1
0DED:  MOVF   59,W
0DEE:  MOVWF  61
0DEF:  MOVF   58,W
0DF0:  MOVWF  60
0DF1:  MOVF   57,W
0DF2:  MOVWF  5F
0DF3:  MOVF   56,W
0DF4:  MOVWF  5E
0DF5:  CLRF   65
0DF6:  CLRF   64
0DF7:  CLRF   63
0DF8:  MOVLW  0A
0DF9:  MOVWF  62
0DFA:  BCF    03.6
0DFB:  CALL   3BA
0DFC:  MOVF   7A,W
0DFD:  BSF    03.6
0DFE:  MOVWF  59
0DFF:  MOVF   79,W
0E00:  MOVWF  58
0E01:  MOVF   78,W
0E02:  MOVWF  57
0E03:  MOVF   77,W
0E04:  MOVWF  56
.................... chuc=temp;
0E05:  MOVF   56,W
0E06:  BCF    03.6
0E07:  MOVWF  32
.................... 
.................... donvi=num%10;
0E08:  BSF    03.1
0E09:  MOVLW  5A
0E0A:  MOVWF  04
0E0B:  BSF    03.7
0E0C:  BSF    03.6
0E0D:  MOVF   55,W
0E0E:  MOVWF  61
0E0F:  MOVF   54,W
0E10:  MOVWF  60
0E11:  MOVF   53,W
0E12:  MOVWF  5F
0E13:  MOVF   52,W
0E14:  MOVWF  5E
0E15:  CLRF   65
0E16:  CLRF   64
0E17:  CLRF   63
0E18:  MOVLW  0A
0E19:  MOVWF  62
0E1A:  BCF    03.6
0E1B:  CALL   3BA
0E1C:  BSF    03.6
0E1D:  MOVF   5A,W
0E1E:  BCF    03.6
0E1F:  MOVWF  31
0E20:  RETURN
.................... }
.................... 
.................... void out_num_ty()
.................... {
.................... lcd_putc(ty+48);
*
1378:  MOVLW  30
1379:  ADDWF  3A,W
137A:  BSF    03.6
137B:  MOVWF  4D
137C:  MOVWF  54
137D:  BCF    0A.4
137E:  BSF    0A.3
137F:  BCF    03.6
1380:  CALL   2E6
1381:  BSF    0A.4
1382:  BCF    0A.3
.................... lcd_putc(tramtrieu+48);
1383:  MOVLW  30
1384:  ADDWF  39,W
1385:  BSF    03.6
1386:  MOVWF  4D
1387:  MOVWF  54
1388:  BCF    0A.4
1389:  BSF    0A.3
138A:  BCF    03.6
138B:  CALL   2E6
138C:  BSF    0A.4
138D:  BCF    0A.3
.................... lcd_putc(chuctrieu+48);
138E:  MOVLW  30
138F:  ADDWF  38,W
1390:  BSF    03.6
1391:  MOVWF  4D
1392:  MOVWF  54
1393:  BCF    0A.4
1394:  BSF    0A.3
1395:  BCF    03.6
1396:  CALL   2E6
1397:  BSF    0A.4
1398:  BCF    0A.3
.................... lcd_putc(trieu+48);
1399:  MOVLW  30
139A:  ADDWF  37,W
139B:  BSF    03.6
139C:  MOVWF  4D
139D:  MOVWF  54
139E:  BCF    0A.4
139F:  BSF    0A.3
13A0:  BCF    03.6
13A1:  CALL   2E6
13A2:  BSF    0A.4
13A3:  BCF    0A.3
.................... lcd_putc(tramnghin+48);
13A4:  MOVLW  30
13A5:  ADDWF  36,W
13A6:  BSF    03.6
13A7:  MOVWF  4D
13A8:  MOVWF  54
13A9:  BCF    0A.4
13AA:  BSF    0A.3
13AB:  BCF    03.6
13AC:  CALL   2E6
13AD:  BSF    0A.4
13AE:  BCF    0A.3
.................... lcd_putc(chucnghin+48);
13AF:  MOVLW  30
13B0:  ADDWF  35,W
13B1:  BSF    03.6
13B2:  MOVWF  4D
13B3:  MOVWF  54
13B4:  BCF    0A.4
13B5:  BSF    0A.3
13B6:  BCF    03.6
13B7:  CALL   2E6
13B8:  BSF    0A.4
13B9:  BCF    0A.3
.................... lcd_putc(nghin+48);
13BA:  MOVLW  30
13BB:  ADDWF  34,W
13BC:  BSF    03.6
13BD:  MOVWF  4D
13BE:  MOVWF  54
13BF:  BCF    0A.4
13C0:  BSF    0A.3
13C1:  BCF    03.6
13C2:  CALL   2E6
13C3:  BSF    0A.4
13C4:  BCF    0A.3
.................... lcd_putc(tram+48);
13C5:  MOVLW  30
13C6:  ADDWF  33,W
13C7:  BSF    03.6
13C8:  MOVWF  4D
13C9:  MOVWF  54
13CA:  BCF    0A.4
13CB:  BSF    0A.3
13CC:  BCF    03.6
13CD:  CALL   2E6
13CE:  BSF    0A.4
13CF:  BCF    0A.3
.................... lcd_putc(chuc+48);
13D0:  MOVLW  30
13D1:  ADDWF  32,W
13D2:  BSF    03.6
13D3:  MOVWF  4D
13D4:  MOVWF  54
13D5:  BCF    0A.4
13D6:  BSF    0A.3
13D7:  BCF    03.6
13D8:  CALL   2E6
13D9:  BSF    0A.4
13DA:  BCF    0A.3
.................... lcd_putc(donvi+48);
13DB:  MOVLW  30
13DC:  ADDWF  31,W
13DD:  BSF    03.6
13DE:  MOVWF  4D
13DF:  MOVWF  54
13E0:  BCF    0A.4
13E1:  BSF    0A.3
13E2:  BCF    03.6
13E3:  CALL   2E6
13E4:  BSF    0A.4
13E5:  BCF    0A.3
.................... }
.................... void write_num_ty(int32 num)
.................... {
.................... tach_so(num);
*
136A:  MOVF   4C,W
136B:  MOVWF  55
136C:  MOVF   4B,W
136D:  MOVWF  54
136E:  MOVF   4A,W
136F:  MOVWF  53
1370:  MOVF   49,W
1371:  MOVWF  52
1372:  BCF    0A.4
1373:  BSF    0A.3
1374:  BCF    03.6
1375:  CALL   40B
1376:  BSF    0A.4
1377:  BCF    0A.3
.................... out_num_ty();
.................... }
.................... //===================================================chuan bj hien thj so
.................... void tach_so_8(int8 num)
.................... {
.................... int8 temp;
.................... 
.................... temp/=100;
*
0F45:  MOVF   4B,W
0F46:  MOVWF  4C
0F47:  MOVLW  64
0F48:  MOVWF  4D
0F49:  BCF    0A.3
0F4A:  BCF    03.6
0F4B:  CALL   643
0F4C:  BSF    0A.3
0F4D:  MOVF   78,W
0F4E:  BSF    03.6
0F4F:  MOVWF  4B
.................... tram=temp;
0F50:  MOVF   4B,W
0F51:  BCF    03.6
0F52:  MOVWF  33
.................... 
.................... temp=num%100;
0F53:  BSF    03.6
0F54:  MOVF   4A,W
0F55:  MOVWF  4C
0F56:  MOVLW  64
0F57:  MOVWF  4D
0F58:  BCF    0A.3
0F59:  BCF    03.6
0F5A:  CALL   643
0F5B:  BSF    0A.3
0F5C:  MOVF   77,W
0F5D:  BSF    03.6
0F5E:  MOVWF  4B
.................... temp/=10;
0F5F:  MOVF   4B,W
0F60:  MOVWF  4C
0F61:  MOVLW  0A
0F62:  MOVWF  4D
0F63:  BCF    0A.3
0F64:  BCF    03.6
0F65:  CALL   643
0F66:  BSF    0A.3
0F67:  MOVF   78,W
0F68:  BSF    03.6
0F69:  MOVWF  4B
.................... chuc=temp;
0F6A:  MOVF   4B,W
0F6B:  BCF    03.6
0F6C:  MOVWF  32
.................... 
.................... donvi=num%10;
0F6D:  BSF    03.6
0F6E:  MOVF   4A,W
0F6F:  MOVWF  4C
0F70:  MOVLW  0A
0F71:  MOVWF  4D
0F72:  BCF    0A.3
0F73:  BCF    03.6
0F74:  CALL   643
0F75:  BSF    0A.3
0F76:  MOVF   77,W
0F77:  MOVWF  31
.................... }
.................... 
.................... //=============================================================
.................... void out_num_8()
.................... {
.................... 
.................... if(tram!=0) lcd_putc(tram+48);
0F78:  MOVF   33,F
0F79:  BTFSC  03.2
0F7A:  GOTO   782
0F7B:  MOVLW  30
0F7C:  ADDWF  33,W
0F7D:  BSF    03.6
0F7E:  MOVWF  4A
0F7F:  MOVWF  54
0F80:  BCF    03.6
0F81:  CALL   2E6
.................... 
.................... if((chuc!=0)|(tram!=0)) lcd_putc(chuc+48);
0F82:  MOVF   32,F
0F83:  BTFSS  03.2
0F84:  GOTO   787
0F85:  MOVLW  00
0F86:  GOTO   788
0F87:  MOVLW  01
0F88:  BSF    03.6
0F89:  MOVWF  4A
0F8A:  BCF    03.6
0F8B:  MOVF   33,F
0F8C:  BTFSS  03.2
0F8D:  GOTO   790
0F8E:  MOVLW  00
0F8F:  GOTO   791
0F90:  MOVLW  01
0F91:  BSF    03.6
0F92:  IORWF  4A,W
0F93:  BTFSC  03.2
0F94:  GOTO   79E
0F95:  MOVLW  30
0F96:  BCF    03.6
0F97:  ADDWF  32,W
0F98:  BSF    03.6
0F99:  MOVWF  4A
0F9A:  MOVWF  54
0F9B:  BCF    03.6
0F9C:  CALL   2E6
0F9D:  BSF    03.6
....................       
.................... lcd_putc(donvi+48);
0F9E:  MOVLW  30
0F9F:  BCF    03.6
0FA0:  ADDWF  31,W
0FA1:  BSF    03.6
0FA2:  MOVWF  4A
0FA3:  MOVWF  54
0FA4:  BCF    03.6
0FA5:  CALL   2E6
.................... 
.................... }
.................... void write_num_8(int8 num)
.................... {
.................... tach_so_8(num);
*
0F42:  BSF    03.6
0F43:  MOVF   49,W
0F44:  MOVWF  4A
.................... out_num_8();
*
0FA6:  RETURN
.................... }
.................... 
.................... //=============================================================
.................... void out_num(int8 dot)
.................... {
.................... if(trieu!=0)
*
0E2F:  BCF    03.6
0E30:  MOVF   37,F
0E31:  BTFSC  03.2
0E32:  GOTO   63A
.................... {lcd_putc(trieu+48);}
0E33:  MOVLW  30
0E34:  ADDWF  37,W
0E35:  BSF    03.6
0E36:  MOVWF  53
0E37:  MOVWF  54
0E38:  BCF    03.6
0E39:  CALL   2E6
.................... 
.................... if((tramnghin!=0)|(trieu!=0))
0E3A:  MOVF   36,F
0E3B:  BTFSS  03.2
0E3C:  GOTO   63F
0E3D:  MOVLW  00
0E3E:  GOTO   640
0E3F:  MOVLW  01
0E40:  BSF    03.6
0E41:  MOVWF  53
0E42:  BCF    03.6
0E43:  MOVF   37,F
0E44:  BTFSS  03.2
0E45:  GOTO   648
0E46:  MOVLW  00
0E47:  GOTO   649
0E48:  MOVLW  01
0E49:  BSF    03.6
0E4A:  IORWF  53,W
0E4B:  BTFSC  03.2
0E4C:  GOTO   656
.................... {lcd_putc(tramnghin+48);}
0E4D:  MOVLW  30
0E4E:  BCF    03.6
0E4F:  ADDWF  36,W
0E50:  BSF    03.6
0E51:  MOVWF  53
0E52:  MOVWF  54
0E53:  BCF    03.6
0E54:  CALL   2E6
0E55:  BSF    03.6
.................... 
.................... if((tramnghin!=0)|(chucnghin!=0)|(trieu!=0))
0E56:  BCF    03.6
0E57:  MOVF   36,F
0E58:  BTFSS  03.2
0E59:  GOTO   65C
0E5A:  MOVLW  00
0E5B:  GOTO   65D
0E5C:  MOVLW  01
0E5D:  BSF    03.6
0E5E:  MOVWF  53
0E5F:  BCF    03.6
0E60:  MOVF   35,F
0E61:  BTFSS  03.2
0E62:  GOTO   665
0E63:  MOVLW  00
0E64:  GOTO   666
0E65:  MOVLW  01
0E66:  BSF    03.6
0E67:  IORWF  53,F
0E68:  BCF    03.6
0E69:  MOVF   37,F
0E6A:  BTFSS  03.2
0E6B:  GOTO   66E
0E6C:  MOVLW  00
0E6D:  GOTO   66F
0E6E:  MOVLW  01
0E6F:  BSF    03.6
0E70:  IORWF  53,W
0E71:  BTFSC  03.2
0E72:  GOTO   67C
.................... {lcd_putc(chucnghin+48);}
0E73:  MOVLW  30
0E74:  BCF    03.6
0E75:  ADDWF  35,W
0E76:  BSF    03.6
0E77:  MOVWF  53
0E78:  MOVWF  54
0E79:  BCF    03.6
0E7A:  CALL   2E6
0E7B:  BSF    03.6
.................... 
.................... if((tramnghin!=0)|(chucnghin!=0)|(trieu!=0)|(nghin!=0)|(dot==3))
0E7C:  BCF    03.6
0E7D:  MOVF   36,F
0E7E:  BTFSS  03.2
0E7F:  GOTO   682
0E80:  MOVLW  00
0E81:  GOTO   683
0E82:  MOVLW  01
0E83:  BSF    03.6
0E84:  MOVWF  53
0E85:  BCF    03.6
0E86:  MOVF   35,F
0E87:  BTFSS  03.2
0E88:  GOTO   68B
0E89:  MOVLW  00
0E8A:  GOTO   68C
0E8B:  MOVLW  01
0E8C:  BSF    03.6
0E8D:  IORWF  53,F
0E8E:  BCF    03.6
0E8F:  MOVF   37,F
0E90:  BTFSS  03.2
0E91:  GOTO   694
0E92:  MOVLW  00
0E93:  GOTO   695
0E94:  MOVLW  01
0E95:  BSF    03.6
0E96:  IORWF  53,F
0E97:  BCF    03.6
0E98:  MOVF   34,F
0E99:  BTFSS  03.2
0E9A:  GOTO   69D
0E9B:  MOVLW  00
0E9C:  GOTO   69E
0E9D:  MOVLW  01
0E9E:  BSF    03.6
0E9F:  IORWF  53,F
0EA0:  MOVF   52,W
0EA1:  SUBLW  03
0EA2:  BTFSC  03.2
0EA3:  GOTO   6A6
0EA4:  MOVLW  00
0EA5:  GOTO   6A7
0EA6:  MOVLW  01
0EA7:  IORWF  53,W
0EA8:  BTFSC  03.2
0EA9:  GOTO   6BC
....................  {lcd_putc(nghin+48);
0EAA:  MOVLW  30
0EAB:  BCF    03.6
0EAC:  ADDWF  34,W
0EAD:  BSF    03.6
0EAE:  MOVWF  53
0EAF:  MOVWF  54
0EB0:  BCF    03.6
0EB1:  CALL   2E6
....................   if(dot==3)
0EB2:  BSF    03.6
0EB3:  MOVF   52,W
0EB4:  SUBLW  03
0EB5:  BTFSS  03.2
0EB6:  GOTO   6BC
....................       {lcd_putc('.');}
0EB7:  MOVLW  2E
0EB8:  MOVWF  54
0EB9:  BCF    03.6
0EBA:  CALL   2E6
0EBB:  BSF    03.6
....................  }
.................... if((tramnghin!=0)|(chucnghin!=0)|(trieu!=0)|(nghin!=0)|(tram!=0)|(dot==2)) 
0EBC:  BCF    03.6
0EBD:  MOVF   36,F
0EBE:  BTFSS  03.2
0EBF:  GOTO   6C2
0EC0:  MOVLW  00
0EC1:  GOTO   6C3
0EC2:  MOVLW  01
0EC3:  BSF    03.6
0EC4:  MOVWF  53
0EC5:  BCF    03.6
0EC6:  MOVF   35,F
0EC7:  BTFSS  03.2
0EC8:  GOTO   6CB
0EC9:  MOVLW  00
0ECA:  GOTO   6CC
0ECB:  MOVLW  01
0ECC:  BSF    03.6
0ECD:  IORWF  53,F
0ECE:  BCF    03.6
0ECF:  MOVF   37,F
0ED0:  BTFSS  03.2
0ED1:  GOTO   6D4
0ED2:  MOVLW  00
0ED3:  GOTO   6D5
0ED4:  MOVLW  01
0ED5:  BSF    03.6
0ED6:  IORWF  53,F
0ED7:  BCF    03.6
0ED8:  MOVF   34,F
0ED9:  BTFSS  03.2
0EDA:  GOTO   6DD
0EDB:  MOVLW  00
0EDC:  GOTO   6DE
0EDD:  MOVLW  01
0EDE:  BSF    03.6
0EDF:  IORWF  53,F
0EE0:  BCF    03.6
0EE1:  MOVF   33,F
0EE2:  BTFSS  03.2
0EE3:  GOTO   6E6
0EE4:  MOVLW  00
0EE5:  GOTO   6E7
0EE6:  MOVLW  01
0EE7:  BSF    03.6
0EE8:  IORWF  53,F
0EE9:  MOVF   52,W
0EEA:  SUBLW  02
0EEB:  BTFSC  03.2
0EEC:  GOTO   6EF
0EED:  MOVLW  00
0EEE:  GOTO   6F0
0EEF:  MOVLW  01
0EF0:  IORWF  53,W
0EF1:  BTFSC  03.2
0EF2:  GOTO   705
.................... { lcd_putc(tram+48);
0EF3:  MOVLW  30
0EF4:  BCF    03.6
0EF5:  ADDWF  33,W
0EF6:  BSF    03.6
0EF7:  MOVWF  53
0EF8:  MOVWF  54
0EF9:  BCF    03.6
0EFA:  CALL   2E6
....................    if(dot==2)
0EFB:  BSF    03.6
0EFC:  MOVF   52,W
0EFD:  SUBLW  02
0EFE:  BTFSS  03.2
0EFF:  GOTO   705
....................       {lcd_putc('.');}
0F00:  MOVLW  2E
0F01:  MOVWF  54
0F02:  BCF    03.6
0F03:  CALL   2E6
0F04:  BSF    03.6
.................... } 
.................... if((nghin!=0)|(tram!=0)|(chuc!=0)|(dot==1)) 
0F05:  BCF    03.6
0F06:  MOVF   34,F
0F07:  BTFSS  03.2
0F08:  GOTO   70B
0F09:  MOVLW  00
0F0A:  GOTO   70C
0F0B:  MOVLW  01
0F0C:  BSF    03.6
0F0D:  MOVWF  53
0F0E:  BCF    03.6
0F0F:  MOVF   33,F
0F10:  BTFSS  03.2
0F11:  GOTO   714
0F12:  MOVLW  00
0F13:  GOTO   715
0F14:  MOVLW  01
0F15:  BSF    03.6
0F16:  IORWF  53,F
0F17:  BCF    03.6
0F18:  MOVF   32,F
0F19:  BTFSS  03.2
0F1A:  GOTO   71D
0F1B:  MOVLW  00
0F1C:  GOTO   71E
0F1D:  MOVLW  01
0F1E:  BSF    03.6
0F1F:  IORWF  53,F
0F20:  DECFSZ 52,W
0F21:  GOTO   723
0F22:  GOTO   725
0F23:  MOVLW  00
0F24:  GOTO   726
0F25:  MOVLW  01
0F26:  IORWF  53,W
0F27:  BTFSC  03.2
0F28:  GOTO   739
.................... {
.................... lcd_putc(chuc+48);
0F29:  MOVLW  30
0F2A:  BCF    03.6
0F2B:  ADDWF  32,W
0F2C:  BSF    03.6
0F2D:  MOVWF  53
0F2E:  MOVWF  54
0F2F:  BCF    03.6
0F30:  CALL   2E6
....................       if(dot==1)
0F31:  BSF    03.6
0F32:  DECFSZ 52,W
0F33:  GOTO   739
....................       {lcd_putc('.');}
0F34:  MOVLW  2E
0F35:  MOVWF  54
0F36:  BCF    03.6
0F37:  CALL   2E6
0F38:  BSF    03.6
.................... }
.................... lcd_putc(donvi+48);
0F39:  MOVLW  30
0F3A:  BCF    03.6
0F3B:  ADDWF  31,W
0F3C:  BSF    03.6
0F3D:  MOVWF  53
0F3E:  MOVWF  54
0F3F:  BCF    03.6
0F40:  CALL   2E6
.................... }
.................... 
.................... 
.................... //==================================================== write num
....................  
.................... void write_num(int32 num,int8 dot)
.................... {
.................... tach_so(num);
*
0E21:  BSF    03.6
0E22:  MOVF   50,W
0E23:  MOVWF  55
0E24:  MOVF   4F,W
0E25:  MOVWF  54
0E26:  MOVF   4E,W
0E27:  MOVWF  53
0E28:  MOVF   4D,W
0E29:  MOVWF  52
0E2A:  BCF    03.6
0E2B:  CALL   40B
.................... out_num(dot);
0E2C:  BSF    03.6
0E2D:  MOVF   51,W
0E2E:  MOVWF  52
*
0F41:  RETURN
.................... }
.................... //==================================================== 
.................... void backup_depth (void) 
.................... {
....................    write_EEPROM(3,sdepth);
*
09B9:  MOVF   0B,W
09BA:  MOVWF  77
09BB:  BCF    0B.7
09BC:  MOVLW  03
09BD:  BSF    03.6
09BE:  MOVWF  0D
09BF:  BCF    03.6
09C0:  MOVF   4B,W
09C1:  BSF    03.6
09C2:  MOVWF  0C
09C3:  BSF    03.5
09C4:  BCF    0C.7
09C5:  BSF    0C.2
09C6:  MOVLW  55
09C7:  MOVWF  0D
09C8:  MOVLW  AA
09C9:  MOVWF  0D
09CA:  BSF    0C.1
09CB:  BTFSC  0C.1
09CC:  GOTO   1CB
09CD:  BCF    0C.2
09CE:  MOVF   77,W
09CF:  BCF    03.5
09D0:  BCF    03.6
09D1:  IORWF  0B,F
....................    write_EEPROM(2,sdepth>>8);
09D2:  MOVF   4C,W
09D3:  BSF    03.6
09D4:  MOVWF  49
09D5:  BCF    03.6
09D6:  MOVF   4D,W
09D7:  BSF    03.6
09D8:  MOVWF  4A
09D9:  BCF    03.6
09DA:  MOVF   4E,W
09DB:  BSF    03.6
09DC:  MOVWF  4B
09DD:  CLRF   4C
09DE:  BCF    03.6
09DF:  MOVF   0B,W
09E0:  MOVWF  77
09E1:  BCF    0B.7
09E2:  MOVLW  02
09E3:  BSF    03.6
09E4:  MOVWF  0D
09E5:  MOVF   49,W
09E6:  MOVWF  0C
09E7:  BSF    03.5
09E8:  BCF    0C.7
09E9:  BSF    0C.2
09EA:  MOVLW  55
09EB:  MOVWF  0D
09EC:  MOVLW  AA
09ED:  MOVWF  0D
09EE:  BSF    0C.1
09EF:  BTFSC  0C.1
09F0:  GOTO   1EF
09F1:  BCF    0C.2
09F2:  MOVF   77,W
09F3:  BCF    03.5
09F4:  BCF    03.6
09F5:  IORWF  0B,F
....................    write_EEPROM(1,sdepth>>16);
09F6:  MOVF   4D,W
09F7:  BSF    03.6
09F8:  MOVWF  49
09F9:  BCF    03.6
09FA:  MOVF   4E,W
09FB:  BSF    03.6
09FC:  MOVWF  4A
09FD:  CLRF   4B
09FE:  CLRF   4C
09FF:  BCF    03.6
0A00:  MOVF   0B,W
0A01:  MOVWF  77
0A02:  BCF    0B.7
0A03:  MOVLW  01
0A04:  BSF    03.6
0A05:  MOVWF  0D
0A06:  MOVF   49,W
0A07:  MOVWF  0C
0A08:  BSF    03.5
0A09:  BCF    0C.7
0A0A:  BSF    0C.2
0A0B:  MOVLW  55
0A0C:  MOVWF  0D
0A0D:  MOVLW  AA
0A0E:  MOVWF  0D
0A0F:  BSF    0C.1
0A10:  BTFSC  0C.1
0A11:  GOTO   210
0A12:  BCF    0C.2
0A13:  MOVF   77,W
0A14:  BCF    03.5
0A15:  BCF    03.6
0A16:  IORWF  0B,F
....................    write_EEPROM(0,sdepth>>24);
0A17:  MOVF   4E,W
0A18:  BSF    03.6
0A19:  MOVWF  49
0A1A:  CLRF   4A
0A1B:  CLRF   4B
0A1C:  CLRF   4C
0A1D:  BCF    03.6
0A1E:  MOVF   0B,W
0A1F:  MOVWF  77
0A20:  BCF    0B.7
0A21:  BSF    03.6
0A22:  CLRF   0D
0A23:  MOVF   49,W
0A24:  MOVWF  0C
0A25:  BSF    03.5
0A26:  BCF    0C.7
0A27:  BSF    0C.2
0A28:  MOVLW  55
0A29:  MOVWF  0D
0A2A:  MOVLW  AA
0A2B:  MOVWF  0D
0A2C:  BSF    0C.1
0A2D:  BTFSC  0C.1
0A2E:  GOTO   22D
0A2F:  BCF    0C.2
0A30:  MOVF   77,W
0A31:  BCF    03.5
0A32:  BCF    03.6
0A33:  IORWF  0B,F
0A34:  RETURN
....................     
.................... }
.................... //==================================================== 
.................... void backup_encoder (void) 
.................... {
....................    write_EEPROM(7,coef_encoder);
*
094B:  MOVF   0B,W
094C:  MOVWF  77
094D:  BCF    0B.7
094E:  MOVLW  07
094F:  BSF    03.6
0950:  MOVWF  0D
0951:  BCF    03.6
0952:  MOVF   57,W
0953:  BSF    03.6
0954:  MOVWF  0C
0955:  BSF    03.5
0956:  BCF    0C.7
0957:  BSF    0C.2
0958:  MOVLW  55
0959:  MOVWF  0D
095A:  MOVLW  AA
095B:  MOVWF  0D
095C:  BSF    0C.1
095D:  BTFSC  0C.1
095E:  GOTO   15D
095F:  BCF    0C.2
0960:  MOVF   77,W
0961:  BCF    03.5
0962:  BCF    03.6
0963:  IORWF  0B,F
....................    write_EEPROM(6,coef_encoder>>8);
0964:  MOVF   58,W
0965:  BSF    03.6
0966:  MOVWF  48
0967:  CLRF   49
0968:  BCF    03.6
0969:  MOVF   0B,W
096A:  MOVWF  77
096B:  BCF    0B.7
096C:  MOVLW  06
096D:  BSF    03.6
096E:  MOVWF  0D
096F:  MOVF   48,W
0970:  MOVWF  0C
0971:  BSF    03.5
0972:  BCF    0C.7
0973:  BSF    0C.2
0974:  MOVLW  55
0975:  MOVWF  0D
0976:  MOVLW  AA
0977:  MOVWF  0D
0978:  BSF    0C.1
0979:  BTFSC  0C.1
097A:  GOTO   179
097B:  BCF    0C.2
097C:  MOVF   77,W
097D:  BCF    03.5
097E:  BCF    03.6
097F:  IORWF  0B,F
....................    write_EEPROM(5,coef_encoder>>16);
0980:  BSF    03.6
0981:  CLRF   48
0982:  CLRF   49
0983:  BCF    03.6
0984:  MOVF   0B,W
0985:  MOVWF  77
0986:  BCF    0B.7
0987:  MOVLW  05
0988:  BSF    03.6
0989:  MOVWF  0D
098A:  MOVF   48,W
098B:  MOVWF  0C
098C:  BSF    03.5
098D:  BCF    0C.7
098E:  BSF    0C.2
098F:  MOVLW  55
0990:  MOVWF  0D
0991:  MOVLW  AA
0992:  MOVWF  0D
0993:  BSF    0C.1
0994:  BTFSC  0C.1
0995:  GOTO   194
0996:  BCF    0C.2
0997:  MOVF   77,W
0998:  BCF    03.5
0999:  BCF    03.6
099A:  IORWF  0B,F
....................    write_EEPROM(4,coef_encoder>>24);
099B:  BSF    03.6
099C:  CLRF   48
099D:  CLRF   49
099E:  BCF    03.6
099F:  MOVF   0B,W
09A0:  MOVWF  77
09A1:  BCF    0B.7
09A2:  MOVLW  04
09A3:  BSF    03.6
09A4:  MOVWF  0D
09A5:  MOVF   48,W
09A6:  MOVWF  0C
09A7:  BSF    03.5
09A8:  BCF    0C.7
09A9:  BSF    0C.2
09AA:  MOVLW  55
09AB:  MOVWF  0D
09AC:  MOVLW  AA
09AD:  MOVWF  0D
09AE:  BSF    0C.1
09AF:  BTFSC  0C.1
09B0:  GOTO   1AF
09B1:  BCF    0C.2
09B2:  MOVF   77,W
09B3:  BCF    03.5
09B4:  BCF    03.6
09B5:  IORWF  0B,F
09B6:  BSF    0A.3
09B7:  BSF    0A.4
09B8:  GOTO   2F0 (RETURN)
....................   
.................... }
.................... void backup_tens (void) 
.................... {
....................    write_EEPROM(8,atens);
*
0A35:  MOVF   0B,W
0A36:  MOVWF  77
0A37:  BCF    0B.7
0A38:  MOVLW  08
0A39:  BSF    03.6
0A3A:  MOVWF  0D
0A3B:  BCF    03.6
0A3C:  MOVF   3B,W
0A3D:  BSF    03.6
0A3E:  MOVWF  0C
0A3F:  BSF    03.5
0A40:  BCF    0C.7
0A41:  BSF    0C.2
0A42:  MOVLW  55
0A43:  MOVWF  0D
0A44:  MOVLW  AA
0A45:  MOVWF  0D
0A46:  BSF    0C.1
0A47:  BTFSC  0C.1
0A48:  GOTO   247
0A49:  BCF    0C.2
0A4A:  MOVF   77,W
0A4B:  BCF    03.5
0A4C:  BCF    03.6
0A4D:  IORWF  0B,F
....................    write_EEPROM(9,atens>>8);
0A4E:  MOVF   3C,W
0A4F:  BSF    03.6
0A50:  MOVWF  48
0A51:  CLRF   49
0A52:  BCF    03.6
0A53:  MOVF   0B,W
0A54:  MOVWF  77
0A55:  BCF    0B.7
0A56:  MOVLW  09
0A57:  BSF    03.6
0A58:  MOVWF  0D
0A59:  MOVF   48,W
0A5A:  MOVWF  0C
0A5B:  BSF    03.5
0A5C:  BCF    0C.7
0A5D:  BSF    0C.2
0A5E:  MOVLW  55
0A5F:  MOVWF  0D
0A60:  MOVLW  AA
0A61:  MOVWF  0D
0A62:  BSF    0C.1
0A63:  BTFSC  0C.1
0A64:  GOTO   263
0A65:  BCF    0C.2
0A66:  MOVF   77,W
0A67:  BCF    03.5
0A68:  BCF    03.6
0A69:  IORWF  0B,F
....................    
....................    write_EEPROM(10,btens);
0A6A:  MOVF   0B,W
0A6B:  MOVWF  77
0A6C:  BCF    0B.7
0A6D:  MOVLW  0A
0A6E:  BSF    03.6
0A6F:  MOVWF  0D
0A70:  BCF    03.6
0A71:  MOVF   3D,W
0A72:  BSF    03.6
0A73:  MOVWF  0C
0A74:  BSF    03.5
0A75:  BCF    0C.7
0A76:  BSF    0C.2
0A77:  MOVLW  55
0A78:  MOVWF  0D
0A79:  MOVLW  AA
0A7A:  MOVWF  0D
0A7B:  BSF    0C.1
0A7C:  BTFSC  0C.1
0A7D:  GOTO   27C
0A7E:  BCF    0C.2
0A7F:  MOVF   77,W
0A80:  BCF    03.5
0A81:  BCF    03.6
0A82:  IORWF  0B,F
....................    write_EEPROM(11,btens>>8);
0A83:  MOVF   3E,W
0A84:  BSF    03.6
0A85:  MOVWF  48
0A86:  CLRF   49
0A87:  BCF    03.6
0A88:  MOVF   0B,W
0A89:  MOVWF  77
0A8A:  BCF    0B.7
0A8B:  MOVLW  0B
0A8C:  BSF    03.6
0A8D:  MOVWF  0D
0A8E:  MOVF   48,W
0A8F:  MOVWF  0C
0A90:  BSF    03.5
0A91:  BCF    0C.7
0A92:  BSF    0C.2
0A93:  MOVLW  55
0A94:  MOVWF  0D
0A95:  MOVLW  AA
0A96:  MOVWF  0D
0A97:  BSF    0C.1
0A98:  BTFSC  0C.1
0A99:  GOTO   298
0A9A:  BCF    0C.2
0A9B:  MOVF   77,W
0A9C:  BCF    03.5
0A9D:  BCF    03.6
0A9E:  IORWF  0B,F
0A9F:  BSF    0A.3
0AA0:  BSF    0A.4
0AA1:  GOTO   332 (RETURN)
....................   
.................... }
.................... //==================================================== 
.................... void update_flash (void) 
.................... {
....................    backup_depth();
....................    backup_encoder();
....................    backup_tens();
....................    
.................... }
.................... //===================================================
.................... void read_flash (void) 
.................... {
....................    
....................    for (i=0;i<12;i++) 
*
05FB:  CLRF   5E
05FC:  CLRF   5D
05FD:  MOVF   5E,F
05FE:  BTFSS  03.2
05FF:  GOTO   618
0600:  MOVF   5D,W
0601:  SUBLW  0B
0602:  BTFSS  03.0
0603:  GOTO   618
....................    {
....................       buffer[i] = read_eeprom(i);
0604:  MOVLW  A0
0605:  ADDWF  5D,W
0606:  MOVWF  04
0607:  BCF    03.7
0608:  BTFSC  5E.0
0609:  BSF    03.7
060A:  MOVF   5D,W
060B:  BSF    03.6
060C:  MOVWF  0D
060D:  BSF    03.5
060E:  BCF    0C.7
060F:  BSF    0C.0
0610:  BCF    03.5
0611:  MOVF   0C,W
0612:  MOVWF  00
0613:  BCF    03.6
0614:  INCF   5D,F
0615:  BTFSC  03.2
0616:  INCF   5E,F
0617:  GOTO   5FD
....................    }     
....................    sdepth  =   make32(buffer[0],buffer[1],buffer[2],buffer[3]);
0618:  BSF    03.5
0619:  MOVF   21,W
061A:  MOVWF  79
061B:  MOVF   22,W
061C:  MOVWF  78
061D:  MOVF   23,W
061E:  MOVWF  77
061F:  MOVF   20,W
0620:  BCF    03.5
0621:  MOVWF  4E
0622:  MOVF   79,W
0623:  MOVWF  4D
0624:  MOVF   78,W
0625:  MOVWF  4C
0626:  MOVF   77,W
0627:  MOVWF  4B
....................    coef_encoder = make32(buffer[4],buffer[5],buffer[6],buffer[7]);
0628:  BSF    03.5
0629:  MOVF   26,W
062A:  BCF    03.5
062B:  MOVWF  58
062C:  BSF    03.5
062D:  MOVF   27,W
062E:  BCF    03.5
062F:  MOVWF  57
....................    atens =   make16(buffer[9],buffer[8]); 
0630:  BSF    03.5
0631:  MOVF   29,W
0632:  BCF    03.5
0633:  MOVWF  3C
0634:  BSF    03.5
0635:  MOVF   28,W
0636:  BCF    03.5
0637:  MOVWF  3B
....................    btens =   make16(buffer[11],buffer[10]);
0638:  BSF    03.5
0639:  MOVF   2B,W
063A:  BCF    03.5
063B:  MOVWF  3E
063C:  BSF    03.5
063D:  MOVF   2A,W
063E:  BCF    03.5
063F:  MOVWF  3D
0640:  BSF    0A.3
0641:  BSF    0A.4
0642:  GOTO   0F4 (RETURN)
.................... }
.................... 
.................... void hienthi(int8 npage)
.................... {
.................... if (npage==0) 
*
1000:  BSF    03.6
1001:  MOVF   48,F
1002:  BTFSS  03.2
1003:  GOTO   347
....................    {
....................       
....................       
....................       lcd_gotoxy(1,1);
1004:  MOVLW  01
1005:  MOVWF  55
1006:  MOVWF  56
1007:  BCF    0A.4
1008:  BCF    03.6
1009:  CALL   7E5
100A:  BSF    0A.4
....................       lcd_putc("DEPTH:");
100B:  MOVLW  F9
100C:  BSF    03.6
100D:  MOVWF  0D
100E:  MOVLW  03
100F:  MOVWF  0F
1010:  BCF    0A.4
1011:  BSF    0A.3
1012:  BCF    03.6
1013:  CALL   32C
1014:  BSF    0A.4
1015:  BCF    0A.3
....................       lcd_putc("            ");
1016:  MOVLW  FD
1017:  BSF    03.6
1018:  MOVWF  0D
1019:  MOVLW  03
101A:  MOVWF  0F
101B:  BCF    0A.4
101C:  BSF    0A.3
101D:  BCF    03.6
101E:  CALL   32C
101F:  BSF    0A.4
1020:  BCF    0A.3
....................       lcd_gotoxy(7,1);
1021:  MOVLW  07
1022:  BSF    03.6
1023:  MOVWF  55
1024:  MOVLW  01
1025:  MOVWF  56
1026:  BCF    0A.4
1027:  BCF    03.6
1028:  CALL   7E5
1029:  BSF    0A.4
....................       if(sdepth < 0)  lcd_putc('-');
102A:  BTFSC  4E.7
102B:  GOTO   02D
102C:  GOTO   036
102D:  MOVLW  2D
102E:  BSF    03.6
102F:  MOVWF  54
1030:  BCF    0A.4
1031:  BSF    0A.3
1032:  BCF    03.6
1033:  CALL   2E6
1034:  BSF    0A.4
1035:  BCF    0A.3
....................       fdepth = abs(sdepth);
1036:  MOVF   4B,W
1037:  MOVWF  77
1038:  MOVF   4C,W
1039:  MOVWF  78
103A:  MOVF   4D,W
103B:  MOVWF  79
103C:  MOVF   4E,W
103D:  MOVWF  7A
103E:  BTFSS  4E.7
103F:  GOTO   052
1040:  MOVF   4B,W
1041:  SUBLW  00
1042:  MOVWF  77
1043:  CLRF   78
1044:  MOVF   4C,W
1045:  BTFSS  03.0
1046:  INCFSZ 4C,W
1047:  SUBWF  78,F
1048:  CLRF   79
1049:  MOVF   4D,W
104A:  BTFSS  03.0
104B:  INCFSZ 4D,W
104C:  SUBWF  79,F
104D:  CLRF   7A
104E:  MOVF   4E,W
104F:  BTFSS  03.0
1050:  INCFSZ 4E,W
1051:  SUBWF  7A,F
1052:  MOVF   7A,W
1053:  BSF    03.6
1054:  MOVWF  4C
1055:  MOVF   79,W
1056:  MOVWF  4B
1057:  MOVF   78,W
1058:  MOVWF  4A
1059:  MOVF   77,W
105A:  MOVWF  49
105B:  BCF    0A.4
105C:  BSF    0A.3
105D:  BCF    03.6
105E:  CALL   37C
105F:  BSF    0A.4
1060:  BCF    0A.3
1061:  MOVF   7A,W
1062:  BSF    03.6
1063:  MOVWF  2B
1064:  MOVF   79,W
1065:  MOVWF  2A
1066:  MOVF   78,W
1067:  MOVWF  29
1068:  MOVF   77,W
1069:  MOVWF  28
....................       fdepth *= 100;        
106A:  MOVF   2B,W
106B:  MOVWF  4C
106C:  MOVF   2A,W
106D:  MOVWF  4B
106E:  MOVF   29,W
106F:  MOVWF  4A
1070:  MOVF   28,W
1071:  MOVWF  49
1072:  CLRF   50
1073:  CLRF   4F
1074:  MOVLW  48
1075:  MOVWF  4E
1076:  MOVLW  85
1077:  MOVWF  4D
1078:  BCF    0A.4
1079:  BCF    03.6
107A:  CALL   6A2
107B:  BSF    0A.4
107C:  MOVF   7A,W
107D:  BSF    03.6
107E:  MOVWF  2B
107F:  MOVF   79,W
1080:  MOVWF  2A
1081:  MOVF   78,W
1082:  MOVWF  29
1083:  MOVF   77,W
1084:  MOVWF  28
....................       fdepth /= coef_encoder;  //do sau theo dm
1085:  BCF    03.6
1086:  MOVF   58,W
1087:  BSF    03.6
1088:  MOVWF  4A
1089:  BCF    03.6
108A:  MOVF   57,W
108B:  BSF    03.6
108C:  MOVWF  49
108D:  BCF    0A.4
108E:  BCF    03.6
108F:  CALL   683
1090:  BSF    0A.4
1091:  BSF    03.6
1092:  MOVF   2B,W
1093:  MOVWF  4C
1094:  MOVF   2A,W
1095:  MOVWF  4B
1096:  MOVF   29,W
1097:  MOVWF  4A
1098:  MOVF   28,W
1099:  MOVWF  49
109A:  MOVF   7A,W
109B:  MOVWF  50
109C:  MOVF   79,W
109D:  MOVWF  4F
109E:  MOVF   78,W
109F:  MOVWF  4E
10A0:  MOVF   77,W
10A1:  MOVWF  4D
10A2:  BCF    0A.4
10A3:  BCF    03.6
10A4:  CALL   719
10A5:  BSF    0A.4
10A6:  MOVF   7A,W
10A7:  BSF    03.6
10A8:  MOVWF  2B
10A9:  MOVF   79,W
10AA:  MOVWF  2A
10AB:  MOVF   78,W
10AC:  MOVWF  29
10AD:  MOVF   77,W
10AE:  MOVWF  28
....................       write_num(fdepth,1);
10AF:  MOVF   2B,W
10B0:  MOVWF  4C
10B1:  MOVF   2A,W
10B2:  MOVWF  4B
10B3:  MOVF   29,W
10B4:  MOVWF  4A
10B5:  MOVF   28,W
10B6:  MOVWF  49
10B7:  BCF    0A.4
10B8:  BSF    0A.3
10B9:  BCF    03.6
10BA:  CALL   399
10BB:  BSF    0A.4
10BC:  BCF    0A.3
10BD:  MOVF   7A,W
10BE:  BSF    03.6
10BF:  MOVWF  4C
10C0:  MOVF   79,W
10C1:  MOVWF  4B
10C2:  MOVF   78,W
10C3:  MOVWF  4A
10C4:  MOVF   77,W
10C5:  MOVWF  49
10C6:  MOVF   4C,W
10C7:  MOVWF  50
10C8:  MOVF   4B,W
10C9:  MOVWF  4F
10CA:  MOVF   4A,W
10CB:  MOVWF  4E
10CC:  MOVF   49,W
10CD:  MOVWF  4D
10CE:  MOVLW  01
10CF:  MOVWF  51
10D0:  BCF    0A.4
10D1:  BSF    0A.3
10D2:  BCF    03.6
10D3:  CALL   621
10D4:  BSF    0A.4
10D5:  BCF    0A.3
....................       lcd_putc("m");
10D6:  MOVLW  04
10D7:  BSF    03.6
10D8:  MOVWF  0D
10D9:  MOVLW  04
10DA:  MOVWF  0F
10DB:  BCF    0A.4
10DC:  BSF    0A.3
10DD:  BCF    03.6
10DE:  CALL   32C
10DF:  BSF    0A.4
10E0:  BCF    0A.3
....................       lcd_gotoxy(17,1);
10E1:  MOVLW  11
10E2:  BSF    03.6
10E3:  MOVWF  55
10E4:  MOVLW  01
10E5:  MOVWF  56
10E6:  BCF    0A.4
10E7:  BCF    03.6
10E8:  CALL   7E5
10E9:  BSF    0A.4
....................       if(dir) lcd_putc("UP");
10EA:  BTFSS  07.0
10EB:  GOTO   0F8
10EC:  MOVLW  05
10ED:  BSF    03.6
10EE:  MOVWF  0D
10EF:  MOVLW  04
10F0:  MOVWF  0F
10F1:  BCF    0A.4
10F2:  BSF    0A.3
10F3:  BCF    03.6
10F4:  CALL   32C
10F5:  BSF    0A.4
10F6:  BCF    0A.3
10F7:  GOTO   103
....................       else lcd_putc("DN");
10F8:  MOVLW  07
10F9:  BSF    03.6
10FA:  MOVWF  0D
10FB:  MOVLW  04
10FC:  MOVWF  0F
10FD:  BCF    0A.4
10FE:  BSF    0A.3
10FF:  BCF    03.6
1100:  CALL   32C
1101:  BSF    0A.4
1102:  BCF    0A.3
....................       
....................       //-------------------------------
....................     
....................       lcd_gotoxy(1,2);
1103:  MOVLW  01
1104:  BSF    03.6
1105:  MOVWF  55
1106:  MOVLW  02
1107:  MOVWF  56
1108:  BCF    0A.4
1109:  BCF    03.6
110A:  CALL   7E5
110B:  BSF    0A.4
....................       lcd_putc("SPEED:" );
110C:  MOVLW  09
110D:  BSF    03.6
110E:  MOVWF  0D
110F:  MOVLW  04
1110:  MOVWF  0F
1111:  BCF    0A.4
1112:  BSF    0A.3
1113:  BCF    03.6
1114:  CALL   32C
1115:  BSF    0A.4
1116:  BCF    0A.3
....................       lcd_putc("             ");     
1117:  MOVLW  0D
1118:  BSF    03.6
1119:  MOVWF  0D
111A:  MOVLW  04
111B:  MOVWF  0F
111C:  BCF    0A.4
111D:  BSF    0A.3
111E:  BCF    03.6
111F:  CALL   32C
1120:  BSF    0A.4
1121:  BCF    0A.3
....................       lcd_gotoxy(7,2);
1122:  MOVLW  07
1123:  BSF    03.6
1124:  MOVWF  55
1125:  MOVLW  02
1126:  MOVWF  56
1127:  BCF    0A.4
1128:  BCF    03.6
1129:  CALL   7E5
112A:  BSF    0A.4
....................       fspeed = lspeed;
112B:  MOVF   42,W
112C:  BSF    03.6
112D:  MOVWF  4C
112E:  BCF    03.6
112F:  MOVF   41,W
1130:  BSF    03.6
1131:  MOVWF  4B
1132:  BCF    03.6
1133:  MOVF   40,W
1134:  BSF    03.6
1135:  MOVWF  4A
1136:  BCF    03.6
1137:  MOVF   3F,W
1138:  BSF    03.6
1139:  MOVWF  49
113A:  BCF    0A.4
113B:  BSF    0A.3
113C:  BCF    03.6
113D:  CALL   37C
113E:  BSF    0A.4
113F:  BCF    0A.3
1140:  MOVF   7A,W
1141:  BSF    03.6
1142:  MOVWF  2F
1143:  MOVF   79,W
1144:  MOVWF  2E
1145:  MOVF   78,W
1146:  MOVWF  2D
1147:  MOVF   77,W
1148:  MOVWF  2C
....................       fspeed *=1000;
1149:  MOVF   2F,W
114A:  MOVWF  4C
114B:  MOVF   2E,W
114C:  MOVWF  4B
114D:  MOVF   2D,W
114E:  MOVWF  4A
114F:  MOVF   2C,W
1150:  MOVWF  49
1151:  CLRF   50
1152:  CLRF   4F
1153:  MOVLW  7A
1154:  MOVWF  4E
1155:  MOVLW  88
1156:  MOVWF  4D
1157:  BCF    0A.4
1158:  BCF    03.6
1159:  CALL   6A2
115A:  BSF    0A.4
115B:  MOVF   7A,W
115C:  BSF    03.6
115D:  MOVWF  2F
115E:  MOVF   79,W
115F:  MOVWF  2E
1160:  MOVF   78,W
1161:  MOVWF  2D
1162:  MOVF   77,W
1163:  MOVWF  2C
....................       fspeed /= coef_encoder;
1164:  BCF    03.6
1165:  MOVF   58,W
1166:  BSF    03.6
1167:  MOVWF  4A
1168:  BCF    03.6
1169:  MOVF   57,W
116A:  BSF    03.6
116B:  MOVWF  49
116C:  BCF    0A.4
116D:  BCF    03.6
116E:  CALL   683
116F:  BSF    0A.4
1170:  BSF    03.6
1171:  MOVF   2F,W
1172:  MOVWF  4C
1173:  MOVF   2E,W
1174:  MOVWF  4B
1175:  MOVF   2D,W
1176:  MOVWF  4A
1177:  MOVF   2C,W
1178:  MOVWF  49
1179:  MOVF   7A,W
117A:  MOVWF  50
117B:  MOVF   79,W
117C:  MOVWF  4F
117D:  MOVF   78,W
117E:  MOVWF  4E
117F:  MOVF   77,W
1180:  MOVWF  4D
1181:  BCF    0A.4
1182:  BCF    03.6
1183:  CALL   719
1184:  BSF    0A.4
1185:  MOVF   7A,W
1186:  BSF    03.6
1187:  MOVWF  2F
1188:  MOVF   79,W
1189:  MOVWF  2E
118A:  MOVF   78,W
118B:  MOVWF  2D
118C:  MOVF   77,W
118D:  MOVWF  2C
....................       write_num(fspeed,1);
118E:  MOVF   2F,W
118F:  MOVWF  4C
1190:  MOVF   2E,W
1191:  MOVWF  4B
1192:  MOVF   2D,W
1193:  MOVWF  4A
1194:  MOVF   2C,W
1195:  MOVWF  49
1196:  BCF    0A.4
1197:  BSF    0A.3
1198:  BCF    03.6
1199:  CALL   399
119A:  BSF    0A.4
119B:  BCF    0A.3
119C:  MOVF   7A,W
119D:  BSF    03.6
119E:  MOVWF  4C
119F:  MOVF   79,W
11A0:  MOVWF  4B
11A1:  MOVF   78,W
11A2:  MOVWF  4A
11A3:  MOVF   77,W
11A4:  MOVWF  49
11A5:  MOVF   4C,W
11A6:  MOVWF  50
11A7:  MOVF   4B,W
11A8:  MOVWF  4F
11A9:  MOVF   4A,W
11AA:  MOVWF  4E
11AB:  MOVF   49,W
11AC:  MOVWF  4D
11AD:  MOVLW  01
11AE:  MOVWF  51
11AF:  BCF    0A.4
11B0:  BSF    0A.3
11B1:  BCF    03.6
11B2:  CALL   621
11B3:  BSF    0A.4
11B4:  BCF    0A.3
....................       lcd_putc("m/min");
11B5:  MOVLW  14
11B6:  BSF    03.6
11B7:  MOVWF  0D
11B8:  MOVLW  04
11B9:  MOVWF  0F
11BA:  BCF    0A.4
11BB:  BSF    0A.3
11BC:  BCF    03.6
11BD:  CALL   32C
11BE:  BSF    0A.4
11BF:  BCF    0A.3
....................       lcd_gotoxy(17,2);
11C0:  MOVLW  11
11C1:  BSF    03.6
11C2:  MOVWF  55
11C3:  MOVLW  02
11C4:  MOVWF  56
11C5:  BCF    0A.4
11C6:  BCF    03.6
11C7:  CALL   7E5
11C8:  BSF    0A.4
....................       if(dirmark) lcd_putc("UP");
11C9:  BSF    03.5
11CA:  BTFSS  67.6
11CB:  GOTO   1DA
11CC:  MOVLW  17
11CD:  BCF    03.5
11CE:  BSF    03.6
11CF:  MOVWF  0D
11D0:  MOVLW  04
11D1:  MOVWF  0F
11D2:  BCF    0A.4
11D3:  BSF    0A.3
11D4:  BCF    03.6
11D5:  CALL   32C
11D6:  BSF    0A.4
11D7:  BCF    0A.3
11D8:  GOTO   1E6
11D9:  BSF    03.5
....................       else lcd_putc("DN");
11DA:  MOVLW  19
11DB:  BCF    03.5
11DC:  BSF    03.6
11DD:  MOVWF  0D
11DE:  MOVLW  04
11DF:  MOVWF  0F
11E0:  BCF    0A.4
11E1:  BSF    0A.3
11E2:  BCF    03.6
11E3:  CALL   32C
11E4:  BSF    0A.4
11E5:  BCF    0A.3
....................       
....................       //---------------------------------
....................       lcd_gotoxy(21,1);
11E6:  MOVLW  15
11E7:  BSF    03.6
11E8:  MOVWF  55
11E9:  MOVLW  01
11EA:  MOVWF  56
11EB:  BCF    0A.4
11EC:  BCF    03.6
11ED:  CALL   7E5
11EE:  BSF    0A.4
....................       lcd_putc("TENS :");
11EF:  MOVLW  1B
11F0:  BSF    03.6
11F1:  MOVWF  0D
11F2:  MOVLW  04
11F3:  MOVWF  0F
11F4:  BCF    0A.4
11F5:  BSF    0A.3
11F6:  BCF    03.6
11F7:  CALL   32C
11F8:  BSF    0A.4
11F9:  BCF    0A.3
....................       lcd_putc("            ");
11FA:  MOVLW  1F
11FB:  BSF    03.6
11FC:  MOVWF  0D
11FD:  MOVLW  04
11FE:  MOVWF  0F
11FF:  BCF    0A.4
1200:  BSF    0A.3
1201:  BCF    03.6
1202:  CALL   32C
1203:  BSF    0A.4
1204:  BCF    0A.3
....................       lcd_gotoxy(27,1);
1205:  MOVLW  1B
1206:  BSF    03.6
1207:  MOVWF  55
1208:  MOVLW  01
1209:  MOVWF  56
120A:  BCF    0A.4
120B:  BCF    03.6
120C:  CALL   7E5
120D:  BSF    0A.4
....................       write_num(ftens,0);
120E:  BSF    03.6
120F:  MOVF   33,W
1210:  MOVWF  4C
1211:  MOVF   32,W
1212:  MOVWF  4B
1213:  MOVF   31,W
1214:  MOVWF  4A
1215:  MOVF   30,W
1216:  MOVWF  49
1217:  BCF    0A.4
1218:  BSF    0A.3
1219:  BCF    03.6
121A:  CALL   399
121B:  BSF    0A.4
121C:  BCF    0A.3
121D:  MOVF   7A,W
121E:  BSF    03.6
121F:  MOVWF  4C
1220:  MOVF   79,W
1221:  MOVWF  4B
1222:  MOVF   78,W
1223:  MOVWF  4A
1224:  MOVF   77,W
1225:  MOVWF  49
1226:  MOVF   4C,W
1227:  MOVWF  50
1228:  MOVF   4B,W
1229:  MOVWF  4F
122A:  MOVF   4A,W
122B:  MOVWF  4E
122C:  MOVF   49,W
122D:  MOVWF  4D
122E:  CLRF   51
122F:  BCF    0A.4
1230:  BSF    0A.3
1231:  BCF    03.6
1232:  CALL   621
1233:  BSF    0A.4
1234:  BCF    0A.3
....................       lcd_putc("kg");
1235:  MOVLW  26
1236:  BSF    03.6
1237:  MOVWF  0D
1238:  MOVLW  04
1239:  MOVWF  0F
123A:  BCF    0A.4
123B:  BSF    0A.3
123C:  BCF    03.6
123D:  CALL   32C
123E:  BSF    0A.4
123F:  BCF    0A.3
....................       lcd_gotoxy(37,1);
1240:  MOVLW  25
1241:  BSF    03.6
1242:  MOVWF  55
1243:  MOVLW  01
1244:  MOVWF  56
1245:  BCF    0A.4
1246:  BCF    03.6
1247:  CALL   7E5
1248:  BSF    0A.4
....................       write_num_8(base_length);
1249:  BSF    03.5
124A:  MOVF   6C,W
124B:  BCF    03.5
124C:  BSF    03.6
124D:  MOVWF  49
124E:  BCF    0A.4
124F:  BSF    0A.3
1250:  BCF    03.6
1251:  CALL   742
1252:  BSF    0A.4
1253:  BCF    0A.3
....................       lcd_putc(' ');
1254:  MOVLW  20
1255:  BSF    03.6
1256:  MOVWF  54
1257:  BCF    0A.4
1258:  BSF    0A.3
1259:  BCF    03.6
125A:  CALL   2E6
125B:  BSF    0A.4
125C:  BCF    0A.3
....................             
....................       //----------------------------------                  
....................       if(mag>532)  lcd_putc('*');
125D:  MOVF   5C,W
125E:  SUBLW  01
125F:  BTFSC  03.0
1260:  GOTO   272
1261:  XORLW  FF
1262:  BTFSS  03.2
1263:  GOTO   268
1264:  MOVF   5B,W
1265:  SUBLW  14
1266:  BTFSC  03.0
1267:  GOTO   272
1268:  MOVLW  2A
1269:  BSF    03.6
126A:  MOVWF  54
126B:  BCF    0A.4
126C:  BSF    0A.3
126D:  BCF    03.6
126E:  CALL   2E6
126F:  BSF    0A.4
1270:  BCF    0A.3
1271:  GOTO   27B
....................       else lcd_putc(' ');
1272:  MOVLW  20
1273:  BSF    03.6
1274:  MOVWF  54
1275:  BCF    0A.4
1276:  BSF    0A.3
1277:  BCF    03.6
1278:  CALL   2E6
1279:  BSF    0A.4
127A:  BCF    0A.3
....................       
....................       //-------------------  
....................        
....................       lcd_gotoxy(21,2);                    // gia tri do sau theo dau met
127B:  MOVLW  15
127C:  BSF    03.6
127D:  MOVWF  55
127E:  MOVLW  02
127F:  MOVWF  56
1280:  BCF    0A.4
1281:  BCF    03.6
1282:  CALL   7E5
1283:  BSF    0A.4
....................       lcd_putc("MARK :");
1284:  MOVLW  28
1285:  BSF    03.6
1286:  MOVWF  0D
1287:  MOVLW  04
1288:  MOVWF  0F
1289:  BCF    0A.4
128A:  BSF    0A.3
128B:  BCF    03.6
128C:  CALL   32C
128D:  BSF    0A.4
128E:  BCF    0A.3
....................       lcd_putc("              ");
128F:  MOVLW  2C
1290:  BSF    03.6
1291:  MOVWF  0D
1292:  MOVLW  04
1293:  MOVWF  0F
1294:  BCF    0A.4
1295:  BSF    0A.3
1296:  BCF    03.6
1297:  CALL   32C
1298:  BSF    0A.4
1299:  BCF    0A.3
....................       lcd_gotoxy(27,2);
129A:  MOVLW  1B
129B:  BSF    03.6
129C:  MOVWF  55
129D:  MOVLW  02
129E:  MOVWF  56
129F:  BCF    0A.4
12A0:  BCF    03.6
12A1:  CALL   7E5
12A2:  BSF    0A.4
....................       write_num_8(mark_500);
12A3:  BSF    03.5
12A4:  MOVF   6B,W
12A5:  BCF    03.5
12A6:  BSF    03.6
12A7:  MOVWF  49
12A8:  BCF    0A.4
12A9:  BSF    0A.3
12AA:  BCF    03.6
12AB:  CALL   742
12AC:  BSF    0A.4
12AD:  BCF    0A.3
....................       lcd_putc(":");
12AE:  MOVLW  34
12AF:  BSF    03.6
12B0:  MOVWF  0D
12B1:  MOVLW  04
12B2:  MOVWF  0F
12B3:  BCF    0A.4
12B4:  BSF    0A.3
12B5:  BCF    03.6
12B6:  CALL   32C
12B7:  BSF    0A.4
12B8:  BCF    0A.3
....................       write_num_8(mark_100);
12B9:  BSF    03.5
12BA:  MOVF   6A,W
12BB:  BCF    03.5
12BC:  BSF    03.6
12BD:  MOVWF  49
12BE:  BCF    0A.4
12BF:  BSF    0A.3
12C0:  BCF    03.6
12C1:  CALL   742
12C2:  BSF    0A.4
12C3:  BCF    0A.3
....................       lcd_putc(":");
12C4:  MOVLW  35
12C5:  BSF    03.6
12C6:  MOVWF  0D
12C7:  MOVLW  04
12C8:  MOVWF  0F
12C9:  BCF    0A.4
12CA:  BSF    0A.3
12CB:  BCF    03.6
12CC:  CALL   32C
12CD:  BSF    0A.4
12CE:  BCF    0A.3
....................       write_num_8(mark_length);
12CF:  BSF    03.5
12D0:  MOVF   69,W
12D1:  BCF    03.5
12D2:  BSF    03.6
12D3:  MOVWF  49
12D4:  BCF    0A.4
12D5:  BSF    0A.3
12D6:  BCF    03.6
12D7:  CALL   742
12D8:  BSF    0A.4
12D9:  BCF    0A.3
....................       lcd_putc(":");
12DA:  MOVLW  36
12DB:  BSF    03.6
12DC:  MOVWF  0D
12DD:  MOVLW  04
12DE:  MOVWF  0F
12DF:  BCF    0A.4
12E0:  BSF    0A.3
12E1:  BCF    03.6
12E2:  CALL   32C
12E3:  BSF    0A.4
12E4:  BCF    0A.3
....................       write_num_8(mark_base);
12E5:  BSF    03.5
12E6:  MOVF   68,W
12E7:  BCF    03.5
12E8:  BSF    03.6
12E9:  MOVWF  49
12EA:  BCF    0A.4
12EB:  BSF    0A.3
12EC:  BCF    03.6
12ED:  CALL   742
12EE:  BSF    0A.4
12EF:  BCF    0A.3
....................       
....................       lcd_putc(" ");
12F0:  MOVLW  37
12F1:  BSF    03.6
12F2:  MOVWF  0D
12F3:  MOVLW  04
12F4:  MOVWF  0F
12F5:  BCF    0A.4
12F6:  BSF    0A.3
12F7:  BCF    03.6
12F8:  CALL   32C
12F9:  BSF    0A.4
12FA:  BCF    0A.3
....................       if(ft<1000) write_num(ft,1);
12FB:  BSF    03.6
12FC:  MOVF   37,W
12FD:  MOVWF  4C
12FE:  MOVF   36,W
12FF:  MOVWF  4B
1300:  MOVF   35,W
1301:  MOVWF  4A
1302:  MOVF   34,W
1303:  MOVWF  49
1304:  CLRF   50
1305:  CLRF   4F
1306:  MOVLW  7A
1307:  MOVWF  4E
1308:  MOVLW  88
1309:  MOVWF  4D
130A:  BCF    0A.4
130B:  BSF    0A.3
130C:  BCF    03.6
130D:  CALL   7A7
130E:  BSF    0A.4
130F:  BCF    0A.3
1310:  BTFSS  03.0
1311:  GOTO   33A
1312:  BSF    03.6
1313:  MOVF   37,W
1314:  MOVWF  4C
1315:  MOVF   36,W
1316:  MOVWF  4B
1317:  MOVF   35,W
1318:  MOVWF  4A
1319:  MOVF   34,W
131A:  MOVWF  49
131B:  BCF    0A.4
131C:  BSF    0A.3
131D:  BCF    03.6
131E:  CALL   399
131F:  BSF    0A.4
1320:  BCF    0A.3
1321:  MOVF   7A,W
1322:  BSF    03.6
1323:  MOVWF  4C
1324:  MOVF   79,W
1325:  MOVWF  4B
1326:  MOVF   78,W
1327:  MOVWF  4A
1328:  MOVF   77,W
1329:  MOVWF  49
132A:  MOVF   4C,W
132B:  MOVWF  50
132C:  MOVF   4B,W
132D:  MOVWF  4F
132E:  MOVF   4A,W
132F:  MOVWF  4E
1330:  MOVF   49,W
1331:  MOVWF  4D
1332:  MOVLW  01
1333:  MOVWF  51
1334:  BCF    0A.4
1335:  BSF    0A.3
1336:  BCF    03.6
1337:  CALL   621
1338:  BSF    0A.4
1339:  BCF    0A.3
....................       lcd_putc("m");
133A:  MOVLW  38
133B:  BSF    03.6
133C:  MOVWF  0D
133D:  MOVLW  04
133E:  MOVWF  0F
133F:  BCF    0A.4
1340:  BSF    0A.3
1341:  BCF    03.6
1342:  CALL   32C
1343:  BSF    0A.4
1344:  BCF    0A.3
....................           
....................    }
1345:  GOTO   62D
1346:  BSF    03.6
....................    else if(npage==1)
1347:  DECFSZ 48,W
1348:  GOTO   47B
....................    //-------------------------------------- hien so xung va he so encoder
....................    {
....................       lcd_gotoxy(1,1); 
1349:  MOVLW  01
134A:  MOVWF  55
134B:  MOVWF  56
134C:  BCF    0A.4
134D:  BCF    03.6
134E:  CALL   7E5
134F:  BSF    0A.4
....................       lcd_putc("Raw :");
1350:  MOVLW  39
1351:  BSF    03.6
1352:  MOVWF  0D
1353:  MOVLW  04
1354:  MOVWF  0F
1355:  BCF    0A.4
1356:  BSF    0A.3
1357:  BCF    03.6
1358:  CALL   32C
1359:  BSF    0A.4
135A:  BCF    0A.3
....................       write_num_ty(depth);
135B:  MOVF   46,W
135C:  BSF    03.6
135D:  MOVWF  4C
135E:  BCF    03.6
135F:  MOVF   45,W
1360:  BSF    03.6
1361:  MOVWF  4B
1362:  BCF    03.6
1363:  MOVF   44,W
1364:  BSF    03.6
1365:  MOVWF  4A
1366:  BCF    03.6
1367:  MOVF   43,W
1368:  BSF    03.6
1369:  MOVWF  49
....................       
....................       
....................       lcd_gotoxy(1,2); 
*
13E6:  MOVLW  01
13E7:  BSF    03.6
13E8:  MOVWF  55
13E9:  MOVLW  02
13EA:  MOVWF  56
13EB:  BCF    0A.4
13EC:  BCF    03.6
13ED:  CALL   7E5
13EE:  BSF    0A.4
....................       lcd_putc("Coef:");
13EF:  MOVLW  3C
13F0:  BSF    03.6
13F1:  MOVWF  0D
13F2:  MOVLW  04
13F3:  MOVWF  0F
13F4:  BCF    0A.4
13F5:  BSF    0A.3
13F6:  BCF    03.6
13F7:  CALL   32C
13F8:  BSF    0A.4
13F9:  BCF    0A.3
....................       write_num(coef_encoder,0);
13FA:  BSF    03.6
13FB:  CLRF   50
13FC:  CLRF   4F
13FD:  BCF    03.6
13FE:  MOVF   58,W
13FF:  BSF    03.6
1400:  MOVWF  4E
1401:  BCF    03.6
1402:  MOVF   57,W
1403:  BSF    03.6
1404:  MOVWF  4D
1405:  CLRF   51
1406:  BCF    0A.4
1407:  BSF    0A.3
1408:  BCF    03.6
1409:  CALL   621
140A:  BSF    0A.4
140B:  BCF    0A.3
....................       lcd_putc("      ");                   //he so encoder
140C:  MOVLW  3F
140D:  BSF    03.6
140E:  MOVWF  0D
140F:  MOVLW  04
1410:  MOVWF  0F
1411:  BCF    0A.4
1412:  BSF    0A.3
1413:  BCF    03.6
1414:  CALL   32C
1415:  BSF    0A.4
1416:  BCF    0A.3
....................              
....................       lcd_gotoxy(21,1);                    // suc cang
1417:  MOVLW  15
1418:  BSF    03.6
1419:  MOVWF  55
141A:  MOVLW  01
141B:  MOVWF  56
141C:  BCF    0A.4
141D:  BCF    03.6
141E:  CALL   7E5
141F:  BSF    0A.4
....................       lcd_putc("ATens:");
1420:  MOVLW  43
1421:  BSF    03.6
1422:  MOVWF  0D
1423:  MOVLW  04
1424:  MOVWF  0F
1425:  BCF    0A.4
1426:  BSF    0A.3
1427:  BCF    03.6
1428:  CALL   32C
1429:  BSF    0A.4
142A:  BCF    0A.3
....................       write_num(atens,0);
142B:  BSF    03.6
142C:  CLRF   50
142D:  CLRF   4F
142E:  BCF    03.6
142F:  MOVF   3C,W
1430:  BSF    03.6
1431:  MOVWF  4E
1432:  BCF    03.6
1433:  MOVF   3B,W
1434:  BSF    03.6
1435:  MOVWF  4D
1436:  CLRF   51
1437:  BCF    0A.4
1438:  BSF    0A.3
1439:  BCF    03.6
143A:  CALL   621
143B:  BSF    0A.4
143C:  BCF    0A.3
....................       lcd_putc("      ");
143D:  MOVLW  47
143E:  BSF    03.6
143F:  MOVWF  0D
1440:  MOVLW  04
1441:  MOVWF  0F
1442:  BCF    0A.4
1443:  BSF    0A.3
1444:  BCF    03.6
1445:  CALL   32C
1446:  BSF    0A.4
1447:  BCF    0A.3
....................    
....................       lcd_gotoxy(21,2);                   // dau met
1448:  MOVLW  15
1449:  BSF    03.6
144A:  MOVWF  55
144B:  MOVLW  02
144C:  MOVWF  56
144D:  BCF    0A.4
144E:  BCF    03.6
144F:  CALL   7E5
1450:  BSF    0A.4
....................       lcd_putc("BTens:");  
1451:  MOVLW  4B
1452:  BSF    03.6
1453:  MOVWF  0D
1454:  MOVLW  04
1455:  MOVWF  0F
1456:  BCF    0A.4
1457:  BSF    0A.3
1458:  BCF    03.6
1459:  CALL   32C
145A:  BSF    0A.4
145B:  BCF    0A.3
....................       write_num(btens,0);
145C:  BSF    03.6
145D:  CLRF   50
145E:  CLRF   4F
145F:  BCF    03.6
1460:  MOVF   3E,W
1461:  BSF    03.6
1462:  MOVWF  4E
1463:  BCF    03.6
1464:  MOVF   3D,W
1465:  BSF    03.6
1466:  MOVWF  4D
1467:  CLRF   51
1468:  BCF    0A.4
1469:  BSF    0A.3
146A:  BCF    03.6
146B:  CALL   621
146C:  BSF    0A.4
146D:  BCF    0A.3
....................       lcd_putc("      ");
146E:  MOVLW  4F
146F:  BSF    03.6
1470:  MOVWF  0D
1471:  MOVLW  04
1472:  MOVWF  0F
1473:  BCF    0A.4
1474:  BSF    0A.3
1475:  BCF    03.6
1476:  CALL   32C
1477:  BSF    0A.4
1478:  BCF    0A.3
....................                           
....................    }
1479:  GOTO   62D
147A:  BSF    03.6
....................    else if(npage==2)
147B:  MOVF   48,W
147C:  SUBLW  02
147D:  BTFSS  03.2
147E:  GOTO   62E
....................    {
....................       lcd_gotoxy(1,1);                   
147F:  MOVLW  01
1480:  MOVWF  55
1481:  MOVWF  56
1482:  BCF    0A.4
1483:  BCF    03.6
1484:  CALL   7E5
1485:  BSF    0A.4
....................       lcd_putc("Ain0:");
1486:  MOVLW  53
1487:  BSF    03.6
1488:  MOVWF  0D
1489:  MOVLW  04
148A:  MOVWF  0F
148B:  BCF    0A.4
148C:  BSF    0A.3
148D:  BCF    03.6
148E:  CALL   32C
148F:  BSF    0A.4
1490:  BCF    0A.3
....................       lcd_putc("     ");
1491:  MOVLW  56
1492:  BSF    03.6
1493:  MOVWF  0D
1494:  MOVLW  04
1495:  MOVWF  0F
1496:  BCF    0A.4
1497:  BSF    0A.3
1498:  BCF    03.6
1499:  CALL   32C
149A:  BSF    0A.4
149B:  BCF    0A.3
....................       lcd_gotoxy(6,1);
149C:  MOVLW  06
149D:  BSF    03.6
149E:  MOVWF  55
149F:  MOVLW  01
14A0:  MOVWF  56
14A1:  BCF    0A.4
14A2:  BCF    03.6
14A3:  CALL   7E5
14A4:  BSF    0A.4
....................       write_num(adbuf[0],0); 
14A5:  BSF    03.6
14A6:  CLRF   50
14A7:  CLRF   4F
14A8:  MOVF   39,W
14A9:  MOVWF  4E
14AA:  MOVF   38,W
14AB:  MOVWF  4D
14AC:  CLRF   51
14AD:  BCF    0A.4
14AE:  BSF    0A.3
14AF:  BCF    03.6
14B0:  CALL   621
14B1:  BSF    0A.4
14B2:  BCF    0A.3
....................             
....................       lcd_gotoxy(11,1);
14B3:  MOVLW  0B
14B4:  BSF    03.6
14B5:  MOVWF  55
14B6:  MOVLW  01
14B7:  MOVWF  56
14B8:  BCF    0A.4
14B9:  BCF    03.6
14BA:  CALL   7E5
14BB:  BSF    0A.4
....................       lcd_putc("Ain1:");
14BC:  MOVLW  59
14BD:  BSF    03.6
14BE:  MOVWF  0D
14BF:  MOVLW  04
14C0:  MOVWF  0F
14C1:  BCF    0A.4
14C2:  BSF    0A.3
14C3:  BCF    03.6
14C4:  CALL   32C
14C5:  BSF    0A.4
14C6:  BCF    0A.3
....................       lcd_putc("     ");
14C7:  MOVLW  5C
14C8:  BSF    03.6
14C9:  MOVWF  0D
14CA:  MOVLW  04
14CB:  MOVWF  0F
14CC:  BCF    0A.4
14CD:  BSF    0A.3
14CE:  BCF    03.6
14CF:  CALL   32C
14D0:  BSF    0A.4
14D1:  BCF    0A.3
....................       lcd_gotoxy(16,1);
14D2:  MOVLW  10
14D3:  BSF    03.6
14D4:  MOVWF  55
14D5:  MOVLW  01
14D6:  MOVWF  56
14D7:  BCF    0A.4
14D8:  BCF    03.6
14D9:  CALL   7E5
14DA:  BSF    0A.4
....................       write_num(adbuf[1],0); 
14DB:  BSF    03.6
14DC:  CLRF   50
14DD:  CLRF   4F
14DE:  MOVF   3B,W
14DF:  MOVWF  4E
14E0:  MOVF   3A,W
14E1:  MOVWF  4D
14E2:  CLRF   51
14E3:  BCF    0A.4
14E4:  BSF    0A.3
14E5:  BCF    03.6
14E6:  CALL   621
14E7:  BSF    0A.4
14E8:  BCF    0A.3
....................       
....................       lcd_gotoxy(1,2);                   
14E9:  MOVLW  01
14EA:  BSF    03.6
14EB:  MOVWF  55
14EC:  MOVLW  02
14ED:  MOVWF  56
14EE:  BCF    0A.4
14EF:  BCF    03.6
14F0:  CALL   7E5
14F1:  BSF    0A.4
....................       lcd_putc("Ain2:");
14F2:  MOVLW  5F
14F3:  BSF    03.6
14F4:  MOVWF  0D
14F5:  MOVLW  04
14F6:  MOVWF  0F
14F7:  BCF    0A.4
14F8:  BSF    0A.3
14F9:  BCF    03.6
14FA:  CALL   32C
14FB:  BSF    0A.4
14FC:  BCF    0A.3
....................       lcd_putc("     ");
14FD:  MOVLW  62
14FE:  BSF    03.6
14FF:  MOVWF  0D
1500:  MOVLW  04
1501:  MOVWF  0F
1502:  BCF    0A.4
1503:  BSF    0A.3
1504:  BCF    03.6
1505:  CALL   32C
1506:  BSF    0A.4
1507:  BCF    0A.3
....................       lcd_gotoxy(6,2);
1508:  MOVLW  06
1509:  BSF    03.6
150A:  MOVWF  55
150B:  MOVLW  02
150C:  MOVWF  56
150D:  BCF    0A.4
150E:  BCF    03.6
150F:  CALL   7E5
1510:  BSF    0A.4
....................       write_num(adbuf[2],0); 
1511:  BSF    03.6
1512:  CLRF   50
1513:  CLRF   4F
1514:  MOVF   3D,W
1515:  MOVWF  4E
1516:  MOVF   3C,W
1517:  MOVWF  4D
1518:  CLRF   51
1519:  BCF    0A.4
151A:  BSF    0A.3
151B:  BCF    03.6
151C:  CALL   621
151D:  BSF    0A.4
151E:  BCF    0A.3
....................             
....................       lcd_gotoxy(11,2);
151F:  MOVLW  0B
1520:  BSF    03.6
1521:  MOVWF  55
1522:  MOVLW  02
1523:  MOVWF  56
1524:  BCF    0A.4
1525:  BCF    03.6
1526:  CALL   7E5
1527:  BSF    0A.4
....................       lcd_putc("Ain3:");
1528:  MOVLW  65
1529:  BSF    03.6
152A:  MOVWF  0D
152B:  MOVLW  04
152C:  MOVWF  0F
152D:  BCF    0A.4
152E:  BSF    0A.3
152F:  BCF    03.6
1530:  CALL   32C
1531:  BSF    0A.4
1532:  BCF    0A.3
....................       lcd_putc("     ");
1533:  MOVLW  68
1534:  BSF    03.6
1535:  MOVWF  0D
1536:  MOVLW  04
1537:  MOVWF  0F
1538:  BCF    0A.4
1539:  BSF    0A.3
153A:  BCF    03.6
153B:  CALL   32C
153C:  BSF    0A.4
153D:  BCF    0A.3
....................       lcd_gotoxy(16,2);
153E:  MOVLW  10
153F:  BSF    03.6
1540:  MOVWF  55
1541:  MOVLW  02
1542:  MOVWF  56
1543:  BCF    0A.4
1544:  BCF    03.6
1545:  CALL   7E5
1546:  BSF    0A.4
....................       write_num(adbuf[3],0);
1547:  BSF    03.6
1548:  CLRF   50
1549:  CLRF   4F
154A:  MOVF   3F,W
154B:  MOVWF  4E
154C:  MOVF   3E,W
154D:  MOVWF  4D
154E:  CLRF   51
154F:  BCF    0A.4
1550:  BSF    0A.3
1551:  BCF    03.6
1552:  CALL   621
1553:  BSF    0A.4
1554:  BCF    0A.3
....................       
....................       lcd_gotoxy(21,1);                   
1555:  MOVLW  15
1556:  BSF    03.6
1557:  MOVWF  55
1558:  MOVLW  01
1559:  MOVWF  56
155A:  BCF    0A.4
155B:  BCF    03.6
155C:  CALL   7E5
155D:  BSF    0A.4
....................       lcd_putc("Ain4:");
155E:  MOVLW  6B
155F:  BSF    03.6
1560:  MOVWF  0D
1561:  MOVLW  04
1562:  MOVWF  0F
1563:  BCF    0A.4
1564:  BSF    0A.3
1565:  BCF    03.6
1566:  CALL   32C
1567:  BSF    0A.4
1568:  BCF    0A.3
....................       lcd_putc("     ");
1569:  MOVLW  6E
156A:  BSF    03.6
156B:  MOVWF  0D
156C:  MOVLW  04
156D:  MOVWF  0F
156E:  BCF    0A.4
156F:  BSF    0A.3
1570:  BCF    03.6
1571:  CALL   32C
1572:  BSF    0A.4
1573:  BCF    0A.3
....................       lcd_gotoxy(26,1);
1574:  MOVLW  1A
1575:  BSF    03.6
1576:  MOVWF  55
1577:  MOVLW  01
1578:  MOVWF  56
1579:  BCF    0A.4
157A:  BCF    03.6
157B:  CALL   7E5
157C:  BSF    0A.4
....................       write_num(adbuf[4],0); 
157D:  BSF    03.6
157E:  CLRF   50
157F:  CLRF   4F
1580:  MOVF   41,W
1581:  MOVWF  4E
1582:  MOVF   40,W
1583:  MOVWF  4D
1584:  CLRF   51
1585:  BCF    0A.4
1586:  BSF    0A.3
1587:  BCF    03.6
1588:  CALL   621
1589:  BSF    0A.4
158A:  BCF    0A.3
....................             
....................       lcd_gotoxy(31,1);
158B:  MOVLW  1F
158C:  BSF    03.6
158D:  MOVWF  55
158E:  MOVLW  01
158F:  MOVWF  56
1590:  BCF    0A.4
1591:  BCF    03.6
1592:  CALL   7E5
1593:  BSF    0A.4
....................       lcd_putc("Ain5:");
1594:  MOVLW  71
1595:  BSF    03.6
1596:  MOVWF  0D
1597:  MOVLW  04
1598:  MOVWF  0F
1599:  BCF    0A.4
159A:  BSF    0A.3
159B:  BCF    03.6
159C:  CALL   32C
159D:  BSF    0A.4
159E:  BCF    0A.3
....................       lcd_putc("     ");
159F:  MOVLW  74
15A0:  BSF    03.6
15A1:  MOVWF  0D
15A2:  MOVLW  04
15A3:  MOVWF  0F
15A4:  BCF    0A.4
15A5:  BSF    0A.3
15A6:  BCF    03.6
15A7:  CALL   32C
15A8:  BSF    0A.4
15A9:  BCF    0A.3
....................       lcd_gotoxy(36,1);
15AA:  MOVLW  24
15AB:  BSF    03.6
15AC:  MOVWF  55
15AD:  MOVLW  01
15AE:  MOVWF  56
15AF:  BCF    0A.4
15B0:  BCF    03.6
15B1:  CALL   7E5
15B2:  BSF    0A.4
....................       write_num(adbuf[5],0); 
15B3:  BSF    03.6
15B4:  CLRF   50
15B5:  CLRF   4F
15B6:  MOVF   43,W
15B7:  MOVWF  4E
15B8:  MOVF   42,W
15B9:  MOVWF  4D
15BA:  CLRF   51
15BB:  BCF    0A.4
15BC:  BSF    0A.3
15BD:  BCF    03.6
15BE:  CALL   621
15BF:  BSF    0A.4
15C0:  BCF    0A.3
....................       
....................       lcd_gotoxy(21,2);                   //kenh adc 4- dong ac
15C1:  MOVLW  15
15C2:  BSF    03.6
15C3:  MOVWF  55
15C4:  MOVLW  02
15C5:  MOVWF  56
15C6:  BCF    0A.4
15C7:  BCF    03.6
15C8:  CALL   7E5
15C9:  BSF    0A.4
....................       lcd_putc("Ain6:");
15CA:  MOVLW  77
15CB:  BSF    03.6
15CC:  MOVWF  0D
15CD:  MOVLW  04
15CE:  MOVWF  0F
15CF:  BCF    0A.4
15D0:  BSF    0A.3
15D1:  BCF    03.6
15D2:  CALL   32C
15D3:  BSF    0A.4
15D4:  BCF    0A.3
....................       lcd_putc("     ");
15D5:  MOVLW  7A
15D6:  BSF    03.6
15D7:  MOVWF  0D
15D8:  MOVLW  04
15D9:  MOVWF  0F
15DA:  BCF    0A.4
15DB:  BSF    0A.3
15DC:  BCF    03.6
15DD:  CALL   32C
15DE:  BSF    0A.4
15DF:  BCF    0A.3
....................       lcd_gotoxy(26,2);
15E0:  MOVLW  1A
15E1:  BSF    03.6
15E2:  MOVWF  55
15E3:  MOVLW  02
15E4:  MOVWF  56
15E5:  BCF    0A.4
15E6:  BCF    03.6
15E7:  CALL   7E5
15E8:  BSF    0A.4
....................       write_num(adbuf[6],0); 
15E9:  BSF    03.6
15EA:  CLRF   50
15EB:  CLRF   4F
15EC:  MOVF   45,W
15ED:  MOVWF  4E
15EE:  MOVF   44,W
15EF:  MOVWF  4D
15F0:  CLRF   51
15F1:  BCF    0A.4
15F2:  BSF    0A.3
15F3:  BCF    03.6
15F4:  CALL   621
15F5:  BSF    0A.4
15F6:  BCF    0A.3
....................             
....................       lcd_gotoxy(31,2);
15F7:  MOVLW  1F
15F8:  BSF    03.6
15F9:  MOVWF  55
15FA:  MOVLW  02
15FB:  MOVWF  56
15FC:  BCF    0A.4
15FD:  BCF    03.6
15FE:  CALL   7E5
15FF:  BSF    0A.4
....................       lcd_putc("Ain7:");
1600:  MOVLW  7D
1601:  BSF    03.6
1602:  MOVWF  0D
1603:  MOVLW  04
1604:  MOVWF  0F
1605:  BCF    0A.4
1606:  BSF    0A.3
1607:  BCF    03.6
1608:  CALL   32C
1609:  BSF    0A.4
160A:  BCF    0A.3
....................       lcd_putc("     ");
160B:  MOVLW  80
160C:  BSF    03.6
160D:  MOVWF  0D
160E:  MOVLW  04
160F:  MOVWF  0F
1610:  BCF    0A.4
1611:  BSF    0A.3
1612:  BCF    03.6
1613:  CALL   32C
1614:  BSF    0A.4
1615:  BCF    0A.3
....................       lcd_gotoxy(36,2);
1616:  MOVLW  24
1617:  BSF    03.6
1618:  MOVWF  55
1619:  MOVLW  02
161A:  MOVWF  56
161B:  BCF    0A.4
161C:  BCF    03.6
161D:  CALL   7E5
161E:  BSF    0A.4
....................       write_num(adbuf[7],0);
161F:  BSF    03.6
1620:  CLRF   50
1621:  CLRF   4F
1622:  MOVF   47,W
1623:  MOVWF  4E
1624:  MOVF   46,W
1625:  MOVWF  4D
1626:  CLRF   51
1627:  BCF    0A.4
1628:  BSF    0A.3
1629:  BCF    03.6
162A:  CALL   621
162B:  BSF    0A.4
162C:  BCF    0A.3
162D:  BSF    03.6
....................       
....................                   
....................    }
162E:  BCF    03.6
162F:  RETURN
.................... }
.................... 
.................... void update_data()
.................... {
.................... if(sdepth<0) data[0]=1;
*
1662:  BTFSS  4E.7
1663:  GOTO   669
1664:  MOVLW  01
1665:  BSF    03.5
1666:  MOVWF  34
1667:  GOTO   66B
1668:  BCF    03.5
.................... else data[0]=0;
1669:  BSF    03.5
166A:  CLRF   34
....................    //data[1-6] gia tri bcd cua depth data[0] bit dau
.................... tach_so(fdepth);
166B:  BCF    03.5
166C:  BSF    03.6
166D:  MOVF   2B,W
166E:  MOVWF  4C
166F:  MOVF   2A,W
1670:  MOVWF  4B
1671:  MOVF   29,W
1672:  MOVWF  4A
1673:  MOVF   28,W
1674:  MOVWF  49
1675:  BCF    0A.4
1676:  BSF    0A.3
1677:  BCF    03.6
1678:  CALL   399
1679:  BSF    0A.4
167A:  BCF    0A.3
167B:  MOVF   7A,W
167C:  BSF    03.6
167D:  MOVWF  4B
167E:  MOVF   79,W
167F:  MOVWF  4A
1680:  MOVF   78,W
1681:  MOVWF  49
1682:  MOVF   77,W
1683:  MOVWF  48
1684:  MOVF   4B,W
1685:  MOVWF  55
1686:  MOVF   4A,W
1687:  MOVWF  54
1688:  MOVF   49,W
1689:  MOVWF  53
168A:  MOVF   48,W
168B:  MOVWF  52
168C:  BCF    0A.4
168D:  BSF    0A.3
168E:  BCF    03.6
168F:  CALL   40B
1690:  BSF    0A.4
1691:  BCF    0A.3
....................   data[1] = donvi;
1692:  MOVF   31,W
1693:  BSF    03.5
1694:  MOVWF  35
....................   data[2]= chuc;
1695:  BCF    03.5
1696:  MOVF   32,W
1697:  BSF    03.5
1698:  MOVWF  36
....................   data[3]= tram;
1699:  BCF    03.5
169A:  MOVF   33,W
169B:  BSF    03.5
169C:  MOVWF  37
....................   data[4]= nghin;
169D:  BCF    03.5
169E:  MOVF   34,W
169F:  BSF    03.5
16A0:  MOVWF  38
....................   data[5]= chucnghin;
16A1:  BCF    03.5
16A2:  MOVF   35,W
16A3:  BSF    03.5
16A4:  MOVWF  39
....................   data[6]= tramnghin;
16A5:  BCF    03.5
16A6:  MOVF   36,W
16A7:  BSF    03.5
16A8:  MOVWF  3A
.................... 
....................    //data[7-11] gia tri bcd cua tension (suc cang cap)
.................... tach_so(ftens);   
16A9:  BCF    03.5
16AA:  BSF    03.6
16AB:  MOVF   33,W
16AC:  MOVWF  4C
16AD:  MOVF   32,W
16AE:  MOVWF  4B
16AF:  MOVF   31,W
16B0:  MOVWF  4A
16B1:  MOVF   30,W
16B2:  MOVWF  49
16B3:  BCF    0A.4
16B4:  BSF    0A.3
16B5:  BCF    03.6
16B6:  CALL   399
16B7:  BSF    0A.4
16B8:  BCF    0A.3
16B9:  MOVF   7A,W
16BA:  BSF    03.6
16BB:  MOVWF  4B
16BC:  MOVF   79,W
16BD:  MOVWF  4A
16BE:  MOVF   78,W
16BF:  MOVWF  49
16C0:  MOVF   77,W
16C1:  MOVWF  48
16C2:  MOVF   4B,W
16C3:  MOVWF  55
16C4:  MOVF   4A,W
16C5:  MOVWF  54
16C6:  MOVF   49,W
16C7:  MOVWF  53
16C8:  MOVF   48,W
16C9:  MOVWF  52
16CA:  BCF    0A.4
16CB:  BSF    0A.3
16CC:  BCF    03.6
16CD:  CALL   40B
16CE:  BSF    0A.4
16CF:  BCF    0A.3
....................   data[7] = donvi;
16D0:  MOVF   31,W
16D1:  BSF    03.5
16D2:  MOVWF  3B
....................   data[8]= chuc;
16D3:  BCF    03.5
16D4:  MOVF   32,W
16D5:  BSF    03.5
16D6:  MOVWF  3C
....................   data[9]= tram;
16D7:  BCF    03.5
16D8:  MOVF   33,W
16D9:  BSF    03.5
16DA:  MOVWF  3D
....................   data[10]= nghin;
16DB:  BCF    03.5
16DC:  MOVF   34,W
16DD:  BSF    03.5
16DE:  MOVWF  3E
....................   data[11]= chucnghin;
16DF:  BCF    03.5
16E0:  MOVF   35,W
16E1:  BSF    03.5
16E2:  MOVWF  3F
....................    
....................      //data[12-15] gia tri bcd cua speed
.................... tach_so(fspeed);      
16E3:  BCF    03.5
16E4:  BSF    03.6
16E5:  MOVF   2F,W
16E6:  MOVWF  4C
16E7:  MOVF   2E,W
16E8:  MOVWF  4B
16E9:  MOVF   2D,W
16EA:  MOVWF  4A
16EB:  MOVF   2C,W
16EC:  MOVWF  49
16ED:  BCF    0A.4
16EE:  BSF    0A.3
16EF:  BCF    03.6
16F0:  CALL   399
16F1:  BSF    0A.4
16F2:  BCF    0A.3
16F3:  MOVF   7A,W
16F4:  BSF    03.6
16F5:  MOVWF  4B
16F6:  MOVF   79,W
16F7:  MOVWF  4A
16F8:  MOVF   78,W
16F9:  MOVWF  49
16FA:  MOVF   77,W
16FB:  MOVWF  48
16FC:  MOVF   4B,W
16FD:  MOVWF  55
16FE:  MOVF   4A,W
16FF:  MOVWF  54
1700:  MOVF   49,W
1701:  MOVWF  53
1702:  MOVF   48,W
1703:  MOVWF  52
1704:  BCF    0A.4
1705:  BSF    0A.3
1706:  BCF    03.6
1707:  CALL   40B
1708:  BSF    0A.4
1709:  BCF    0A.3
....................   data[12]= donvi;
170A:  MOVF   31,W
170B:  BSF    03.5
170C:  MOVWF  40
....................   data[13]= chuc;
170D:  BCF    03.5
170E:  MOVF   32,W
170F:  BSF    03.5
1710:  MOVWF  41
....................   data[14]= tram;
1711:  BCF    03.5
1712:  MOVF   33,W
1713:  BSF    03.5
1714:  MOVWF  42
....................   data[15]= nghin;  
1715:  BCF    03.5
1716:  MOVF   34,W
1717:  BSF    03.5
1718:  MOVWF  43
....................    //gia tri do sau
....................   data[16] = sdepth;             //depth from pic16f877a
1719:  BCF    03.5
171A:  MOVF   4B,W
171B:  BSF    03.5
171C:  MOVWF  44
....................   data[17] = sdepth>>8;
171D:  BCF    03.5
171E:  MOVF   4C,W
171F:  BSF    03.5
1720:  MOVWF  45
....................   data[18] = sdepth>>16;
1721:  BCF    03.5
1722:  MOVF   4D,W
1723:  BSF    03.5
1724:  MOVWF  46
....................   data[19] = sdepth>>24;
1725:  BCF    03.5
1726:  MOVF   4E,W
1727:  BSF    03.5
1728:  MOVWF  47
....................  // ----------------------------goi gia tri goc  
....................  
....................  data[20] = adbuf[0];      //tens
1729:  BCF    03.5
172A:  BSF    03.6
172B:  MOVF   38,W
172C:  BSF    03.5
172D:  BCF    03.6
172E:  MOVWF  48
....................  data[21] = adbuf[0]>>8;      
172F:  BCF    03.5
1730:  BSF    03.6
1731:  MOVF   39,W
1732:  BSF    03.5
1733:  BCF    03.6
1734:  MOVWF  49
....................  
....................  data[22] = adbuf[1];            //mag
1735:  BCF    03.5
1736:  BSF    03.6
1737:  MOVF   3A,W
1738:  BSF    03.5
1739:  BCF    03.6
173A:  MOVWF  4A
....................  data[23] = adbuf[1]>>8;
173B:  BCF    03.5
173C:  BSF    03.6
173D:  MOVF   3B,W
173E:  BSF    03.5
173F:  BCF    03.6
1740:  MOVWF  4B
....................    
....................  data[24] = adbuf[2];            //res
1741:  BCF    03.5
1742:  BSF    03.6
1743:  MOVF   3C,W
1744:  BSF    03.5
1745:  BCF    03.6
1746:  MOVWF  4C
....................  data[25] = adbuf[2]>>8;
1747:  BCF    03.5
1748:  BSF    03.6
1749:  MOVF   3D,W
174A:  BSF    03.5
174B:  BCF    03.6
174C:  MOVWF  4D
.................... 
....................  data[26] = adbuf[3];            //nvac
174D:  BCF    03.5
174E:  BSF    03.6
174F:  MOVF   3E,W
1750:  BSF    03.5
1751:  BCF    03.6
1752:  MOVWF  4E
....................  data[27] = adbuf[3]>>8;
1753:  BCF    03.5
1754:  BSF    03.6
1755:  MOVF   3F,W
1756:  BSF    03.5
1757:  BCF    03.6
1758:  MOVWF  4F
.................... 
....................  data[28] = adbuf[4];            //niac
1759:  BCF    03.5
175A:  BSF    03.6
175B:  MOVF   40,W
175C:  BSF    03.5
175D:  BCF    03.6
175E:  MOVWF  50
....................  data[29] = adbuf[4]>>8;
175F:  BCF    03.5
1760:  BSF    03.6
1761:  MOVF   41,W
1762:  BSF    03.5
1763:  BCF    03.6
1764:  MOVWF  51
.................... 
....................  data[30] = adbuf[5];
1765:  BCF    03.5
1766:  BSF    03.6
1767:  MOVF   42,W
1768:  BSF    03.5
1769:  BCF    03.6
176A:  MOVWF  52
....................  data[31] = adbuf[5]>>8;
176B:  BCF    03.5
176C:  BSF    03.6
176D:  MOVF   43,W
176E:  BSF    03.5
176F:  BCF    03.6
1770:  MOVWF  53
....................    
....................  data[32] = adbuf[6];         //nvdc
1771:  BCF    03.5
1772:  BSF    03.6
1773:  MOVF   44,W
1774:  BSF    03.5
1775:  BCF    03.6
1776:  MOVWF  54
....................  data[33] = adbuf[6]>>8;
1777:  BCF    03.5
1778:  BSF    03.6
1779:  MOVF   45,W
177A:  BSF    03.5
177B:  BCF    03.6
177C:  MOVWF  55
....................  
....................  data[34] = adbuf[7];         //nidc
177D:  BCF    03.5
177E:  BSF    03.6
177F:  MOVF   46,W
1780:  BSF    03.5
1781:  BCF    03.6
1782:  MOVWF  56
....................  data[35] = adbuf[7]>>8;
1783:  BCF    03.5
1784:  BSF    03.6
1785:  MOVF   47,W
1786:  BSF    03.5
1787:  BCF    03.6
1788:  MOVWF  57
....................    
....................  
....................  
.................... 
....................  
....................  data[40] = delta;           //ltimer*100ms: thoi gian giua 2 lan truy xuat tu pc
1789:  BCF    03.5
178A:  MOVF   59,W
178B:  BSF    03.5
178C:  MOVWF  5C
....................  data[41] = delta>>8;
178D:  BCF    03.5
178E:  MOVF   5A,W
178F:  BSF    03.5
1790:  MOVWF  5D
1791:  BCF    03.5
1792:  BSF    0A.3
1793:  BSF    0A.4
1794:  GOTO   610 (RETURN)
....................  
.................... }
.................... 
.................... //===========================================================
.................... void main(void)
*
1800:  MOVF   03,W
1801:  ANDLW  1F
1802:  MOVWF  03
1803:  BSF    03.5
1804:  BSF    03.6
1805:  BSF    07.3
1806:  MOVLW  2A
1807:  BCF    03.6
1808:  MOVWF  19
1809:  MOVLW  00
180A:  MOVWF  1A
180B:  MOVLW  E6
180C:  MOVWF  18
180D:  MOVLW  D0
180E:  BCF    03.5
180F:  MOVWF  18
1810:  CLRF   2C
1811:  CLRF   2D
1812:  CLRF   2F
1813:  CLRF   30
1814:  MOVLW  03
1815:  MOVWF  3C
1816:  MOVLW  E8
1817:  MOVWF  3B
1818:  CLRF   3E
1819:  CLRF   3D
181A:  CLRF   46
181B:  CLRF   45
181C:  CLRF   44
181D:  CLRF   43
181E:  CLRF   4E
181F:  CLRF   4D
1820:  CLRF   4C
1821:  CLRF   4B
1822:  CLRF   52
1823:  CLRF   51
1824:  CLRF   50
1825:  CLRF   4F
1826:  CLRF   56
1827:  CLRF   55
1828:  CLRF   54
1829:  CLRF   53
182A:  MOVLW  4C
182B:  MOVWF  58
182C:  MOVLW  EA
182D:  MOVWF  57
182E:  CLRF   5A
182F:  CLRF   59
1830:  CLRF   66
1831:  CLRF   65
1832:  CLRF   68
1833:  CLRF   67
1834:  CLRF   7B
1835:  CLRF   7C
1836:  CLRF   7D
1837:  BSF    03.5
1838:  CLRF   64
1839:  CLRF   65
183A:  CLRF   66
183B:  BCF    67.0
183C:  BSF    67.1
183D:  BCF    67.2
183E:  BCF    67.3
183F:  BCF    67.4
1840:  BCF    67.5
1841:  BSF    67.6
1842:  CLRF   68
1843:  CLRF   69
1844:  CLRF   6A
1845:  CLRF   6B
1846:  MOVLW  0A
1847:  MOVWF  6C
1848:  CLRF   6E
1849:  CLRF   6D
184A:  MOVLW  FF
184B:  MOVWF  6F
184C:  BSF    03.6
184D:  MOVF   09,W
184E:  ANDLW  C0
184F:  MOVWF  09
1850:  BCF    03.6
1851:  BCF    1F.4
1852:  BCF    1F.5
1853:  MOVLW  00
1854:  BSF    03.6
1855:  MOVWF  08
1856:  BCF    03.5
1857:  CLRF   07
1858:  CLRF   08
1859:  CLRF   09
185A:  BCF    03.7
.................... {
....................   
.................... 
.................... set_tris_A(0xff);
*
1873:  MOVLW  FF
1874:  BSF    03.5
1875:  BCF    03.6
1876:  MOVWF  05
.................... set_tris_B(0x1f);     
1877:  MOVLW  1F
1878:  MOVWF  06
.................... set_tris_C(0x9d);
1879:  MOVLW  9D
187A:  MOVWF  07
187B:  MOVWF  6F
.................... set_tris_D(0x00);
187C:  MOVLW  00
187D:  MOVWF  08
.................... 
.................... 
.................... enable_interrupts(INT_EXT);
187E:  BCF    03.5
187F:  BSF    0B.4
.................... enable_interrupts(INT_RDA);         //ngat nhan du lieu
1880:  BSF    03.5
1881:  BSF    0C.5
.................... enable_interrupts(INT_RTCC );
1882:  BCF    03.5
1883:  BSF    0B.5
.................... enable_interrupts(INT_TIMER1 );
1884:  BSF    03.5
1885:  BSF    0C.0
.................... enable_interrupts(GLOBAL);
1886:  MOVLW  C0
1887:  BCF    03.5
1888:  IORWF  0B,F
.................... 
.................... setup_adc(ADC_CLOCK_INTERNAL);
1889:  BSF    1F.6
188A:  BSF    1F.7
188B:  BSF    03.5
188C:  BSF    1F.7
188D:  BCF    03.5
188E:  BSF    1F.0
.................... Setup_ADC_ports(ALL_ANALOG);
188F:  BSF    03.5
1890:  BSF    03.6
1891:  MOVF   09,W
1892:  ANDLW  C0
1893:  IORLW  1F
1894:  MOVWF  09
1895:  BCF    03.6
1896:  BCF    1F.4
1897:  BCF    1F.5
1898:  MOVLW  FF
1899:  BSF    03.6
189A:  MOVWF  08
.................... SETUP_TIMER_0(RTCC_EXT_H_TO_L);
189B:  BCF    03.6
189C:  MOVF   01,W
189D:  ANDLW  C0
189E:  IORLW  30
189F:  MOVWF  01
.................... SETUP_TIMER_1(T1_INTERNAL|T1_DIV_BY_8);                     //1.6us
18A0:  MOVLW  35
18A1:  BCF    03.5
18A2:  MOVWF  10
.................... SET_TIMER1(3035);      
18A3:  CLRF   0E
18A4:  MOVLW  0B
18A5:  MOVWF  0F
18A6:  MOVLW  DB
18A7:  MOVWF  0E
18A8:  NOP
.................... SET_TIMER0(255);                       //100ms
18A9:  MOVLW  FF
18AA:  MOVWF  01
.................... TR1EN=1;
18AB:  BSF    10.0
.................... 
....................  
.................... lcd_init();
18AC:  BCF    0A.4
18AD:  BCF    0A.3
18AE:  GOTO   5A5
18AF:  BSF    0A.4
18B0:  BSF    0A.3
.................... 
.................... //---------------------------------------
.................... ipage=0;
18B1:  CLRF   2C
.................... 
.................... gaussing=yes;
18B2:  BSF    03.5
18B3:  BTFSC  67.1
18B4:  GOTO   0B8
18B5:  BCF    03.5
18B6:  BCF    06.5
18B7:  BSF    03.5
18B8:  BTFSS  67.1
18B9:  GOTO   0BD
18BA:  BCF    03.5
18BB:  BSF    06.5
18BC:  BSF    03.5
.................... pwm1 = yes;
18BD:  BTFSC  67.1
18BE:  GOTO   0C2
18BF:  BCF    03.5
18C0:  BCF    07.1
18C1:  BSF    03.5
18C2:  BTFSS  67.1
18C3:  GOTO   0C7
18C4:  BCF    03.5
18C5:  BSF    07.1
18C6:  BSF    03.5
....................       
.................... erasepro=yes;
18C7:  BTFSC  67.1
18C8:  GOTO   0CC
18C9:  BCF    03.5
18CA:  BCF    06.6
18CB:  BSF    03.5
18CC:  BTFSS  67.1
18CD:  GOTO   0D1
18CE:  BCF    03.5
18CF:  BSF    06.6
18D0:  BSF    03.5
.................... eraseall=no;      //luon bat xoa tong
18D1:  BTFSC  67.2
18D2:  GOTO   0D6
18D3:  BCF    03.5
18D4:  BCF    06.7
18D5:  BSF    03.5
18D6:  BTFSS  67.2
18D7:  GOTO   0DB
18D8:  BCF    03.5
18D9:  BSF    06.7
18DA:  BSF    03.5
.................... sdepth=0;
18DB:  BCF    03.5
18DC:  CLRF   4E
18DD:  CLRF   4D
18DE:  CLRF   4C
18DF:  CLRF   4B
.................... mark_base=0;
18E0:  BSF    03.5
18E1:  CLRF   68
.................... run1 = read_eeprom(17);      
18E2:  MOVLW  11
18E3:  BCF    03.5
18E4:  BSF    03.6
18E5:  MOVWF  0D
18E6:  BSF    03.5
18E7:  BCF    0C.7
18E8:  BSF    0C.0
18E9:  BCF    03.5
18EA:  MOVF   0C,W
18EB:  BCF    03.6
18EC:  MOVWF  2E
....................    if(run1 == 2)
18ED:  MOVF   2E,W
18EE:  SUBLW  02
18EF:  BTFSS  03.2
18F0:  GOTO   0F7
....................    {   read_flash();
18F1:  BCF    0A.4
18F2:  BCF    0A.3
18F3:  GOTO   5FB
18F4:  BSF    0A.4
18F5:  BSF    0A.3
....................    }
18F6:  GOTO   0FB
....................    else
....................    {
....................       
....................       sdepth=0;
18F7:  CLRF   4E
18F8:  CLRF   4D
18F9:  CLRF   4C
18FA:  CLRF   4B
....................    }
....................       
.................... while(1)
.................... {
.................... if(adbuf[7] > 10) {
18FB:  BSF    03.6
18FC:  MOVF   47,F
18FD:  BTFSS  03.2
18FE:  GOTO   103
18FF:  MOVF   46,W
1900:  SUBLW  0A
1901:  BTFSC  03.0
1902:  GOTO   14A
1903:  BCF    03.6
1904:  CLRF   2B
1905:  BTFSC  0B.7
1906:  BSF    2B.7
1907:  BCF    0B.7
....................    mark_length = mark_length*base_length + mark_base;
1908:  BSF    03.5
1909:  MOVF   69,W
190A:  BCF    03.5
190B:  BSF    03.6
190C:  MOVWF  6B
190D:  BSF    03.5
190E:  BCF    03.6
190F:  MOVF   6C,W
1910:  BCF    03.5
1911:  BSF    03.6
1912:  MOVWF  6C
1913:  BCF    0A.4
1914:  BCF    0A.3
1915:  BCF    03.6
1916:  CALL   270
1917:  BSF    0A.4
1918:  BSF    0A.3
1919:  BTFSC  2B.7
191A:  BSF    0B.7
191B:  BSF    03.5
191C:  MOVF   68,W
191D:  ADDWF  78,W
191E:  MOVWF  69
....................    base_length = 25;
191F:  MOVLW  19
1920:  MOVWF  6C
....................    mark_base = mark_length%base_length;
1921:  MOVF   69,W
1922:  BCF    03.5
1923:  BSF    03.6
1924:  MOVWF  4C
1925:  BSF    03.5
1926:  BCF    03.6
1927:  MOVF   6C,W
1928:  BCF    03.5
1929:  BSF    03.6
192A:  MOVWF  4D
192B:  BCF    0A.4
192C:  BCF    0A.3
192D:  BCF    03.6
192E:  CALL   643
192F:  BSF    0A.4
1930:  BSF    0A.3
1931:  MOVF   77,W
1932:  BSF    03.5
1933:  MOVWF  68
....................    mark_length /= base_length;
1934:  MOVF   69,W
1935:  BCF    03.5
1936:  BSF    03.6
1937:  MOVWF  4C
1938:  BSF    03.5
1939:  BCF    03.6
193A:  MOVF   6C,W
193B:  BCF    03.5
193C:  BSF    03.6
193D:  MOVWF  4D
193E:  BCF    0A.4
193F:  BCF    0A.3
1940:  BCF    03.6
1941:  CALL   643
1942:  BSF    0A.4
1943:  BSF    0A.3
1944:  MOVF   78,W
1945:  BSF    03.5
1946:  MOVWF  69
....................    
....................     
.................... }
1947:  GOTO   18E
1948:  BCF    03.5
1949:  BSF    03.6
194A:  BCF    03.6
194B:  CLRF   2B
194C:  BTFSC  0B.7
194D:  BSF    2B.7
194E:  BCF    0B.7
.................... else {
....................    mark_length = mark_length*base_length + mark_base;
194F:  BSF    03.5
1950:  MOVF   69,W
1951:  BCF    03.5
1952:  BSF    03.6
1953:  MOVWF  6B
1954:  BSF    03.5
1955:  BCF    03.6
1956:  MOVF   6C,W
1957:  BCF    03.5
1958:  BSF    03.6
1959:  MOVWF  6C
195A:  BCF    0A.4
195B:  BCF    0A.3
195C:  BCF    03.6
195D:  CALL   270
195E:  BSF    0A.4
195F:  BSF    0A.3
1960:  BTFSC  2B.7
1961:  BSF    0B.7
1962:  BSF    03.5
1963:  MOVF   68,W
1964:  ADDWF  78,W
1965:  MOVWF  69
....................    base_length = 10;
1966:  MOVLW  0A
1967:  MOVWF  6C
....................    mark_base = mark_length%base_length;
1968:  MOVF   69,W
1969:  BCF    03.5
196A:  BSF    03.6
196B:  MOVWF  4C
196C:  BSF    03.5
196D:  BCF    03.6
196E:  MOVF   6C,W
196F:  BCF    03.5
1970:  BSF    03.6
1971:  MOVWF  4D
1972:  BCF    0A.4
1973:  BCF    0A.3
1974:  BCF    03.6
1975:  CALL   643
1976:  BSF    0A.4
1977:  BSF    0A.3
1978:  MOVF   77,W
1979:  BSF    03.5
197A:  MOVWF  68
....................    mark_length /= base_length;
197B:  MOVF   69,W
197C:  BCF    03.5
197D:  BSF    03.6
197E:  MOVWF  4C
197F:  BSF    03.5
1980:  BCF    03.6
1981:  MOVF   6C,W
1982:  BCF    03.5
1983:  BSF    03.6
1984:  MOVWF  4D
1985:  BCF    0A.4
1986:  BCF    0A.3
1987:  BCF    03.6
1988:  CALL   643
1989:  BSF    0A.4
198A:  BSF    0A.3
198B:  MOVF   78,W
198C:  BSF    03.5
198D:  MOVWF  69
....................    
.................... }
.................... 
.................... if(adbuf[6] > 10) {
198E:  BCF    03.5
198F:  BSF    03.6
1990:  MOVF   45,F
1991:  BTFSS  03.2
1992:  GOTO   197
1993:  MOVF   44,W
1994:  SUBLW  0A
1995:  BTFSC  03.0
1996:  GOTO   19D
....................    
....................    dirmark = 1;
1997:  BSF    03.5
1998:  BCF    03.6
1999:  BSF    67.6
....................    
.................... }
199A:  GOTO   1A0
199B:  BCF    03.5
199C:  BSF    03.6
.................... else {
....................    dirmark = 0;
199D:  BSF    03.5
199E:  BCF    03.6
199F:  BCF    67.6
.................... }
.................... 
.................... //------------------------------------------------- doc ad suc cang
.................... for(i=0;i<8;i++){   
19A0:  BCF    03.5
19A1:  CLRF   5E
19A2:  CLRF   5D
19A3:  MOVF   5E,F
19A4:  BTFSS  03.2
19A5:  GOTO   1BB
19A6:  MOVF   5D,W
19A7:  SUBLW  07
19A8:  BTFSS  03.0
19A9:  GOTO   1BB
....................    adbuf[i]=0;
19AA:  BCF    03.0
19AB:  RLF    5D,W
19AC:  MOVWF  79
19AD:  RLF    5E,W
19AE:  MOVWF  7A
19AF:  MOVF   79,W
19B0:  ADDLW  38
19B1:  MOVWF  04
19B2:  BSF    03.7
19B3:  INCF   04,F
19B4:  CLRF   00
19B5:  DECF   04,F
19B6:  CLRF   00
19B7:  INCF   5D,F
19B8:  BTFSC  03.2
19B9:  INCF   5E,F
19BA:  GOTO   1A3
.................... }
.................... for(kk=0;kk<50;kk++){
19BB:  CLRF   68
19BC:  CLRF   67
19BD:  MOVF   68,F
19BE:  BTFSS  03.2
19BF:  GOTO   206
19C0:  MOVF   67,W
19C1:  SUBLW  31
19C2:  BTFSS  03.0
19C3:  GOTO   206
.................... for(i=0;i<8;i++){
19C4:  CLRF   5E
19C5:  CLRF   5D
19C6:  MOVF   5E,F
19C7:  BTFSS  03.2
19C8:  GOTO   202
19C9:  MOVF   5D,W
19CA:  SUBLW  07
19CB:  BTFSS  03.0
19CC:  GOTO   202
....................    set_adc_channel(i);                               
19CD:  RLF    5D,W
19CE:  MOVWF  77
19CF:  RLF    5E,W
19D0:  MOVWF  78
19D1:  RLF    77,F
19D2:  RLF    78,F
19D3:  MOVLW  FC
19D4:  ANDWF  77,F
19D5:  MOVF   1F,W
19D6:  ANDLW  C3
19D7:  IORWF  77,W
19D8:  MOVWF  1F
....................    delay_us(10);
19D9:  MOVLW  10
19DA:  MOVWF  77
19DB:  DECFSZ 77,F
19DC:  GOTO   1DB
19DD:  NOP
....................    adbuf[i] +=read_adc();
19DE:  BCF    03.0
19DF:  RLF    5D,W
19E0:  MOVWF  79
19E1:  RLF    5E,W
19E2:  MOVWF  7A
19E3:  MOVF   79,W
19E4:  ADDLW  38
19E5:  MOVWF  04
19E6:  BSF    03.7
19E7:  BSF    1F.1
19E8:  BTFSC  1F.1
19E9:  GOTO   1E8
19EA:  MOVF   1E,W
19EB:  MOVWF  79
19EC:  BSF    03.5
19ED:  MOVF   79,W
19EE:  MOVWF  7A
19EF:  MOVF   1E,W
19F0:  ADDWF  00,W
19F1:  INCF   04,F
19F2:  MOVWF  78
19F3:  MOVF   00,W
19F4:  BTFSC  03.0
19F5:  INCFSZ 00,W
19F6:  ADDWF  7A,F
19F7:  DECF   04,F
19F8:  MOVF   78,W
19F9:  MOVWF  00
19FA:  INCF   04,F
19FB:  MOVF   7A,W
19FC:  MOVWF  00
19FD:  BCF    03.5
19FE:  INCF   5D,F
19FF:  BTFSC  03.2
1A00:  INCF   5E,F
1A01:  GOTO   1C6
.................... }
1A02:  INCF   67,F
1A03:  BTFSC  03.2
1A04:  INCF   68,F
1A05:  GOTO   1BD
.................... }
.................... for(i=0;i<8;i++){   
1A06:  CLRF   5E
1A07:  CLRF   5D
1A08:  MOVF   5E,F
1A09:  BTFSS  03.2
1A0A:  GOTO   231
1A0B:  MOVF   5D,W
1A0C:  SUBLW  07
1A0D:  BTFSS  03.0
1A0E:  GOTO   231
....................    adbuf[i]/=50;
1A0F:  BCF    03.0
1A10:  RLF    5D,W
1A11:  MOVWF  79
1A12:  RLF    5E,W
1A13:  MOVWF  7A
1A14:  MOVF   79,W
1A15:  ADDLW  38
1A16:  MOVWF  04
1A17:  BSF    03.7
1A18:  INCF   04,F
1A19:  MOVF   00,W
1A1A:  BSF    03.6
1A1B:  MOVWF  4D
1A1C:  DECF   04,F
1A1D:  MOVF   00,W
1A1E:  MOVWF  4C
1A1F:  CLRF   4F
1A20:  MOVLW  32
1A21:  MOVWF  4E
1A22:  BCF    0A.4
1A23:  BCF    0A.3
1A24:  BCF    03.6
1A25:  GOTO   65A
1A26:  BSF    0A.4
1A27:  BSF    0A.3
1A28:  MOVF   78,W
1A29:  MOVWF  00
1A2A:  INCF   04,F
1A2B:  MOVF   79,W
1A2C:  MOVWF  00
1A2D:  INCF   5D,F
1A2E:  BTFSC  03.2
1A2F:  INCF   5E,F
1A30:  GOTO   208
.................... }
.................... tens=adbuf[0];
1A31:  BSF    03.6
1A32:  MOVF   39,W
1A33:  BCF    03.6
1A34:  MOVWF  60
1A35:  BSF    03.6
1A36:  MOVF   38,W
1A37:  BCF    03.6
1A38:  MOVWF  5F
.................... mag=adbuf[1];
1A39:  BSF    03.6
1A3A:  MOVF   3B,W
1A3B:  BCF    03.6
1A3C:  MOVWF  5C
1A3D:  BSF    03.6
1A3E:  MOVF   3A,W
1A3F:  BCF    03.6
1A40:  MOVWF  5B
....................       
.................... ftens = tens;
1A41:  MOVF   60,W
1A42:  BSF    03.6
1A43:  MOVWF  4A
1A44:  BCF    03.6
1A45:  MOVF   5F,W
1A46:  BSF    03.6
1A47:  MOVWF  49
1A48:  BCF    0A.4
1A49:  BCF    0A.3
1A4A:  BCF    03.6
1A4B:  CALL   683
1A4C:  BSF    0A.4
1A4D:  BSF    0A.3
1A4E:  MOVF   7A,W
1A4F:  BSF    03.6
1A50:  MOVWF  33
1A51:  MOVF   79,W
1A52:  MOVWF  32
1A53:  MOVF   78,W
1A54:  MOVWF  31
1A55:  MOVF   77,W
1A56:  MOVWF  30
.................... ftens *= atens;
1A57:  BCF    03.6
1A58:  MOVF   3C,W
1A59:  BSF    03.6
1A5A:  MOVWF  4A
1A5B:  BCF    03.6
1A5C:  MOVF   3B,W
1A5D:  BSF    03.6
1A5E:  MOVWF  49
1A5F:  BCF    0A.4
1A60:  BCF    0A.3
1A61:  BCF    03.6
1A62:  CALL   683
1A63:  BSF    0A.4
1A64:  BSF    0A.3
1A65:  BSF    03.6
1A66:  MOVF   33,W
1A67:  MOVWF  4C
1A68:  MOVF   32,W
1A69:  MOVWF  4B
1A6A:  MOVF   31,W
1A6B:  MOVWF  4A
1A6C:  MOVF   30,W
1A6D:  MOVWF  49
1A6E:  MOVF   7A,W
1A6F:  MOVWF  50
1A70:  MOVF   79,W
1A71:  MOVWF  4F
1A72:  MOVF   78,W
1A73:  MOVWF  4E
1A74:  MOVF   77,W
1A75:  MOVWF  4D
1A76:  BCF    0A.4
1A77:  BCF    0A.3
1A78:  BCF    03.6
1A79:  CALL   6A2
1A7A:  BSF    0A.4
1A7B:  BSF    0A.3
1A7C:  MOVF   7A,W
1A7D:  BSF    03.6
1A7E:  MOVWF  33
1A7F:  MOVF   79,W
1A80:  MOVWF  32
1A81:  MOVF   78,W
1A82:  MOVWF  31
1A83:  MOVF   77,W
1A84:  MOVWF  30
.................... ftens /=1000;                     //3 so le
1A85:  MOVF   33,W
1A86:  MOVWF  4C
1A87:  MOVF   32,W
1A88:  MOVWF  4B
1A89:  MOVF   31,W
1A8A:  MOVWF  4A
1A8B:  MOVF   30,W
1A8C:  MOVWF  49
1A8D:  CLRF   50
1A8E:  CLRF   4F
1A8F:  MOVLW  7A
1A90:  MOVWF  4E
1A91:  MOVLW  88
1A92:  MOVWF  4D
1A93:  BCF    0A.4
1A94:  BCF    0A.3
1A95:  BCF    03.6
1A96:  CALL   719
1A97:  BSF    0A.4
1A98:  BSF    0A.3
1A99:  MOVF   7A,W
1A9A:  BSF    03.6
1A9B:  MOVWF  33
1A9C:  MOVF   79,W
1A9D:  MOVWF  32
1A9E:  MOVF   78,W
1A9F:  MOVWF  31
1AA0:  MOVF   77,W
1AA1:  MOVWF  30
.................... ftens += btens;
1AA2:  BCF    03.6
1AA3:  MOVF   3E,W
1AA4:  BSF    03.6
1AA5:  MOVWF  4A
1AA6:  BCF    03.6
1AA7:  MOVF   3D,W
1AA8:  BSF    03.6
1AA9:  MOVWF  49
1AAA:  BCF    0A.4
1AAB:  BCF    0A.3
1AAC:  BCF    03.6
1AAD:  CALL   683
1AAE:  BSF    0A.4
1AAF:  BSF    0A.3
1AB0:  BCF    03.1
1AB1:  BSF    03.6
1AB2:  MOVF   33,W
1AB3:  MOVWF  4B
1AB4:  MOVF   32,W
1AB5:  MOVWF  4A
1AB6:  MOVF   31,W
1AB7:  MOVWF  49
1AB8:  MOVF   30,W
1AB9:  MOVWF  48
1ABA:  MOVF   7A,W
1ABB:  MOVWF  4F
1ABC:  MOVF   79,W
1ABD:  MOVWF  4E
1ABE:  MOVF   78,W
1ABF:  MOVWF  4D
1AC0:  MOVF   77,W
1AC1:  MOVWF  4C
1AC2:  BCF    0A.4
1AC3:  BCF    03.6
1AC4:  GOTO   000
1AC5:  BSF    0A.4
1AC6:  MOVF   7A,W
1AC7:  BSF    03.6
1AC8:  MOVWF  33
1AC9:  MOVF   79,W
1ACA:  MOVWF  32
1ACB:  MOVF   78,W
1ACC:  MOVWF  31
1ACD:  MOVF   77,W
1ACE:  MOVWF  30
.................... 
.................... if(flag_com == 3)          //cap nhat he so encoder
1ACF:  BSF    03.5
1AD0:  BCF    03.6
1AD1:  MOVF   66,W
1AD2:  SUBLW  03
1AD3:  BTFSS  03.2
1AD4:  GOTO   2F3
.................... {
....................    flag_com = 0;
1AD5:  CLRF   66
....................    write_EEPROM(17,2);   //run1=2
1AD6:  BCF    03.5
1AD7:  MOVF   0B,W
1AD8:  MOVWF  77
1AD9:  BCF    0B.7
1ADA:  MOVLW  11
1ADB:  BSF    03.6
1ADC:  MOVWF  0D
1ADD:  MOVLW  02
1ADE:  MOVWF  0C
1ADF:  BSF    03.5
1AE0:  BCF    0C.7
1AE1:  BSF    0C.2
1AE2:  MOVLW  55
1AE3:  MOVWF  0D
1AE4:  MOVLW  AA
1AE5:  MOVWF  0D
1AE6:  BSF    0C.1
1AE7:  BTFSC  0C.1
1AE8:  GOTO   2E7
1AE9:  BCF    0C.2
1AEA:  MOVF   77,W
1AEB:  BCF    03.5
1AEC:  BCF    03.6
1AED:  IORWF  0B,F
....................    backup_encoder () ;
1AEE:  BCF    0A.4
1AEF:  GOTO   14B
1AF0:  BSF    0A.4
.................... }  
1AF1:  GOTO   38B
1AF2:  BSF    03.5
.................... else if(flag_com == 1)          //nhan du lieu update
1AF3:  DECFSZ 66,W
1AF4:  GOTO   313
.................... {
....................    flag_com = 0;
1AF5:  CLRF   66
....................    write_EEPROM(17,2);   //run1=2
1AF6:  BCF    03.5
1AF7:  MOVF   0B,W
1AF8:  MOVWF  77
1AF9:  BCF    0B.7
1AFA:  MOVLW  11
1AFB:  BSF    03.6
1AFC:  MOVWF  0D
1AFD:  MOVLW  02
1AFE:  MOVWF  0C
1AFF:  BSF    03.5
1B00:  BCF    0C.7
1B01:  BSF    0C.2
1B02:  MOVLW  55
1B03:  MOVWF  0D
1B04:  MOVLW  AA
1B05:  MOVWF  0D
1B06:  BSF    0C.1
1B07:  BTFSC  0C.1
1B08:  GOTO   307
1B09:  BCF    0C.2
1B0A:  MOVF   77,W
1B0B:  BCF    03.5
1B0C:  BCF    03.6
1B0D:  IORWF  0B,F
....................    backup_depth () ;
1B0E:  BCF    0A.4
1B0F:  CALL   1B9
1B10:  BSF    0A.4
.................... }
1B11:  GOTO   38B
1B12:  BSF    03.5
.................... else if(flag_com == 4)          //nhan he sou tension
1B13:  MOVF   66,W
1B14:  SUBLW  04
1B15:  BTFSS  03.2
1B16:  GOTO   335
.................... {
....................    flag_com = 0;
1B17:  CLRF   66
....................    write_EEPROM(17,2);   //run1=2
1B18:  BCF    03.5
1B19:  MOVF   0B,W
1B1A:  MOVWF  77
1B1B:  BCF    0B.7
1B1C:  MOVLW  11
1B1D:  BSF    03.6
1B1E:  MOVWF  0D
1B1F:  MOVLW  02
1B20:  MOVWF  0C
1B21:  BSF    03.5
1B22:  BCF    0C.7
1B23:  BSF    0C.2
1B24:  MOVLW  55
1B25:  MOVWF  0D
1B26:  MOVLW  AA
1B27:  MOVWF  0D
1B28:  BSF    0C.1
1B29:  BTFSC  0C.1
1B2A:  GOTO   329
1B2B:  BCF    0C.2
1B2C:  MOVF   77,W
1B2D:  BCF    03.5
1B2E:  BCF    03.6
1B2F:  IORWF  0B,F
....................    backup_tens () ;
1B30:  BCF    0A.4
1B31:  GOTO   235
1B32:  BSF    0A.4
.................... } 
1B33:  GOTO   38B
1B34:  BSF    03.5
.................... else if(flag_com == 2)
1B35:  MOVF   66,W
1B36:  SUBLW  02
1B37:  BTFSS  03.2
1B38:  GOTO   38C
.................... {
....................    flag_com = 0; 
1B39:  CLRF   66
....................    get=no;              //bat truy xuat pic12f675
1B3A:  BTFSC  67.2
1B3B:  GOTO   33F
1B3C:  BCF    03.5
1B3D:  BCF    07.5
1B3E:  BSF    03.5
1B3F:  BTFSS  67.2
1B40:  GOTO   344
1B41:  BCF    03.5
1B42:  BSF    07.5
1B43:  BSF    03.5
....................    delay_ms(4);            //cho doc 6 byte
1B44:  MOVLW  04
1B45:  BCF    03.5
1B46:  BSF    03.6
1B47:  MOVWF  55
1B48:  BCF    0A.4
1B49:  BCF    0A.3
1B4A:  BCF    03.6
1B4B:  CALL   4AD
1B4C:  BSF    0A.4
1B4D:  BSF    0A.3
....................    get=yes;
1B4E:  BSF    03.5
1B4F:  BTFSC  67.1
1B50:  GOTO   354
1B51:  BCF    03.5
1B52:  BCF    07.5
1B53:  BSF    03.5
1B54:  BTFSS  67.1
1B55:  GOTO   359
1B56:  BCF    03.5
1B57:  BSF    07.5
1B58:  BSF    03.5
....................     
....................    depth = make32(buf[3],buf[2],buf[1],buf[0]);    //do sau goc khong update duoc
1B59:  MOVF   74,W
1B5A:  BCF    03.5
1B5B:  MOVWF  46
1B5C:  MOVF   73,W
1B5D:  MOVWF  45
1B5E:  MOVF   72,W
1B5F:  MOVWF  44
1B60:  MOVF   71,W
1B61:  MOVWF  43
....................    delta = make16(buf[5], buf[4]);
1B62:  MOVF   76,W
1B63:  MOVWF  5A
1B64:  MOVF   75,W
1B65:  MOVWF  59
....................    sdepth = sdepth + delta;  
1B66:  MOVF   59,W
1B67:  MOVWF  77
1B68:  MOVF   5A,W
1B69:  MOVWF  78
1B6A:  CLRF   79
1B6B:  CLRF   7A
1B6C:  BTFSS  5A.7
1B6D:  GOTO   370
1B6E:  DECF   79,F
1B6F:  DECF   7A,F
1B70:  MOVF   77,W
1B71:  ADDWF  4B,F
1B72:  MOVF   78,W
1B73:  BTFSC  03.0
1B74:  INCFSZ 78,W
1B75:  ADDWF  4C,F
1B76:  MOVF   79,W
1B77:  BTFSC  03.0
1B78:  INCFSZ 79,W
1B79:  ADDWF  4D,F
1B7A:  MOVF   7A,W
1B7B:  BTFSC  03.0
1B7C:  INCFSZ 7A,W
1B7D:  ADDWF  4E,F
....................    
....................    send_com();
1B7E:  BCF    0A.4
1B7F:  GOTO   2C0
1B80:  BSF    0A.4
....................    nd=0;
1B81:  BSF    03.5
1B82:  CLRF   65
....................    hienthi(ipage);
1B83:  BCF    03.5
1B84:  MOVF   2C,W
1B85:  BSF    03.6
1B86:  MOVWF  48
1B87:  BCF    0A.3
1B88:  BCF    03.6
1B89:  CALL   000
1B8A:  BSF    0A.3
1B8B:  BSF    03.5
.................... }
.................... /*
.................... if (dir != dirmark){
....................    erasepro = yes;      //neu khac huong danh dau met tat bo xoa lap trinh va xoa tong
....................    eraseall = yes;
.................... }
....................  */
.................... if (run3>=3)
1B8C:  BCF    03.5
1B8D:  MOVF   30,W
1B8E:  SUBLW  02
1B8F:  BTFSC  03.0
1B90:  GOTO   3A5
.................... {   
....................    run3=0;
1B91:  CLRF   30
....................    
....................    
....................   if (tt1>20)  {
1B92:  MOVF   66,F
1B93:  BTFSS  03.2
1B94:  GOTO   399
1B95:  MOVF   65,W
1B96:  SUBLW  14
1B97:  BTFSC  03.0
1B98:  GOTO   39E
....................    flag_com = 2 ;                //tu truy xuat 12f675
1B99:  MOVLW  02
1B9A:  BSF    03.5
1B9B:  MOVWF  66
....................    
....................  }
1B9C:  GOTO   3A6
1B9D:  BCF    03.5
....................  else hienthi(ipage);
1B9E:  MOVF   2C,W
1B9F:  BSF    03.6
1BA0:  MOVWF  48
1BA1:  BCF    0A.3
1BA2:  BCF    03.6
1BA3:  CALL   000
1BA4:  BSF    0A.3
1BA5:  BSF    03.5
.................... }
....................   
....................   
....................  if(flag_peek) {
1BA6:  BTFSS  67.5
1BA7:  GOTO   4F8
....................    flag_peek=0;
1BA8:  BCF    67.5
....................    
....................    get=no;              //bat truy xuat pic12f675
1BA9:  BTFSC  67.2
1BAA:  GOTO   3AE
1BAB:  BCF    03.5
1BAC:  BCF    07.5
1BAD:  BSF    03.5
1BAE:  BTFSS  67.2
1BAF:  GOTO   3B3
1BB0:  BCF    03.5
1BB1:  BSF    07.5
1BB2:  BSF    03.5
....................    
....................    delay_ms(4);            //cho doc 6 byte
1BB3:  MOVLW  04
1BB4:  BCF    03.5
1BB5:  BSF    03.6
1BB6:  MOVWF  55
1BB7:  BCF    0A.4
1BB8:  BCF    0A.3
1BB9:  BCF    03.6
1BBA:  CALL   4AD
1BBB:  BSF    0A.4
1BBC:  BSF    0A.3
....................    get=yes;
1BBD:  BSF    03.5
1BBE:  BTFSC  67.1
1BBF:  GOTO   3C3
1BC0:  BCF    03.5
1BC1:  BCF    07.5
1BC2:  BSF    03.5
1BC3:  BTFSS  67.1
1BC4:  GOTO   3C8
1BC5:  BCF    03.5
1BC6:  BSF    07.5
1BC7:  BSF    03.5
....................     
....................    depth = make32(buf[3],buf[2],buf[1],buf[0]);    //do sau goc khong update duoc
1BC8:  MOVF   74,W
1BC9:  BCF    03.5
1BCA:  MOVWF  46
1BCB:  MOVF   73,W
1BCC:  MOVWF  45
1BCD:  MOVF   72,W
1BCE:  MOVWF  44
1BCF:  MOVF   71,W
1BD0:  MOVWF  43
....................    delta = make16(buf[5], buf[4]);
1BD1:  MOVF   76,W
1BD2:  MOVWF  5A
1BD3:  MOVF   75,W
1BD4:  MOVWF  59
....................    sdepth = sdepth + delta;
1BD5:  MOVF   59,W
1BD6:  MOVWF  77
1BD7:  MOVF   5A,W
1BD8:  MOVWF  78
1BD9:  CLRF   79
1BDA:  CLRF   7A
1BDB:  BTFSS  5A.7
1BDC:  GOTO   3DF
1BDD:  DECF   79,F
1BDE:  DECF   7A,F
1BDF:  MOVF   77,W
1BE0:  ADDWF  4B,F
1BE1:  MOVF   78,W
1BE2:  BTFSC  03.0
1BE3:  INCFSZ 78,W
1BE4:  ADDWF  4C,F
1BE5:  MOVF   79,W
1BE6:  BTFSC  03.0
1BE7:  INCFSZ 79,W
1BE8:  ADDWF  4D,F
1BE9:  MOVF   7A,W
1BEA:  BTFSC  03.0
1BEB:  INCFSZ 7A,W
1BEC:  ADDWF  4E,F
....................    ddq = abs(depth-ddqold);
1BED:  MOVF   53,W
1BEE:  SUBWF  43,W
1BEF:  BSF    03.6
1BF0:  MOVWF  48
1BF1:  BCF    03.6
1BF2:  MOVF   44,W
1BF3:  BSF    03.6
1BF4:  MOVWF  49
1BF5:  BCF    03.6
1BF6:  MOVF   54,W
1BF7:  BTFSS  03.0
1BF8:  INCFSZ 54,W
1BF9:  GOTO   3FB
1BFA:  GOTO   3FE
1BFB:  BSF    03.6
1BFC:  SUBWF  49,F
1BFD:  BCF    03.6
1BFE:  MOVF   45,W
1BFF:  BSF    03.6
1C00:  MOVWF  4A
1C01:  BCF    03.6
1C02:  MOVF   55,W
1C03:  BTFSS  03.0
1C04:  INCFSZ 55,W
1C05:  GOTO   407
1C06:  GOTO   40A
1C07:  BSF    03.6
1C08:  SUBWF  4A,F
1C09:  BCF    03.6
1C0A:  MOVF   46,W
1C0B:  BSF    03.6
1C0C:  MOVWF  4B
1C0D:  BCF    03.6
1C0E:  MOVF   56,W
1C0F:  BTFSS  03.0
1C10:  INCFSZ 56,W
1C11:  GOTO   413
1C12:  GOTO   416
1C13:  BSF    03.6
1C14:  SUBWF  4B,F
1C15:  BCF    03.6
1C16:  BSF    03.6
1C17:  MOVF   48,W
1C18:  MOVWF  77
1C19:  MOVF   49,W
1C1A:  MOVWF  78
1C1B:  MOVF   4A,W
1C1C:  MOVWF  79
1C1D:  MOVF   4B,W
1C1E:  MOVWF  7A
1C1F:  BTFSS  4B.7
1C20:  GOTO   433
1C21:  MOVF   48,W
1C22:  SUBLW  00
1C23:  MOVWF  77
1C24:  CLRF   78
1C25:  MOVF   49,W
1C26:  BTFSS  03.0
1C27:  INCFSZ 49,W
1C28:  SUBWF  78,F
1C29:  CLRF   79
1C2A:  MOVF   4A,W
1C2B:  BTFSS  03.0
1C2C:  INCFSZ 4A,W
1C2D:  SUBWF  79,F
1C2E:  CLRF   7A
1C2F:  MOVF   4B,W
1C30:  BTFSS  03.0
1C31:  INCFSZ 4B,W
1C32:  SUBWF  7A,F
1C33:  MOVF   7A,W
1C34:  BCF    03.6
1C35:  MOVWF  52
1C36:  MOVF   79,W
1C37:  MOVWF  51
1C38:  MOVF   78,W
1C39:  MOVWF  50
1C3A:  MOVF   77,W
1C3B:  MOVWF  4F
....................    ddqold = depth;
1C3C:  MOVF   46,W
1C3D:  MOVWF  56
1C3E:  MOVF   45,W
1C3F:  MOVWF  55
1C40:  MOVF   44,W
1C41:  MOVWF  54
1C42:  MOVF   43,W
1C43:  MOVWF  53
....................    data[36] = depth;            //raw depth from pic12f675 co dau met dinh
1C44:  MOVF   43,W
1C45:  BSF    03.5
1C46:  MOVWF  58
....................    data[37] = depth>>8;
1C47:  BCF    03.5
1C48:  MOVF   44,W
1C49:  BSF    03.5
1C4A:  MOVWF  59
....................    data[38] = depth>>16;
1C4B:  BCF    03.5
1C4C:  MOVF   45,W
1C4D:  BSF    03.5
1C4E:  MOVWF  5A
....................    data[39] = depth>>24;
1C4F:  BCF    03.5
1C50:  MOVF   46,W
1C51:  BSF    03.5
1C52:  MOVWF  5B
....................     nd=0;
1C53:  CLRF   65
....................    ft = ddq;
1C54:  BCF    03.5
1C55:  MOVF   52,W
1C56:  BSF    03.6
1C57:  MOVWF  4B
1C58:  BCF    03.6
1C59:  MOVF   51,W
1C5A:  BSF    03.6
1C5B:  MOVWF  4A
1C5C:  BCF    03.6
1C5D:  MOVF   50,W
1C5E:  BSF    03.6
1C5F:  MOVWF  49
1C60:  BCF    03.6
1C61:  MOVF   4F,W
1C62:  BSF    03.6
1C63:  MOVWF  48
1C64:  BCF    0A.3
1C65:  BCF    03.6
1C66:  GOTO   630
1C67:  BSF    0A.3
1C68:  MOVF   7A,W
1C69:  BSF    03.6
1C6A:  MOVWF  37
1C6B:  MOVF   79,W
1C6C:  MOVWF  36
1C6D:  MOVF   78,W
1C6E:  MOVWF  35
1C6F:  MOVF   77,W
1C70:  MOVWF  34
....................    ft *=100;
1C71:  MOVF   37,W
1C72:  MOVWF  4C
1C73:  MOVF   36,W
1C74:  MOVWF  4B
1C75:  MOVF   35,W
1C76:  MOVWF  4A
1C77:  MOVF   34,W
1C78:  MOVWF  49
1C79:  CLRF   50
1C7A:  CLRF   4F
1C7B:  MOVLW  48
1C7C:  MOVWF  4E
1C7D:  MOVLW  85
1C7E:  MOVWF  4D
1C7F:  BCF    0A.4
1C80:  BCF    0A.3
1C81:  BCF    03.6
1C82:  CALL   6A2
1C83:  BSF    0A.4
1C84:  BSF    0A.3
1C85:  MOVF   7A,W
1C86:  BSF    03.6
1C87:  MOVWF  37
1C88:  MOVF   79,W
1C89:  MOVWF  36
1C8A:  MOVF   78,W
1C8B:  MOVWF  35
1C8C:  MOVF   77,W
1C8D:  MOVWF  34
....................    ft /= coef_encoder;
1C8E:  BCF    03.6
1C8F:  MOVF   58,W
1C90:  BSF    03.6
1C91:  MOVWF  4A
1C92:  BCF    03.6
1C93:  MOVF   57,W
1C94:  BSF    03.6
1C95:  MOVWF  49
1C96:  BCF    0A.4
1C97:  BCF    0A.3
1C98:  BCF    03.6
1C99:  CALL   683
1C9A:  BSF    0A.4
1C9B:  BSF    0A.3
1C9C:  BSF    03.6
1C9D:  MOVF   37,W
1C9E:  MOVWF  4C
1C9F:  MOVF   36,W
1CA0:  MOVWF  4B
1CA1:  MOVF   35,W
1CA2:  MOVWF  4A
1CA3:  MOVF   34,W
1CA4:  MOVWF  49
1CA5:  MOVF   7A,W
1CA6:  MOVWF  50
1CA7:  MOVF   79,W
1CA8:  MOVWF  4F
1CA9:  MOVF   78,W
1CAA:  MOVWF  4E
1CAB:  MOVF   77,W
1CAC:  MOVWF  4D
1CAD:  BCF    0A.4
1CAE:  BCF    0A.3
1CAF:  BCF    03.6
1CB0:  CALL   719
1CB1:  BSF    0A.4
1CB2:  BSF    0A.3
1CB3:  MOVF   7A,W
1CB4:  BSF    03.6
1CB5:  MOVWF  37
1CB6:  MOVF   79,W
1CB7:  MOVWF  36
1CB8:  MOVF   78,W
1CB9:  MOVWF  35
1CBA:  MOVF   77,W
1CBB:  MOVWF  34
....................  
....................    if(flag_dir){
1CBC:  BSF    03.5
1CBD:  BCF    03.6
1CBE:  BTFSS  67.4
1CBF:  GOTO   4F8
....................       flag_dir =0;
1CC0:  BCF    67.4
....................        
....................       if(ft > 4){ 
1CC1:  BCF    03.5
1CC2:  BSF    03.6
1CC3:  CLRF   4C
1CC4:  CLRF   4B
1CC5:  CLRF   4A
1CC6:  MOVLW  81
1CC7:  MOVWF  49
1CC8:  MOVF   37,W
1CC9:  MOVWF  50
1CCA:  MOVF   36,W
1CCB:  MOVWF  4F
1CCC:  MOVF   35,W
1CCD:  MOVWF  4E
1CCE:  MOVF   34,W
1CCF:  MOVWF  4D
1CD0:  BCF    0A.4
1CD1:  BCF    03.6
1CD2:  CALL   7A7
1CD3:  BSF    0A.4
1CD4:  BTFSS  03.0
1CD5:  GOTO   4F9
....................          mark_base =0;
1CD6:  BSF    03.5
1CD7:  CLRF   68
....................              
....................          mark_length--;
1CD8:  DECF   69,F
....................       
....................          
....................    
....................          if(mark_length == 255) { 
1CD9:  INCFSZ 69,W
1CDA:  GOTO   4EF
....................          mark_100--; 
1CDB:  DECF   6A,F
....................          mark_length = 99/base_length;       // = 9 hoac = 3
1CDC:  MOVLW  63
1CDD:  BCF    03.5
1CDE:  BSF    03.6
1CDF:  MOVWF  4C
1CE0:  BSF    03.5
1CE1:  BCF    03.6
1CE2:  MOVF   6C,W
1CE3:  BCF    03.5
1CE4:  BSF    03.6
1CE5:  MOVWF  4D
1CE6:  BCF    0A.4
1CE7:  BCF    0A.3
1CE8:  BCF    03.6
1CE9:  CALL   643
1CEA:  BSF    0A.4
1CEB:  BSF    0A.3
1CEC:  MOVF   78,W
1CED:  BSF    03.5
1CEE:  MOVWF  69
....................          
....................          }
....................    
....................    
....................          if(mark_100 == 255){
1CEF:  INCFSZ 6A,W
1CF0:  GOTO   4F4
....................             mark_500--; 
1CF1:  DECF   6B,F
....................             mark_100 = 4;
1CF2:  MOVLW  04
1CF3:  MOVWF  6A
....................          }
....................    
....................    
....................          if(mark_500 == 255){
1CF4:  INCFSZ 6B,W
1CF5:  GOTO   4F8
....................             mark_500=19;
1CF6:  MOVLW  13
1CF7:  MOVWF  6B
1CF8:  BCF    03.5
....................          }
....................       }
....................    }
....................    
....................  }
....................   
.................... if((flag_ext==1)&&(run2>=5)) {
1CF9:  BSF    03.5
1CFA:  BTFSS  67.3
1CFB:  GOTO   50A
1CFC:  BCF    03.5
1CFD:  MOVF   2F,W
1CFE:  SUBLW  04
1CFF:  BTFSS  03.0
1D00:  GOTO   503
1D01:  BSF    03.5
1D02:  GOTO   50A
....................    flag_ext = 0;
1D03:  BSF    03.5
1D04:  BCF    67.3
....................    run2=0;
1D05:  BCF    03.5
1D06:  CLRF   2F
....................    clear_interrupt(INT_EXT);
1D07:  BCF    0B.1
....................    enable_interrupts(INT_EXT );
1D08:  BSF    0B.4
1D09:  BSF    03.5
....................    
.................... }
....................   
.................... if(!gaussing){
1D0A:  BCF    03.5
1D0B:  BTFSC  06.5
1D0C:  GOTO   522
....................       delay_ms(5);
1D0D:  MOVLW  05
1D0E:  BSF    03.6
1D0F:  MOVWF  55
1D10:  BCF    0A.4
1D11:  BCF    0A.3
1D12:  BCF    03.6
1D13:  CALL   4AD
1D14:  BSF    0A.4
1D15:  BSF    0A.3
....................       gaussing = yes;
1D16:  BSF    03.5
1D17:  BTFSC  67.1
1D18:  GOTO   51C
1D19:  BCF    03.5
1D1A:  BCF    06.5
1D1B:  BSF    03.5
1D1C:  BTFSS  67.1
1D1D:  GOTO   521
1D1E:  BCF    03.5
1D1F:  BSF    06.5
1D20:  BSF    03.5
1D21:  BCF    03.5
.................... }
....................  
.................... //------------------------------------------------------
.................... n_but++;
1D22:  INCF   61,F
1D23:  BTFSC  03.2
1D24:  INCF   62,F
.................... if(n_but>50)
1D25:  MOVF   62,F
1D26:  BTFSS  03.2
1D27:  GOTO   52C
1D28:  MOVF   61,W
1D29:  SUBLW  32
1D2A:  BTFSC  03.0
1D2B:  GOTO   531
.................... {
....................    n_but=0;
1D2C:  CLRF   62
1D2D:  CLRF   61
....................    but_flag=0;
1D2E:  BSF    03.5
1D2F:  BCF    67.0
1D30:  BCF    03.5
.................... }
.................... if(but_flag==0)
1D31:  BSF    03.5
1D32:  BTFSC  67.0
1D33:  GOTO   5E1
.................... {
....................    if(!page)                  //chuyen trang
1D34:  BCF    03.5
1D35:  BTFSC  06.3
1D36:  GOTO   56A
....................    {
....................       ipage++;
1D37:  INCF   2C,F
....................       if(ipage>2) ipage=0;
1D38:  MOVF   2C,W
1D39:  SUBLW  02
1D3A:  BTFSC  03.0
1D3B:  GOTO   53D
1D3C:  CLRF   2C
....................       
....................       lcd_gotoxy(1,1);                   
1D3D:  MOVLW  01
1D3E:  BSF    03.6
1D3F:  MOVWF  55
1D40:  MOVWF  56
1D41:  BCF    0A.4
1D42:  BCF    0A.3
1D43:  BCF    03.6
1D44:  CALL   7E5
1D45:  BSF    0A.4
1D46:  BSF    0A.3
....................       lcd_putc("                                        ");
1D47:  MOVLW  83
1D48:  BSF    03.6
1D49:  MOVWF  0D
1D4A:  MOVLW  04
1D4B:  MOVWF  0F
1D4C:  BCF    0A.4
1D4D:  BCF    03.6
1D4E:  CALL   32C
1D4F:  BSF    0A.4
....................       lcd_gotoxy(1,2);                   
1D50:  MOVLW  01
1D51:  BSF    03.6
1D52:  MOVWF  55
1D53:  MOVLW  02
1D54:  MOVWF  56
1D55:  BCF    0A.4
1D56:  BCF    0A.3
1D57:  BCF    03.6
1D58:  CALL   7E5
1D59:  BSF    0A.4
1D5A:  BSF    0A.3
....................       lcd_putc("                                        ");
1D5B:  MOVLW  98
1D5C:  BSF    03.6
1D5D:  MOVWF  0D
1D5E:  MOVLW  04
1D5F:  MOVWF  0F
1D60:  BCF    0A.4
1D61:  BCF    03.6
1D62:  CALL   32C
1D63:  BSF    0A.4
....................        n_but=0;     
1D64:  CLRF   62
1D65:  CLRF   61
....................       but_flag=1;
1D66:  BSF    03.5
1D67:  BSF    67.0
....................    }
1D68:  GOTO   5E1
1D69:  BCF    03.5
....................       
....................          //---------------------------------------------- clear depth   
....................    else if(!clear)
1D6A:  BTFSC  06.4
1D6B:  GOTO   576
....................    {
....................       sdepth=0;
1D6C:  CLRF   4E
1D6D:  CLRF   4D
1D6E:  CLRF   4C
1D6F:  CLRF   4B
....................       n_but=0;      
1D70:  CLRF   62
1D71:  CLRF   61
....................       but_flag=1;
1D72:  BSF    03.5
1D73:  BSF    67.0
....................       
....................    }  
1D74:  GOTO   5E1
1D75:  BCF    03.5
....................    else if(!mark)
1D76:  BTFSC  06.1
1D77:  GOTO   59F
....................    {
....................       gaussing=no;
1D78:  BSF    03.5
1D79:  BTFSC  67.2
1D7A:  GOTO   57E
1D7B:  BCF    03.5
1D7C:  BCF    06.5
1D7D:  BSF    03.5
1D7E:  BTFSS  67.2
1D7F:  GOTO   583
1D80:  BCF    03.5
1D81:  BSF    06.5
1D82:  BSF    03.5
....................       
....................       delay_ms(2);
1D83:  MOVLW  02
1D84:  BCF    03.5
1D85:  BSF    03.6
1D86:  MOVWF  55
1D87:  BCF    0A.4
1D88:  BCF    0A.3
1D89:  BCF    03.6
1D8A:  CALL   4AD
1D8B:  BSF    0A.4
1D8C:  BSF    0A.3
....................       
....................       gaussing=yes;
1D8D:  BSF    03.5
1D8E:  BTFSC  67.1
1D8F:  GOTO   593
1D90:  BCF    03.5
1D91:  BCF    06.5
1D92:  BSF    03.5
1D93:  BTFSS  67.1
1D94:  GOTO   598
1D95:  BCF    03.5
1D96:  BSF    06.5
1D97:  BSF    03.5
....................       n_but=0;      
1D98:  BCF    03.5
1D99:  CLRF   62
1D9A:  CLRF   61
....................       but_flag=1;
1D9B:  BSF    03.5
1D9C:  BSF    67.0
....................    }
1D9D:  GOTO   5E1
1D9E:  BCF    03.5
....................    else if(!start)
1D9F:  BTFSC  06.2
1DA0:  GOTO   5E2
....................    {
....................       
....................       mark_base=0;
1DA1:  BSF    03.5
1DA2:  CLRF   68
....................       mark_length=0;
1DA3:  CLRF   69
....................       mark_100=0;
1DA4:  CLRF   6A
....................       mark_500=0;
1DA5:  CLRF   6B
....................       ipage=0;
1DA6:  BCF    03.5
1DA7:  CLRF   2C
....................       gaussing=no;
1DA8:  BSF    03.5
1DA9:  BTFSC  67.2
1DAA:  GOTO   5AE
1DAB:  BCF    03.5
1DAC:  BCF    06.5
1DAD:  BSF    03.5
1DAE:  BTFSS  67.2
1DAF:  GOTO   5B3
1DB0:  BCF    03.5
1DB1:  BSF    06.5
1DB2:  BSF    03.5
....................       delay_ms(2);
1DB3:  MOVLW  02
1DB4:  BCF    03.5
1DB5:  BSF    03.6
1DB6:  MOVWF  55
1DB7:  BCF    0A.4
1DB8:  BCF    0A.3
1DB9:  BCF    03.6
1DBA:  CALL   4AD
1DBB:  BSF    0A.4
1DBC:  BSF    0A.3
....................       gaussing=yes;
1DBD:  BSF    03.5
1DBE:  BTFSC  67.1
1DBF:  GOTO   5C3
1DC0:  BCF    03.5
1DC1:  BCF    06.5
1DC2:  BSF    03.5
1DC3:  BTFSS  67.1
1DC4:  GOTO   5C8
1DC5:  BCF    03.5
1DC6:  BSF    06.5
1DC7:  BSF    03.5
....................       n_but=0;      
1DC8:  BCF    03.5
1DC9:  CLRF   62
1DCA:  CLRF   61
....................       but_flag=1;
1DCB:  BSF    03.5
1DCC:  BSF    67.0
....................       erasepro=yes;
1DCD:  BTFSC  67.1
1DCE:  GOTO   5D2
1DCF:  BCF    03.5
1DD0:  BCF    06.6
1DD1:  BSF    03.5
1DD2:  BTFSS  67.1
1DD3:  GOTO   5D7
1DD4:  BCF    03.5
1DD5:  BSF    06.6
1DD6:  BSF    03.5
....................       eraseall=no;      //luon bat xoa tong
1DD7:  BTFSC  67.2
1DD8:  GOTO   5DC
1DD9:  BCF    03.5
1DDA:  BCF    06.7
1DDB:  BSF    03.5
1DDC:  BTFSS  67.2
1DDD:  GOTO   5E1
1DDE:  BCF    03.5
1DDF:  BSF    06.7
1DE0:  BSF    03.5
1DE1:  BCF    03.5
....................       
....................    }
.................... }  
....................      
....................   
....................   //==------------------------------------------ ghj du lieu vao flash
.................... wflash_count++;
1DE2:  INCF   63,F
1DE3:  BTFSC  03.2
1DE4:  INCF   64,F
.................... if (wflash_count>=500)                            //2.4s/ ghj 1 lan
1DE5:  MOVF   64,W
1DE6:  SUBLW  00
1DE7:  BTFSC  03.0
1DE8:  GOTO   60E
1DE9:  XORLW  FF
1DEA:  BTFSS  03.2
1DEB:  GOTO   5F0
1DEC:  MOVF   63,W
1DED:  SUBLW  F3
1DEE:  BTFSC  03.0
1DEF:  GOTO   60E
.................... {
....................     
....................      backup_depth(); 
1DF0:  BCF    0A.4
1DF1:  CALL   1B9
1DF2:  BSF    0A.4
....................      //update_flash();
....................   
....................   wflash_count=0;
1DF3:  CLRF   64
1DF4:  CLRF   63
....................   portd3 ^=yes;                  // kiem tra thoi gian cap nhat flash      
1DF5:  MOVLW  00
1DF6:  BTFSC  08.3
1DF7:  MOVLW  01
1DF8:  BSF    03.6
1DF9:  MOVWF  49
1DFA:  MOVLW  00
1DFB:  BSF    03.5
1DFC:  BCF    03.6
1DFD:  BTFSC  67.1
1DFE:  MOVLW  01
1DFF:  BCF    03.5
1E00:  BSF    03.6
1E01:  XORWF  49,W
1E02:  MOVWF  78
1E03:  BTFSC  78.0
1E04:  GOTO   608
1E05:  BCF    03.6
1E06:  BCF    08.3
1E07:  BSF    03.6
1E08:  BTFSS  78.0
1E09:  GOTO   60D
1E0A:  BCF    03.6
1E0B:  BSF    08.3
1E0C:  BSF    03.6
1E0D:  BCF    03.6
.................... }  
.................... update_data();
1E0E:  BCF    0A.3
1E0F:  GOTO   662
1E10:  BSF    0A.3
1E11:  GOTO   0FB
....................  //fputc(PC1,0xaa);
.................... //----------------------------------------chuan bj du lieu gui cong com
.................... 
.................... 
....................  
....................  
....................    
.................... //-----------------------------------------gui cong com
.................... 
.................... 
.................... 
.................... }
.................... }
.................... 
1E12:  SLEEP

Configuration Fuses:
   Word  1: 2FE2   HS NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
